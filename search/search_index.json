{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to SlottyMedia","text":"<p>Welcome! \ud83e\udd73</p>"},{"location":"#whats-slottymedia","title":"What's SlottyMedia?","text":"<p>SlottyMedia is a project currently developed by 5 students. We are currently studying at Corporate State University Baden-W\u00fcrttemberg Heidenheim.</p> <p>Contributors:</p> <ul> <li>@ReySKR</li> <li>@deadmade</li> <li>@MarioDiCaprio</li> <li>@Aly</li> <li>@rubennlr</li> </ul> <p>Main idea for SlottyMedia is providing a social media platform which combines twitter and reddit:</p> <ul> <li>You'll have the best social media layout inspired by twitter.</li> <li>You'll have the topic and thread based system by reddit.</li> </ul>"},{"location":"#how-to-run-the-current-in-development-documentation","title":"How to run the current (-in development) documentation","text":"<p>If you want to run the latest documentation of the in dev sprint you'll have to run it locally instead of using the github pages website.</p> <p>In order to run it locally you have to install the following package via pip:</p> <p><code>pip install mkdocs</code></p> <p>To run it locally just run the following command in the repo root folder:</p> <p><code>mkdocs serve</code></p> <p>Just follow the steps provided in the command line and open the corresponding url in your browser.</p>"},{"location":"build/","title":"Contribute &amp; Build","text":""},{"location":"build/#how-do-i-contribute-as-a-developer","title":"How do I contribute as a developer?","text":"<p>READ THIS GUIDE BEFORE CONTRIBUTING</p> <p>Since our project is secured by some pre-commit hooks you have to configure the project correctly before contributing.</p> <p>This is done as followed:</p> <p>Clone the project</p> <p><code>git clone https://github.com/SlottySlots/SlottyMedia.git</code></p> <p>Make sure you have installed the following packages globally.</p> <ul> <li>Gitleaks: Needed for a secret scan pre-commit hook (Make sure it's properly installed by typing gitleaks in your terminal)</li> <li>Node Package Manager: Used to install needed dependencies for pre-commit hooks</li> </ul> <p>After you've cloned the repo make sure to install all needed packages for the hooks via:</p> <p><code>npm i</code></p> <p>and run:</p> <p><code>npm run init</code></p> <p>Now it should be configured \ud83d\ude80</p>"},{"location":"build/#how-to-set-up-supabase","title":"How to Set Up Supabase","text":"<p>To store our secrets, we use Environemt Variables. To set this up, follow this for the individual operating system.</p>"},{"location":"build/#mac","title":"Mac","text":"<p>export SUPABASE_URL=\"supabaseURL\" export SUPABASE_KEY=\"\"supabaseKey\"</p>"},{"location":"build/#windows","title":"Windows","text":"<p>setx SUPABASE_URL \"supabaseURL\" setx SUPABASE_KEY \"supabaseKey\"</p> <p>You can find the required URL and the anonymous public key in the Supabase dashboard at the following link: Supabase API Settings</p>"},{"location":"build/#docker-containerized-project-setup-usage","title":"Docker containerized project setup + Usage","text":"<p>The project leverages Docker containers to streamline the deployment and management of the Blazor web application and the Supabase backend.</p>"},{"location":"build/#setup","title":"Setup","text":"<p>Docker: Ensure that Docker is installed on your system. Environment Variables: The project relies on environment variables for configuration. Make sure you have the necessary .env file - located in the root directory of the project.</p>"},{"location":"build/#build-start-stop-containers","title":"Build, start, stop containers","text":"<p>Navigate to SlottyMedia/docker, where the Docker-Compose-File is located, to manage all containers: - <code>docker compose up --build -d</code>: Build the images and start all containers - <code>docker compose up --d</code>: Start all containers - <code>docker compose down</code>: Stop all containers and deletes the images. - <code>docker compose stop</code>: Stop all containers</p>"},{"location":"build/#advanced-container-management","title":"Advanced container management","text":"<ul> <li><code>docker ps</code>: List all running containers</li> <li><code>docker ps -a</code>: List all available containers</li> <li><code>docker logs [ContainerID]</code>: Show logs of specific container</li> <li><code>docker exec -it [ContainerID] [Command]</code>: Execute given linux command in container </li> </ul>"},{"location":"build/#accessing-the-services","title":"Accessing the services","text":"<ul> <li>Blazor Application: Once the containers are running, you can access the Blazor web application by navigating to http://localhost:5234 in your web browser</li> <li>Supabase Dashboard: If you need to access the Supabase dashboard, you can do so at http://localhost:8000 from your host machine.  Use the credentials defined in the .env file</li> <li>Supabase API: The Blazor application connects to the Supabase backend via the Kong API gateway. The API gateway is accessible from within the Blazor container using http://supabase-kong:8000</li> </ul> <p>Happy coding! \ud83e\udd73\ud83d\ude80</p>"},{"location":"database/","title":"Database Model","text":""},{"location":"database/#entity-relationship-diagram","title":"Entity-Relationship-Diagram","text":""},{"location":"database/#table-description","title":"Table Description","text":"<p>The following tables represent:</p> <ul> <li>User: Represents a user after its login</li> <li>Role: Represents the role of a user e.g. a normal user, or a admin of SlottyMedia</li> <li>Forum: The root of any post e.g. a computer science forum providing posts related to computer science</li> <li>Post: Posts which may be created under a specific topic (forum)</li> <li>Comment: Comments which may be provided by users to a corresponding post (nesting comments e.g. answers on comments may be allowed in the future)</li> <li>User_Like_Post_Relation: A linking table which provides information for the like / dislike ratio of a post.</li> <li>Follower_User_Relation: A linking table which provided information for the following / follower relation of users</li> </ul>"},{"location":"database/#featureset","title":"Featureset","text":"<p>The current database model enables the following featureset:</p> <p>Features:</p> <ul> <li>A login system (currently still in development)</li> <li>Reddit clone: Being able to add a forum with multiple posts and corresponding comments written by any user</li> <li>Role management: Being able to add a admin panel for SlottyMedia</li> </ul>"},{"location":"exceptions/","title":"Exception Handling in Our Project","text":"<p>To handle exceptions in our project without returning null or an error message in each method, and to enable quick and easy error logging, we need to create our own exceptions. These custom exceptions allow us to pass messages and general exceptions to the next higher class without major issues.</p>"},{"location":"exceptions/#benefits-of-custom-exceptions","title":"Benefits of Custom Exceptions","text":"<ol> <li>Clarity and Maintainability: Custom exceptions provide clear and specific error messages, making the code easier to maintain and understand.</li> <li>Centralized Error Handling: By funneling errors through custom exceptions, we can handle them in a centralized manner, improving consistency.</li> <li>Enhanced Logging: Custom exceptions can include additional context and information, making it easier to log and debug issues.</li> </ol>"},{"location":"exceptions/#implementation-guidelines","title":"Implementation Guidelines","text":""},{"location":"exceptions/#creating-custom-exceptions","title":"Creating Custom Exceptions","text":"<p>Define custom exceptions that extend from the base <code>Exception</code> class. Custom exceptions should have constructors that allow for detailed error messages and optionally, the inclusion of inner exceptions.</p>"},{"location":"exceptions/#throwing-custom-exceptions","title":"Throwing Custom Exceptions","text":"<p>Throw custom exceptions where errors are detected. Ensure that error conditions are checked, and custom exceptions are thrown with appropriate messages that describe the error context.</p>"},{"location":"exceptions/#handling-custom-exceptions","title":"Handling Custom Exceptions","text":"<p>Catch and handle exceptions at appropriate levels in the application, typically in the ViewModel. Ensure that exceptions are caught, logged, and the error messages are forwarded to the View in a user-friendly manner.</p>"},{"location":"exceptions/#important-considerations","title":"Important Considerations","text":"<ul> <li>Error Handling in ViewModel: Errors should be caught at the latest in the ViewModel and then the message should be forwarded to the View. Try-catch blocks should not be implemented directly in the View to maintain separation of concerns.</li> <li>Logging: Ensure all exceptions are logged appropriately to facilitate debugging and monitoring.</li> </ul>"},{"location":"guidelines/","title":"Guidelines / Conventions","text":""},{"location":"guidelines/#general-formatting-guidelines","title":"General Formatting Guidelines","text":"<ul> <li>Preserve Settings: Follow the existing project formatting rules.</li> <li>Automatic Formatting: Regularly use Rider's automatic formatting function (Ctrl+Alt+L).</li> </ul>"},{"location":"guidelines/#code-layout","title":"Code Layout","text":"<ul> <li>Line Length: Maximum of 120 characters per line.</li> <li>Indented Blocks: Use tabs or 4 spaces for indentation (depending on project settings).</li> <li>Blank Lines: Use blank lines to separate logical code blocks.</li> </ul>"},{"location":"guidelines/#indentation-and-spacing","title":"Indentation and Spacing","text":"<ul> <li>Indent Blocks: Always use 4 spaces per indentation level.</li> <li>Braces: Opening braces on the same line as the statement, closing braces on a new line.</li> <li>Operator Spacing: Add spaces around operators like +, -, *, /, =, ==, etc.</li> <li>Commas and Semicolons: Add a space after commas and semicolons, not before.</li> </ul>"},{"location":"guidelines/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>Classes and Methods: Use PascalCase.</li> <li>Variables and Fields: Use camelCase.</li> <li>Constants: Use SCREAMING_SNAKE_CASE.</li> </ul>"},{"location":"guidelines/#comments","title":"Comments","text":"<p>If not obvious, or the method is more than 5 lines, it should be commented.</p> <ul> <li>Single-line Comments: Use // for single-line comments</li> <li>Multi-line Comments: Use /* ... */ for multi-line comments.</li> <li>Documentation Comments: Use /// for documentation comments.</li> </ul>"},{"location":"guidelines/#documentation-comments","title":"Documentation Comments","text":"<p>We use the xml documentation convention by microsoft</p> <p>In short: You can use the following tags structures in your documentation comment to specify properties of the following code:</p> <ul> <li><code>&lt;summary&gt;Your code summary&lt;/summary&gt;</code></li> <li><code>&lt;param name=\"str\"&gt;Describe parameter.&lt;/param&gt;</code>: Usage may also be nested within summary</li> <li><code>&lt;code&gt;Use a codeblock within&lt;/code&gt;</code></li> <li><code>&lt;example&gt;Put a example here&lt;/example&gt;</code></li> </ul> <p>There are plenty more tags. You can even reference other doc segments.  If you need other tags, take a look here</p>"},{"location":"guidelines/#usings-and-namespaces","title":"Usings and Namespaces","text":"<ul> <li>Sorting: Sort usings alphabetically and group by system namespace.</li> <li>Removing: Remove unused usings.</li> <li>Namespace: A file should contain a single namespace.</li> </ul>"},{"location":"guidelines/#error-handling","title":"Error Handling","text":"<ul> <li>Exceptions: Always catch specific exceptions when possible.</li> </ul>"},{"location":"guidelines/#unit-tests","title":"Unit Tests","text":"<p>Every method should be unit testable and have a unit test for it.</p>"},{"location":"guidelines/#follow-mvvm-pattern","title":"Follow MVVM Pattern!","text":""},{"location":"guidelines/#commit-messages","title":"Commit Messages","text":""},{"location":"guidelines/#how-should-my-commit-messages-look-like","title":"How should my commit messages look like?","text":"<p>Our repo follows the Conventional Commits guidelines.</p> <p>Allowed commit types are specified as following:</p> <ul> <li>feat -&gt; Introduces a new features</li> <li>fix -&gt; Fixes a bug</li> <li>docs -&gt; Updates on the docs</li> <li>chore -&gt; Updates a grunt task; no-production code change</li> <li>style -&gt; Formatting code style (missing semicolon, prettier execution, etc)</li> <li>refactor -&gt; Refactoring existing code e.g. renaming a variable, reworking a function</li> <li>ci -&gt; CI Tasks e.g. adding a hook</li> <li>test -&gt; Adding new tests, refactoring tests, deleting old tests</li> <li>revert -&gt; Revert old commits</li> <li>perf -&gt; Performance related refactoring, without functional changes</li> </ul>"},{"location":"guidelines/#branch-naming","title":"Branch Naming","text":"<p>Your branche names should follow this style:</p> <p>[commit-type]/[topic-of-branch-seperated-by-hyphen]</p> <p>F.e. if you want to introduce a new cool type of button your branch should have the name:</p> <p>feat/cool-new-button</p>"},{"location":"ldm/","title":"\u00c4nderungen an der Datenbank","text":"<p>Es gibt zwei grundlegende Wege, um \u00c4nderungen an unseren lokalen Datenbanken und an der Online-Supabase-Datenbank vorzunehmen.</p>"},{"location":"ldm/#1-klassischer-weg-mit-sql-skripten","title":"1. Klassischer Weg mit SQL-Skripten","text":"<p>Die erste M\u00f6glichkeit ist der klassische Ansatz: Man erstellt manuell ein SQL-Skript mit den gew\u00fcnschten \u00c4nderungen und legt dieses im Ordner <code>supabase/migrations</code> ab. So wird es allen Teammitgliedern zug\u00e4nglich gemacht. Um die \u00c4nderungen dann in die Datenbank zu \u00fcbernehmen, muss jeder das neue Skript auf der Supabase-Webseite unter http://localhost:54323/project/default/sql/1 einf\u00fcgen und ausf\u00fchren.</p>"},{"location":"ldm/#2-supabase-cli-verwenden","title":"2. Supabase CLI verwenden","text":"<p>Die zweite, etwas modernere und bequemere Methode ist die Nutzung der Supabase CLI. Um diese zu installieren, folge einfach den Anweisungen im Supabase CLI Guide.</p>"},{"location":"ldm/#supabase-umgebung-starten","title":"Supabase Umgebung starten","text":"<p>Sobald die CLI eingerichtet ist, navigiere in den <code>SlottyMedia</code>-Ordner (nicht in den des C#-Projekts), \u00f6ffne die Konsole und f\u00fchre den folgenden Befehl aus:</p> <pre><code>supabase start\n</code></pre> <p>Damit wird automatisch eine Supabase-Umgebung mithilfe von Docker erstellt, ohne dass du manuell eingreifen musst.</p>"},{"location":"ldm/#aktuelle-migration-anwenden","title":"Aktuelle Migration anwenden","text":"<p>Um die aktuelle Migration in die Datenbank zu laden, f\u00fchre diesen Befehl aus:</p> <pre><code>supabase migration up\n</code></pre>"},{"location":"ldm/#anderungen-an-alle-weitergeben","title":"\u00c4nderungen an alle weitergeben","text":"<p>Um deine \u00c4nderungen mit dem Team zu teilen, benutze folgenden Befehl:</p> <pre><code>supabase db diff -f &lt;name-of-file&gt;\n</code></pre>"},{"location":"ldm/#datenbank-zurucksetzen","title":"Datenbank zur\u00fccksetzen","text":"<p>Damit andere die \u00c4nderungen \u00fcbernehmen k\u00f6nnen, m\u00fcssen sie lediglich den folgenden Befehl ausf\u00fchren:</p> <pre><code>supabase db reset\n</code></pre> <p>Mit diesen Schritten wird sichergestellt, dass alle stets mit der aktuellsten Datenbankversion arbeiten.</p>"},{"location":"logging/","title":"Logging Guidelines","text":""},{"location":"logging/#logger-implementation","title":"Logger Implementation \ud83d\udccb","text":"<p>The logger is encapsulated within its own project, named <code>SlottyMedia.LoggerProvider</code>. This design ensures that the logger is accessible to all projects within the SlottyMedia ecosystem.</p>"},{"location":"logging/#logger-targets","title":"Logger Targets \ud83c\udfaf","text":"<p>The current implementation of the logger supports two targets: the console and a text file.</p>"},{"location":"logging/#text-file-logging","title":"Text File Logging \ud83d\udcc4","text":"<ul> <li>Logging to File: All log entries are recorded in a text file.</li> <li>Daily Log Files: A new log file is created each day.</li> <li>Archiving: The previous day's log file is moved to the archives folder and retained for 30 days before being deleted.</li> <li>Storage Location: Log files are stored in the <code>logs</code> folder within the directory where the SlottyMedia project is executed.</li> </ul>"},{"location":"logging/#console-logging","title":"Console Logging \ud83d\udda5\ufe0f","text":"<ul> <li>Log Levels: Logs from <code>Debug</code> to <code>Fatal</code> levels are output to the console.</li> <li>Exclusions: Microsoft logs below the <code>Warn</code> level are not logged to the console.</li> <li>Color Scheme: The console output uses a defined color scheme for quicker log identification.</li> </ul>"},{"location":"logging/#base-exception","title":"Base Exception \u2757","text":"<p>To centralize exception logging, a single <code>BaseException</code> class is implemented within the <code>LoggingProvider</code> project. This class automatically logs exceptions when they occur.</p>"},{"location":"logging/#implementing-the-logger","title":"Implementing the Logger \ud83d\ude80","text":"<p>To integrate the logger into your project, follow these steps:</p> <ol> <li>Reference the Logger Project: Add a reference to <code>SlottyMedia.LoggingProvider</code> in your project.</li> <li> <p>Import the Namespace: Include the following using directive:</p> <pre><code>using SlottyMedia.LoggingProvider;\n</code></pre> </li> <li> <p>Get the Logger Instance: Retrieve the logger instance with the following code:</p> <pre><code>Logging&lt;Program&gt; logger = new ();\n</code></pre> </li> <li> <p>Use LogLevel Methods: Utilize the logger instance to call the various log level methods as needed.</p> </li> </ol> <p>Implementation</p> <p>Configuration</p>"},{"location":"mvvm/","title":"Project Structure Based on the MVVM Principle","text":"<p>In our project, we implement the MVVM principle to enable unit tests for all methods and ensure the functionality of our site. This structure provides good abstraction, allowing us to easily change components in the Model or ViewModel without impacting other parts of the project.</p>"},{"location":"mvvm/#model-m","title":"Model (M)","text":"<p>The Model manages the data in the database (Insert, Update, Delete, Get). This area is divided into two parts:</p> <ul> <li>Models Folder: This is where all database DTOs (Data Transfer Objects) are stored, representing the tables in the database.</li> <li>Services Folder: This part implements actions for individual models. CRUD actions (Create, Read, Update, Delete) are performed here by directly accessing the database.</li> </ul>"},{"location":"mvvm/#viewmodel-vm","title":"ViewModel (VM)","text":"<p>The ViewModel prepares data from the Model for the View and makes it available to the View. It does not fetch or update data from the database. The ViewModel ensures that actions in the Model are initiated and that data from the View is available to the Model. A separate ViewModel is created for each View and is stored in the ViewModel Folder.</p>"},{"location":"mvvm/#view-v","title":"View (V)","text":"<p>The View is the user interface that the users see. It is solely responsible for displaying data, capturing input, and passing it to the ViewModel. The View does not process data or write to the database. The Views are stored in the Pages Folder.</p>"},{"location":"mvvm/#integration","title":"Integration","text":"<p>To use a Model and a ViewModel in a View, they must be registered in the <code>Program.cs</code> file.</p>"},{"location":"mvvm/#example","title":"Example","text":"<pre><code>// Register ViewModels\nbuilder.Services.AddScoped&lt;TestUserVm&gt;();\n</code></pre>"},{"location":"rls/","title":"\ud83c\udf1f Role Level Security (RLS) Documentation","text":""},{"location":"rls/#overview","title":"\ud83d\udccb Overview","text":"<p>Role Level Security (RLS) helps control access to your database tables based on user roles. Here's a quick guide to the RLS policies applied to our tables.</p>"},{"location":"rls/#general-policies","title":"\ud83d\udee0\ufe0f General Policies","text":"<ul> <li>\ud83d\uddd1\ufe0f DELETE: User-based, for authenticated users</li> <li>\u2795 INSERT: Authenticated users only</li> <li>\ud83d\udd0d SELECT: Public access</li> <li>\u270f\ufe0f UPDATE: User-based, for authenticated users</li> </ul>"},{"location":"rls/#table-specific-policies","title":"\ud83d\udcc2 Table-Specific Policies","text":""},{"location":"rls/#comment","title":"\ud83d\udcdd Comment","text":"<ul> <li>RLS: Enabled</li> <li>\ud83d\uddd1\ufe0f DELETE: Authenticated users</li> <li>\u2795 INSERT: Authenticated users</li> <li>\ud83d\udd0d SELECT: Public</li> <li>\u270f\ufe0f UPDATE: Authenticated users</li> </ul>"},{"location":"rls/#follower_user_relation","title":"\ud83d\udc65 Follower_User_Relation","text":"<ul> <li>RLS: Enabled</li> <li>\ud83d\uddd1\ufe0f DELETE: Authenticated users</li> <li>\u2795 INSERT: Authenticated users</li> <li>\ud83d\udd0d SELECT: Public</li> <li>\u270f\ufe0f UPDATE: Authenticated users</li> </ul>"},{"location":"rls/#forum","title":"\ud83d\udce2 Forum","text":"<ul> <li>RLS: Enabled</li> <li>\ud83d\uddd1\ufe0f DELETE: Authenticated users</li> <li>\u2795 INSERT: Authenticated users</li> <li>\ud83d\udd0d SELECT: Public</li> <li>\u270f\ufe0f UPDATE: Authenticated users</li> </ul>"},{"location":"rls/#posts","title":"\ud83d\uddc2\ufe0f Posts","text":"<ul> <li>RLS: Enabled</li> <li>\ud83d\uddd1\ufe0f DELETE: Authenticated users</li> <li>\u2795 INSERT: Authenticated users</li> <li>\ud83d\udd0d SELECT: Public</li> <li>\u270f\ufe0f UPDATE: Authenticated users</li> </ul>"},{"location":"rls/#role","title":"\ud83d\udee0\ufe0f Role","text":"<ul> <li>RLS: Enabled</li> <li>\u2795 INSERT: Authenticated users</li> <li>\ud83d\udd0d SELECT: Public</li> </ul>"},{"location":"rls/#user","title":"\ud83d\udc64 User","text":"<ul> <li>RLS: Enabled</li> <li>\ud83d\uddd1\ufe0f DELETE: Authenticated users</li> <li>\u2795 INSERT: Authenticated users</li> <li>\ud83d\udd0d SELECT: Public</li> <li>\u270f\ufe0f UPDATE: Public</li> </ul>"},{"location":"rls/#user_like_post_relation","title":"\u2764\ufe0f User_Like_Post_Relation","text":"<ul> <li>RLS: Enabled</li> <li>\ud83d\uddd1\ufe0f DELETE: Public</li> <li>\u2795 INSERT: Authenticated users</li> <li>\ud83d\udd0d SELECT: Public</li> <li>\u270f\ufe0f UPDATE: Authenticated users</li> </ul>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/","title":"IPostSubmissionFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents a form that is used to create a post.  It contains fields for the post's textual data and fields that  represent corresponding errors.</p> <pre><code>public interface IPostSubmissionFormVm\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#properties","title":"Properties","text":""},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#text","title":"Text","text":"<p>The post's textual content</p> <pre><code>public abstract string Text { get; set; }\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#texterrormessage","title":"TextErrorMessage","text":"<p>An optional error message related to the post's textual content</p> <pre><code>public abstract string TextErrorMessage { get; set; }\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#methods","title":"Methods","text":""},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#submitform","title":"SubmitForm()","text":"<p>Attempts to submit the form. If successful, the post was created.  Otherwise, displays an appropriate error message regarding the submission's  failure.</p> <pre><code>Task SubmitForm()\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/","title":"PostSubmissionFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <pre><code>public class PostSubmissionFormVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IPostSubmissionFormVm\n</code></pre> <p>Inheritance Object \u2192 PostSubmissionFormVmImpl Implements IPostSubmissionFormVm</p>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#properties","title":"Properties","text":""},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#text","title":"Text","text":"<pre><code>public string Text { get; set; }\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#texterrormessage","title":"TextErrorMessage","text":"<pre><code>public string TextErrorMessage { get; set; }\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<pre><code>public string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#postsubmissionformvmimpliauthservice-ipostservice-navigationmanager","title":"PostSubmissionFormVmImpl(IAuthService, IPostService, NavigationManager)","text":"<pre><code>public PostSubmissionFormVmImpl(IAuthService authService, IPostService postService, NavigationManager navigationManager)\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#parameters","title":"Parameters","text":"<p><code>authService</code> IAuthService</p> <p><code>postService</code> IPostService</p> <p><code>navigationManager</code> NavigationManager</p>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#methods","title":"Methods","text":""},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#submitform","title":"SubmitForm()","text":"<pre><code>public Task SubmitForm()\n</code></pre>"},{"location":"code/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/slottymedia.components.partial.inputarea/","title":"InputArea","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class InputArea : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 InputArea Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/slottymedia.components.partial.inputarea/#properties","title":"Properties","text":""},{"location":"code/slottymedia.components.partial.inputarea/#class","title":"Class","text":"<p>Additional CSS classes to apply to the textarea component</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.components.partial.inputarea/#id","title":"Id","text":"<p>The input field's ID</p> <pre><code>public string Id { get; set; }\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.components.partial.inputarea/#name","title":"Name","text":"<p>The input field's name</p> <pre><code>public string Name { get; set; }\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.components.partial.inputarea/#placeholder","title":"Placeholder","text":"<pre><code>public string Placeholder { get; set; }\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.components.partial.inputarea/#type","title":"Type","text":"<pre><code>public string Type { get; set; }\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.components.partial.inputarea/#value","title":"Value","text":"<pre><code>public string Value { get; set; }\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/slottymedia.components.partial.inputarea/#valuechanged","title":"ValueChanged","text":"<pre><code>public EventCallback&lt;string&gt; ValueChanged { get; set; }\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#property-value_6","title":"Property Value","text":"<p>EventCallback&lt;String&gt;</p>"},{"location":"code/slottymedia.components.partial.inputarea/#constructors","title":"Constructors","text":""},{"location":"code/slottymedia.components.partial.inputarea/#inputarea_1","title":"InputArea()","text":"<pre><code>public InputArea()\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#methods","title":"Methods","text":""},{"location":"code/slottymedia.components.partial.inputarea/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/slottymedia.components.partial.inputarea/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/","title":"PostSubmissionForm","text":"<p>Namespace: SlottyMedia.Components.Partial.MainLayout</p> <pre><code>public class PostSubmissionForm : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 PostSubmissionForm Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/#properties","title":"Properties","text":""},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/#viewmodel","title":"ViewModel","text":"<pre><code>public IPostSubmissionFormVm ViewModel { get; set; }\n</code></pre>"},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/#property-value","title":"Property Value","text":"<p>IPostSubmissionFormVm</p>"},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/#constructors","title":"Constructors","text":""},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/#postsubmissionform_1","title":"PostSubmissionForm()","text":"<pre><code>public PostSubmissionForm()\n</code></pre>"},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/#methods","title":"Methods","text":""},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/slottymedia.components.partial.mainlayout.postsubmissionform/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/","title":"SlottyMedia","text":""},{"location":"code/SlottyMedia/#slottymediabackenddtos","title":"SlottyMedia.Backend.Dtos","text":"<p>CommentDto</p> <p>ForumDto</p> <p>FriendsOfUserDto</p> <p>PostDto</p> <p>ProfilePicDto</p> <p>SearchDto</p> <p>UserDto</p> <p>UserInformationDto</p>"},{"location":"code/SlottyMedia/#slottymediabackendexceptionsauth","title":"SlottyMedia.Backend.Exceptions.auth","text":"<p>TokenNotProvidedException</p> <p>UserAlreadySignedInException</p>"},{"location":"code/SlottyMedia/#slottymediabackendexceptionsservicescommentexceptions","title":"SlottyMedia.Backend.Exceptions.Services.CommentExceptions","text":"<p>CommentGeneralException</p> <p>CommentIudException</p>"},{"location":"code/SlottyMedia/#slottymediabackendexceptionsservicesforumexceptions","title":"SlottyMedia.Backend.Exceptions.Services.ForumExceptions","text":"<p>ForumGeneralException</p> <p>ForumIudException</p> <p>ForumNotFoundException</p>"},{"location":"code/SlottyMedia/#slottymediabackendexceptionsserviceslikeexceptions","title":"SlottyMedia.Backend.Exceptions.Services.LikeExceptions","text":"<p>LikeGeneralException</p> <p>LikeIudException</p> <p>LikeNotFoundException</p>"},{"location":"code/SlottyMedia/#slottymediabackendexceptionsservicespostexceptions","title":"SlottyMedia.Backend.Exceptions.Services.PostExceptions","text":"<p>PostGeneralException</p> <p>PostIudException</p> <p>PostNotFoundException</p>"},{"location":"code/SlottyMedia/#slottymediabackendexceptionsservicessearchexceptions","title":"SlottyMedia.Backend.Exceptions.Services.SearchExceptions","text":"<p>SearchGeneralExceptions</p>"},{"location":"code/SlottyMedia/#slottymediabackendexceptionsservicesuserexceptions","title":"SlottyMedia.Backend.Exceptions.Services.UserExceptions","text":"<p>UserGeneralException</p> <p>UserIudException</p> <p>UserNotFoundException</p>"},{"location":"code/SlottyMedia/#slottymediabackendexceptionssignup","title":"SlottyMedia.Backend.Exceptions.signup","text":"<p>EmailAlreadyExistsException</p> <p>IllegalCharsInUsernameException</p> <p>IllegalUsernameLengthException</p> <p>PasswordTooShortException</p> <p>UsernameAlreadyExistsException</p>"},{"location":"code/SlottyMedia/#slottymediabackendservices","title":"SlottyMedia.Backend.Services","text":"<p>AuthService</p> <p>CommentService</p> <p>CookieService</p> <p>ForumService</p> <p>LikeService</p> <p>PostService</p> <p>SearchService</p> <p>SignupServiceImpl</p> <p>UserService</p>"},{"location":"code/SlottyMedia/#slottymediabackendservicesinterfaces","title":"SlottyMedia.Backend.Services.Interfaces","text":"<p>IAuthService</p> <p>ICommentService</p> <p>ICookieService</p> <p>IForumService</p> <p>ILikeService</p> <p>IPostService</p> <p>ISearchService</p> <p>ISignupService</p> <p>IUserService</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpageshome","title":"SlottyMedia.Backend.ViewModel.Pages.Home","text":"<p>HomePageVmImpl</p> <p>IHomePageVm</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpagespost","title":"SlottyMedia.Backend.ViewModel.Pages.Post","text":"<p>IPostPageVm</p> <p>PostPageVmImpl</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpagesprofile","title":"SlottyMedia.Backend.ViewModel.Pages.Profile","text":"<p>IProfilePageVm</p> <p>ProfilePageVmImpl</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpagesspace","title":"SlottyMedia.Backend.ViewModel.Pages.Space","text":"<p>ISpacesVm</p> <p>ISpaceVm</p> <p>SpacesVmImpl</p> <p>SpaceVmImpl</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpartialdescriptioncontainer","title":"SlottyMedia.Backend.ViewModel.Partial.DescriptionContainer","text":"<p>DescriptionContainerVmImpl</p> <p>IDescriptionContainerVm</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpartialmainlayout","title":"SlottyMedia.Backend.ViewModel.Partial.MainLayout","text":"<p>IPostSubmissionFormVm</p> <p>ISpacesCardVm</p> <p>PostSubmissionFormVmImpl</p> <p>SpacesCardVmImpl</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpartialpost","title":"SlottyMedia.Backend.ViewModel.Partial.Post","text":"<p>IPostVm</p> <p>PostVmImpl</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpartialpostpage","title":"SlottyMedia.Backend.ViewModel.Partial.PostPage","text":"<p>CommentSubmissionFormVmImpl</p> <p>CommentVmImpl</p> <p>ICommentSubmissionFormVm</p> <p>ICommentVm</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpartialsearch","title":"SlottyMedia.Backend.ViewModel.Partial.Search","text":"<p>ISearchVm</p> <p>SearchImpl</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpartialsignin","title":"SlottyMedia.Backend.ViewModel.Partial.SignIn","text":"<p>ISignInFormVm</p> <p>SignInFormVmImpl</p>"},{"location":"code/SlottyMedia/#slottymediabackendviewmodelpartialsignup","title":"SlottyMedia.Backend.ViewModel.Partial.SignUp","text":"<p>ISignupFormVm</p> <p>SignupFormVmImpl</p>"},{"location":"code/SlottyMedia/#slottymediacomponents","title":"SlottyMedia.Components","text":"<p>_Imports</p> <p>App</p> <p>Routes</p>"},{"location":"code/SlottyMedia/#slottymediacomponentslayout","title":"SlottyMedia.Components.Layout","text":"<p>LoginLayout</p> <p>MainLayout</p>"},{"location":"code/SlottyMedia/#slottymediacomponentspages","title":"SlottyMedia.Components.Pages","text":"<p>Home</p> <p>Login</p> <p>PostPage</p> <p>Profile</p> <p>Register</p> <p>Space</p> <p>Spaces</p>"},{"location":"code/SlottyMedia/#slottymediacomponentspartial","title":"SlottyMedia.Components.Partial","text":"<p>Avatar</p> <p>Card</p> <p>Checkbox</p> <p>DescriptionContainer</p> <p>HotButton</p> <p>InputArea</p> <p>InputField</p> <p>InputFieldIcon</p> <p>LikeButton</p> <p>Link</p> <p>Pagination&lt;T&gt;</p> <p>Post</p> <p>Search</p> <p>Tag</p>"},{"location":"code/SlottyMedia/#slottymediacomponentspartialmainlayout","title":"SlottyMedia.Components.Partial.MainLayout","text":"<p>AccountCard</p> <p>LoginCard</p> <p>NavBox</p> <p>NavBoxLink</p> <p>PostSubmissionForm</p> <p>SpacesCard</p> <p>SpacesCardNoAccount</p>"},{"location":"code/SlottyMedia/#slottymediacomponentspartialpostpage","title":"SlottyMedia.Components.Partial.PostPage","text":"<p>Comment</p> <p>CommentSubmissionForm</p>"},{"location":"code/SlottyMedia/postvmimpl/","title":"PostVmImpl","text":"<p>Namespace:</p> <pre><code>public class PostVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IPostVm\n</code></pre> <p>Inheritance Object \u2192 PostVmImpl Implements IPostVm</p>"},{"location":"code/SlottyMedia/postvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/postvmimpl/#postvmimpluserservice-likeservice-commentservice","title":"PostVmImpl(UserService, LikeService, CommentService)","text":"<pre><code>public PostVmImpl(UserService userService, LikeService likeService, CommentService commentService)\n</code></pre>"},{"location":"code/SlottyMedia/postvmimpl/#parameters","title":"Parameters","text":"<p><code>userService</code> UserService</p> <p><code>likeService</code> LikeService</p> <p><code>commentService</code> CommentService</p>"},{"location":"code/SlottyMedia/postvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/postvmimpl/#getownerguid","title":"GetOwner(Guid)","text":"<pre><code>public Task&lt;UserDto&gt; GetOwner(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/postvmimpl/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/postvmimpl/#returns","title":"Returns","text":"<p>Task&lt;UserDto&gt;</p>"},{"location":"code/SlottyMedia/postvmimpl/#getcommentscountguid","title":"GetCommentsCount(Guid)","text":"<pre><code>public Task&lt;int&gt; GetCommentsCount(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/postvmimpl/#parameters_2","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/postvmimpl/#returns_1","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia/postvmimpl/#getuserinformationguid","title":"GetUserInformation(Guid)","text":"<pre><code>public Task&lt;UserInformationDto&gt; GetUserInformation(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/postvmimpl/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/postvmimpl/#returns_2","title":"Returns","text":"<p>Task&lt;UserInformationDto&gt;</p>"},{"location":"code/SlottyMedia/postvmimpl/#getlikesguid","title":"GetLikes(Guid)","text":"<pre><code>public Task&lt;List&lt;Guid&gt;&gt; GetLikes(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/postvmimpl/#parameters_4","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/postvmimpl/#returns_3","title":"Returns","text":"<p>Task&lt;List&lt;Guid&gt;&gt;</p>"},{"location":"code/SlottyMedia/postvmimpl/#addlikeguid-guid","title":"AddLike(Guid, Guid)","text":"<pre><code>public Task AddLike(Guid postId, Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/postvmimpl/#parameters_5","title":"Parameters","text":"<p><code>postId</code> Guid</p> <p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/postvmimpl/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/postvmimpl/#removelikeguid-guid","title":"RemoveLike(Guid, Guid)","text":"<pre><code>public Task RemoveLike(Guid postId, Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/postvmimpl/#parameters_6","title":"Parameters","text":"<p><code>postId</code> Guid</p> <p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/postvmimpl/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/","title":"CommentDto","text":"<p>Namespace: SlottyMedia.Backend.Dtos</p> <p>The Comment Data Transfer Object</p> <pre><code>public class CommentDto\n</code></pre> <p>Inheritance Object \u2192 CommentDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#commentid","title":"CommentId","text":"<p>Gets or sets the Comment Id.</p> <pre><code>public Guid CommentId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#creatoruserid","title":"CreatorUserId","text":"<p>Gets or sets the ID of the user who created the comment.</p> <pre><code>public Nullable&lt;Guid&gt; CreatorUserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#property-value_1","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#postid","title":"PostId","text":"<p>Gets or sets the ID of the post the comment is related to.</p> <pre><code>public Guid PostId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#property-value_2","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#content","title":"Content","text":"<p>Gets or sets the content of the comment.</p> <pre><code>public string Content { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#createdat","title":"CreatedAt","text":"<p>Gets or sets the date and time when the comment was created.</p> <pre><code>public DateTime CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#property-value_4","title":"Property Value","text":"<p>DateTime</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#commentdto_1","title":"CommentDto()","text":"<p>Initializes a new instance of the CommentDto class.</p> <pre><code>public CommentDto()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#mapper","title":"Mapper()","text":"<p>This method maps the Comment Dto to the Comment Dao.</p> <pre><code>public CommentDao Mapper()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#returns","title":"Returns","text":"<p>CommentDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#mappercommentdao","title":"Mapper(CommentDao)","text":"<p>Maps the Comment Dao to the Comment Dto.</p> <pre><code>public CommentDto Mapper(CommentDao comment)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#parameters","title":"Parameters","text":"<p><code>comment</code> CommentDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.commentdto/#returns_1","title":"Returns","text":"<p>CommentDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/","title":"ForumDto","text":"<p>Namespace: SlottyMedia.Backend.Dtos</p> <p>The Forum Data Transfer Object</p> <pre><code>public class ForumDto\n</code></pre> <p>Inheritance Object \u2192 ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#forumid","title":"ForumId","text":"<p>The Forum Id.</p> <pre><code>public Guid ForumId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#topic","title":"Topic","text":"<p>The Topic of the Forum.v</p> <pre><code>public string Topic { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#createdat","title":"CreatedAt","text":"<p>The Date and Time the Forum was created.</p> <pre><code>public DateTime CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#property-value_2","title":"Property Value","text":"<p>DateTime</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#postcount","title":"PostCount","text":"<p>Amount of posts the forum has</p> <pre><code>public int PostCount { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#property-value_3","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#forumdto_1","title":"ForumDto()","text":"<p>The default constructor.</p> <pre><code>public ForumDto()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#mapper","title":"Mapper()","text":"<p>This method maps the ForumDto to a ForumDao.</p> <pre><code>public ForumDao Mapper()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#returns","title":"Returns","text":"<p>ForumDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#mapperforumdao","title":"Mapper(ForumDao)","text":"<p>THis method maps the ForumDao to a ForumDto.</p> <pre><code>public ForumDto Mapper(ForumDao forumDao)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#parameters","title":"Parameters","text":"<p><code>forumDao</code> ForumDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#returns_1","title":"Returns","text":"<p>ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#mappertopforumdao","title":"Mapper(TopForumDao)","text":"<p>THis method maps the ForumDao to a ForumDto.</p> <pre><code>public ForumDto Mapper(TopForumDao forumDao)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#parameters_1","title":"Parameters","text":"<p><code>forumDao</code> TopForumDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#returns_2","title":"Returns","text":"<p>ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.forumdto/#returns_3","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/","title":"FriendsOfUserDto","text":"<p>Namespace: SlottyMedia.Backend.Dtos</p> <p>The Friends of a User</p> <pre><code>public class FriendsOfUserDto\n</code></pre> <p>Inheritance Object \u2192 FriendsOfUserDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#userid","title":"UserId","text":"<p>Gets or sets the User Id.</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#friends","title":"Friends","text":"<p>Gets or sets the list of friends of the user.</p> <pre><code>public List&lt;UserDto&gt; Friends { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#property-value_1","title":"Property Value","text":"<p>List&lt;UserDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#friendsofuserdto_1","title":"FriendsOfUserDto()","text":"<p>Initializes a new instance of the FriendsOfUserDto class.</p> <pre><code>public FriendsOfUserDto()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#tostring","title":"ToString()","text":"<p>This ToString method returns a string representation of the FriendsOfUserDto object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.friendsofuserdto/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/","title":"PostDto","text":"<p>Namespace: SlottyMedia.Backend.Dtos</p> <p>The Post Data Transfer Object</p> <pre><code>public class PostDto\n</code></pre> <p>Inheritance Object \u2192 PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#forum","title":"Forum","text":"<p>Gets or sets the forum associated with the post.</p> <pre><code>public ForumDto Forum { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#property-value","title":"Property Value","text":"<p>ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#postid","title":"PostId","text":"<p>Gets or sets the post ID.</p> <pre><code>public Guid PostId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#property-value_1","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#userid","title":"UserId","text":"<p>Gets or sets the user ID of the user who created the post.</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#property-value_2","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#likes","title":"Likes","text":"<p>Gets or sets the list of user IDs who liked the post.</p> <pre><code>public List&lt;Guid&gt; Likes { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#property-value_3","title":"Property Value","text":"<p>List&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#createdat","title":"CreatedAt","text":"<p>Gets or sets the creation date of the post.</p> <pre><code>public DateTime CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#property-value_4","title":"Property Value","text":"<p>DateTime</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#headline","title":"Headline","text":"<p>Gets or sets the headline of the post.</p> <pre><code>public string Headline { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#content","title":"Content","text":"<p>Gets or sets the content of the post.</p> <pre><code>public string Content { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#postdto_1","title":"PostDto()","text":"<p>Initializes a new instance of the PostDto class.</p> <pre><code>public PostDto()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#mapper","title":"Mapper()","text":"<p>The Mapper for the Post Dto to the Post Dao.</p> <pre><code>public PostsDao Mapper()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#returns","title":"Returns","text":"<p>PostsDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#mapperpostsdao","title":"Mapper(PostsDao)","text":"<p>Maps the Post Dao to the Post Dto.</p> <pre><code>public PostDto Mapper(PostsDao post)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#parameters","title":"Parameters","text":"<p><code>post</code> PostsDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#returns_1","title":"Returns","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.postdto/#returns_2","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/","title":"ProfilePicDto","text":"<p>Namespace: SlottyMedia.Backend.Dtos</p> <p>The Profile Picture Data Transfer Object</p> <pre><code>public class ProfilePicDto\n</code></pre> <p>Inheritance Object \u2192 ProfilePicDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#userid","title":"UserId","text":"<p>Gets or sets the User Id.</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#profilepic","title":"ProfilePic","text":"<p>Gets or sets the Profile Picture in binary.</p> <pre><code>public string ProfilePic { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#profilepicdto_1","title":"ProfilePicDto()","text":"<p>Initializes a new instance of the ProfilePicDto class.</p> <pre><code>public ProfilePicDto()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#mapper","title":"Mapper()","text":"<p>This method maps the ProfilePicDto to a UserDao.</p> <pre><code>public UserDao Mapper()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#returns","title":"Returns","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#mapperuserdao","title":"Mapper(UserDao)","text":"<p>This method maps the UserDao to a ProfilePicDto.</p> <pre><code>public ProfilePicDto Mapper(UserDao userDao)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#parameters","title":"Parameters","text":"<p><code>userDao</code> UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#returns_1","title":"Returns","text":"<p>ProfilePicDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#tostring","title":"ToString()","text":"<p>This method overrides the ToString method to return the ProfilePicDto as a string.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.profilepicdto/#returns_2","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/","title":"SearchDto","text":"<p>Namespace: SlottyMedia.Backend.Dtos</p> <p>The Search Data Transfer Object</p> <pre><code>public class SearchDto\n</code></pre> <p>Inheritance Object \u2192 SearchDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#users","title":"Users","text":"<p>Gets or sets the users who match the search.</p> <pre><code>public List&lt;UserDto&gt; Users { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#property-value","title":"Property Value","text":"<p>List&lt;UserDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#forums","title":"Forums","text":"<p>Gets or sets the forum that matches the search.</p> <pre><code>public List&lt;ForumDto&gt; Forums { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#property-value_1","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#searchdto_1","title":"SearchDto()","text":"<p>Initializes a new instance of the SearchDto class.</p> <pre><code>public SearchDto()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#tostring","title":"ToString()","text":"<p>This method returns the SearchDto as a string.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.searchdto/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/","title":"UserDto","text":"<p>Namespace: SlottyMedia.Backend.Dtos</p> <p>The User Data Transfer Object</p> <pre><code>public class UserDto\n</code></pre> <p>Inheritance Object \u2192 UserDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#userid","title":"UserId","text":"<p>Gets or sets the User Id.</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#username","title":"Username","text":"<p>Gets or sets the Username.</p> <pre><code>public string Username { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#description","title":"Description","text":"<p>Gets or sets the Description of the User.</p> <pre><code>public string Description { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#createdat","title":"CreatedAt","text":"<p>Gets or sets the date and time when the User was created.</p> <pre><code>public DateTime CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#property-value_3","title":"Property Value","text":"<p>DateTime</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#userdto_1","title":"UserDto()","text":"<p>Initializes a new instance of the UserDto class.</p> <pre><code>public UserDto()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#mapper","title":"Mapper()","text":"<p>This method maps the User Dto to the User Dao.</p> <pre><code>public UserDao Mapper()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#returns","title":"Returns","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#mapperuserdao","title":"Mapper(UserDao)","text":"<p>Maps the User Dao to the User Dto.</p> <pre><code>public UserDto Mapper(UserDao user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#parameters","title":"Parameters","text":"<p><code>user</code> UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#returns_1","title":"Returns","text":"<p>UserDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#tostring","title":"ToString()","text":"<p>This method returns the UserDto as a string.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userdto/#returns_2","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/","title":"UserInformationDto","text":"<p>Namespace: SlottyMedia.Backend.Dtos</p> <p>The User Information Data Transfer Object. It differs to UserDto by not persisting recentForums.</p> <pre><code>public class UserInformationDto\n</code></pre> <p>Inheritance Object \u2192 UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#userid","title":"UserId","text":"<p>Gets or sets the User Id.</p> <pre><code>public Nullable&lt;Guid&gt; UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#username","title":"Username","text":"<p>Gets or sets the Username.</p> <pre><code>public string Username { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#description","title":"Description","text":"<p>Gets or sets the Description of the User.</p> <pre><code>public string Description { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#profilepic","title":"ProfilePic","text":"<p>ProfilePic of a user</p> <pre><code>public string ProfilePic { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#friendsamount","title":"FriendsAmount","text":"<p>Amount of Follow4Follows of User</p> <pre><code>public int FriendsAmount { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#property-value_4","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#spacesamount","title":"SpacesAmount","text":"<p>Amount of Spaces of a User</p> <pre><code>public int SpacesAmount { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#property-value_5","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#createdat","title":"CreatedAt","text":"<p>Gets or sets the date and time when the User was created.</p> <pre><code>public DateTime CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#property-value_6","title":"Property Value","text":"<p>DateTime</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#userinformationdtoboolean","title":"UserInformationDto(Boolean)","text":"<p>Initializes a new instance of the UserInformationDto class.</p> <pre><code>public UserInformationDto(bool isLoading)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#parameters","title":"Parameters","text":"<p><code>isLoading</code> Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#mapper","title":"Mapper()","text":"<p>This method maps the UserInformationDto to the User Dao.</p> <pre><code>public UserDao Mapper()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#returns","title":"Returns","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#mapperuserdao","title":"Mapper(UserDao)","text":"<p>Maps the User Dao to the UserInformationDto.</p> <pre><code>public UserInformationDto Mapper(UserDao user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#parameters_1","title":"Parameters","text":"<p><code>user</code> UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.dtos.userinformationdto/#returns_1","title":"Returns","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/","title":"TokenNotProvidedException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.auth</p> <p>Exception to handle missing Access- and RefreshToken f.e. when handling Sessions</p> <pre><code>public class TokenNotProvidedException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.auth.TokenNotProvidedException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;TokenNotProvidedException&gt; \u2192 TokenNotProvidedException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#tokennotprovidedexceptionboolean-boolean","title":"TokenNotProvidedException(Boolean, Boolean)","text":"<p>Initializes a TokenNotProvidedException. It als implements an inner exception showing which token is missin</p> <pre><code>public TokenNotProvidedException(bool accessTokenProvided, bool refreshTokenProvided)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.tokennotprovidedexception/#parameters","title":"Parameters","text":"<p><code>accessTokenProvided</code> Boolean Boolean indicating the existence of an AccessToken</p> <p><code>refreshTokenProvided</code> Boolean Boolean indicating the existence of a RefreshToken</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/","title":"UserAlreadySignedInException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.auth</p> <p>Exception for the case that a user is already signed in</p> <pre><code>public class UserAlreadySignedInException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.auth.UserAlreadySignedInException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;UserAlreadySignedInException&gt; \u2192 UserAlreadySignedInException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.auth.useralreadysignedinexception/#useralreadysignedinexception_1","title":"UserAlreadySignedInException()","text":"<p>Constructor to create generic exception message</p> <pre><code>public UserAlreadySignedInException()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/","title":"BaseException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions</p> <p>This class represents the Base Exception. It is used as a base class for all exceptions.</p> <pre><code>public class BaseException : System.Exception, System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#baseexception_1","title":"BaseException()","text":"<p>Standard constructor.</p> <pre><code>public BaseException()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#baseexceptionstring","title":"BaseException(String)","text":"<p>Constructor with a message.</p> <pre><code>public BaseException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The exception message</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#baseexceptionstring-exception","title":"BaseException(String, Exception)","text":"<p>Constructor with a message and inner exception.</p> <pre><code>public BaseException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.baseexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The exception message</p> <p><code>innerException</code> Exception The inner exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/","title":"CommentGeneralException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.CommentExceptions</p> <p>Represents a general exception that occurs in the Forum service.</p> <pre><code>public class CommentGeneralException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.CommentExceptions.CommentGeneralException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;CommentGeneralException&gt; \u2192 CommentGeneralException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#commentgeneralexceptionstring","title":"CommentGeneralException(String)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message.</p> <pre><code>public CommentGeneralException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#commentgeneralexceptionstring-exception","title":"CommentGeneralException(String, Exception)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public CommentGeneralException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentgeneralexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/","title":"CommentIudException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.CommentExceptions</p> <p>Represents an exception that occurs during Insert, Update, or Delete operations in the Forum service.</p> <pre><code>public class CommentIudException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.CommentExceptions.CommentIudException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;CommentIudException&gt; \u2192 CommentIudException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#commentiudexceptionstring","title":"CommentIudException(String)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message.</p> <pre><code>public CommentIudException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#commentiudexceptionstring-exception","title":"CommentIudException(String, Exception)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public CommentIudException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.commentexceptions.commentiudexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/","title":"ForumGeneralException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.ForumExceptions</p> <p>Represents a general exception that occurs in the Forum service.</p> <pre><code>public class ForumGeneralException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.ForumExceptions.ForumGeneralException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;ForumGeneralException&gt; \u2192 ForumGeneralException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#forumgeneralexceptionstring","title":"ForumGeneralException(String)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message.</p> <pre><code>public ForumGeneralException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#forumgeneralexceptionstring-exception","title":"ForumGeneralException(String, Exception)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public ForumGeneralException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumgeneralexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/","title":"ForumIudException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.ForumExceptions</p> <p>Represents an exception that occurs during Insert, Update, or Delete operations in the Forum service.</p> <pre><code>public class ForumIudException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.ForumExceptions.ForumIudException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;ForumIudException&gt; \u2192 ForumIudException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#forumiudexceptionstring","title":"ForumIudException(String)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message.</p> <pre><code>public ForumIudException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#forumiudexceptionstring-exception","title":"ForumIudException(String, Exception)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public ForumIudException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumiudexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/","title":"ForumNotFoundException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.ForumExceptions</p> <p>This exception is thrown when a user is not found.</p> <pre><code>public class ForumNotFoundException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.LikeExceptions.LikeNotFoundException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;LikeNotFoundException&gt; \u2192 ForumNotFoundException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#forumnotfoundexceptionstring","title":"ForumNotFoundException(String)","text":"<p>This constructor creates a new ForumNotFoundException object.</p> <pre><code>public ForumNotFoundException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#forumnotfoundexceptionstring-exception","title":"ForumNotFoundException(String, Exception)","text":"<p>This constructor creates a new ForumNotFoundException object.</p> <pre><code>public ForumNotFoundException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.forumexceptions.forumnotfoundexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/","title":"ForumNotFoundException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.LikeExceptions</p> <p>This exception is thrown when a user is not found.</p> <pre><code>public class ForumNotFoundException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.LikeExceptions.LikeNotFoundException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;LikeNotFoundException&gt; \u2192 ForumNotFoundException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#forumnotfoundexceptionstring","title":"ForumNotFoundException(String)","text":"<p>This constructor creates a new ForumNotFoundException object.</p> <pre><code>public ForumNotFoundException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#forumnotfoundexceptionstring-exception","title":"ForumNotFoundException(String, Exception)","text":"<p>This constructor creates a new ForumNotFoundException object.</p> <pre><code>public ForumNotFoundException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.forumnotfoundexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/","title":"LikeGeneralException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.LikeExceptions</p> <p>Represents a general exception that occurs in the Forum service.</p> <pre><code>public class LikeGeneralException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.LikeExceptions.LikeGeneralException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;LikeGeneralException&gt; \u2192 LikeGeneralException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#likegeneralexceptionstring","title":"LikeGeneralException(String)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message.</p> <pre><code>public LikeGeneralException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#likegeneralexceptionstring-exception","title":"LikeGeneralException(String, Exception)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public LikeGeneralException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likegeneralexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/","title":"LikeIudException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.LikeExceptions</p> <p>Represents an exception that occurs during Insert, Update, or Delete operations in the Forum service.</p> <pre><code>public class LikeIudException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.LikeExceptions.LikeIudException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;LikeIudException&gt; \u2192 LikeIudException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#likeiudexceptionstring","title":"LikeIudException(String)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message.</p> <pre><code>public LikeIudException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#likeiudexceptionstring-exception","title":"LikeIudException(String, Exception)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public LikeIudException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likeiudexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/","title":"LikeNotFoundException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.LikeExceptions</p> <p>This exception is thrown when a user is not found.</p> <pre><code>public class LikeNotFoundException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.LikeExceptions.LikeNotFoundException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;LikeNotFoundException&gt; \u2192 LikeNotFoundException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#likenotfoundexceptionstring","title":"LikeNotFoundException(String)","text":"<p>This constructor creates a new LikeNotFoundException object.</p> <pre><code>public LikeNotFoundException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#likenotfoundexceptionstring-exception","title":"LikeNotFoundException(String, Exception)","text":"<p>This constructor creates a new LikeNotFoundException object.</p> <pre><code>public LikeNotFoundException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.likeexceptions.likenotfoundexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/","title":"CommentGeneralException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents a general exception that occurs in the Forum service.</p> <pre><code>public class CommentGeneralException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.CommentGeneralException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;CommentGeneralException&gt; \u2192 CommentGeneralException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#commentgeneralexceptionstring","title":"CommentGeneralException(String)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message.</p> <pre><code>public CommentGeneralException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#commentgeneralexceptionstring-exception","title":"CommentGeneralException(String, Exception)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public CommentGeneralException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentgeneralexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/","title":"CommentIudException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents an exception that occurs during Insert, Update, or Delete operations in the Forum service.</p> <pre><code>public class CommentIudException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.CommentIudException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;CommentIudException&gt; \u2192 CommentIudException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#commentiudexceptionstring","title":"CommentIudException(String)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message.</p> <pre><code>public CommentIudException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#commentiudexceptionstring-exception","title":"CommentIudException(String, Exception)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public CommentIudException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.commentiudexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/","title":"ForumGeneralException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents a general exception that occurs in the Forum service.</p> <pre><code>public class ForumGeneralException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.ForumGeneralException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;ForumGeneralException&gt; \u2192 ForumGeneralException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#forumgeneralexceptionstring","title":"ForumGeneralException(String)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message.</p> <pre><code>public ForumGeneralException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#forumgeneralexceptionstring-exception","title":"ForumGeneralException(String, Exception)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public ForumGeneralException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumgeneralexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/","title":"ForumIudException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents an exception that occurs during Insert, Update, or Delete operations in the Forum service.</p> <pre><code>public class ForumIudException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.ForumIudException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;ForumIudException&gt; \u2192 ForumIudException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#forumiudexceptionstring","title":"ForumIudException(String)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message.</p> <pre><code>public ForumIudException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#forumiudexceptionstring-exception","title":"ForumIudException(String, Exception)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public ForumIudException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.forumiudexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/","title":"LikeGeneralException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents a general exception that occurs in the Forum service.</p> <pre><code>public class LikeGeneralException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.LikeGeneralException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;LikeGeneralException&gt; \u2192 LikeGeneralException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#likegeneralexceptionstring","title":"LikeGeneralException(String)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message.</p> <pre><code>public LikeGeneralException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#likegeneralexceptionstring-exception","title":"LikeGeneralException(String, Exception)","text":"<p>Initializes a new instance of the ForumGeneralException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public LikeGeneralException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likegeneralexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/","title":"LikeIudException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents an exception that occurs during Insert, Update, or Delete operations in the Forum service.</p> <pre><code>public class LikeIudException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.LikeIudException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;LikeIudException&gt; \u2192 LikeIudException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#likeiudexceptionstring","title":"LikeIudException(String)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message.</p> <pre><code>public LikeIudException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#likeiudexceptionstring-exception","title":"LikeIudException(String, Exception)","text":"<p>Initializes a new instance of the ForumIudException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public LikeIudException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.likeiudexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/","title":"PostGeneralException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents a general exception that occurs in the Post service.</p> <pre><code>public class PostGeneralException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.PostGeneralException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;PostGeneralException&gt; \u2192 PostGeneralException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#postgeneralexceptionstring","title":"PostGeneralException(String)","text":"<p>Initializes a new instance of the PostGeneralException class with a specified error message.</p> <pre><code>public PostGeneralException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#postgeneralexceptionstring-exception","title":"PostGeneralException(String, Exception)","text":"<p>Initializes a new instance of the PostGeneralException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public PostGeneralException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postgeneralexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/","title":"PostIudException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents an exception that occurs during Insert, Update, or Delete operations in the Post service.</p> <pre><code>public class PostIudException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.PostIudException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;PostIudException&gt; \u2192 PostIudException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#postiudexceptionstring","title":"PostIudException(String)","text":"<p>Initializes a new instance of the PostIudException class with a specified error message.</p> <pre><code>public PostIudException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#postiudexceptionstring-exception","title":"PostIudException(String, Exception)","text":"<p>Initializes a new instance of the PostIudException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public PostIudException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postiudexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/","title":"PostNotFoundException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.PostExceptions</p> <p>Represents an exception that is thrown when a requested post is not found.</p> <pre><code>public class PostNotFoundException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.PostExceptions.PostNotFoundException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;PostNotFoundException&gt; \u2192 PostNotFoundException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#postnotfoundexceptionstring","title":"PostNotFoundException(String)","text":"<p>Initializes a new instance of the PostNotFoundException class with a specified error message.</p> <pre><code>public PostNotFoundException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#postnotfoundexceptionstring-exception","title":"PostNotFoundException(String, Exception)","text":"<p>Initializes a new instance of the PostNotFoundException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public PostNotFoundException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.postexceptions.postnotfoundexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/","title":"SearchGeneralExceptions","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.SearchExceptions</p> <p>Represents a general exception that occurs in the Search service.</p> <pre><code>public class SearchGeneralExceptions : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.SearchExceptions.SearchGeneralExceptions, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;SearchGeneralExceptions&gt; \u2192 SearchGeneralExceptions Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#searchgeneralexceptionsstring","title":"SearchGeneralExceptions(String)","text":"<p>Initializes a new instance of the SearchGeneralExceptions class with a specified error message.</p> <pre><code>public SearchGeneralExceptions(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#searchgeneralexceptionsstring-exception","title":"SearchGeneralExceptions(String, Exception)","text":"<p>Initializes a new instance of the SearchGeneralExceptions class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public SearchGeneralExceptions(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.searchexceptions.searchgeneralexceptions/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/","title":"LikeNotFoundException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.UserExceptions</p> <p>This exception is thrown when a user is not found.</p> <pre><code>public class LikeNotFoundException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.UserExceptions.LikeNotFoundException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;LikeNotFoundException&gt; \u2192 LikeNotFoundException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#likenotfoundexceptionstring","title":"LikeNotFoundException(String)","text":"<p>This constructor creates a new LikeNotFoundException object.</p> <pre><code>public LikeNotFoundException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#likenotfoundexceptionstring-exception","title":"LikeNotFoundException(String, Exception)","text":"<p>This constructor creates a new LikeNotFoundException object.</p> <pre><code>public LikeNotFoundException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.likenotfoundexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/","title":"UserGeneralException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.UserExceptions</p> <p>This exception is thrown when a general exception occurs. For example when interacting with the database there  is the option, that Exceptions which aren't predictable can occur. In this case, this exception is thrown.</p> <pre><code>public class UserGeneralException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.UserExceptions.UserGeneralException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;UserGeneralException&gt; \u2192 UserGeneralException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#usergeneralexceptionstring","title":"UserGeneralException(String)","text":"<p>This constructor creates a new UserGeneralException object.</p> <pre><code>public UserGeneralException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#usergeneralexceptionstring-exception","title":"UserGeneralException(String, Exception)","text":"<p>This constructor creates a new UserGeneralException object.</p> <pre><code>public UserGeneralException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usergeneralexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/","title":"UserIudException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.UserExceptions</p> <p>Represents an exception that occurs during Insert, Update, or Delete operations in the User service.</p> <pre><code>public class UserIudException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.UserExceptions.UserIudException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;UserIudException&gt; \u2192 UserIudException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#useriudexceptionstring","title":"UserIudException(String)","text":"<p>Initializes a new instance of the UserIudException class with a specified error message.</p> <pre><code>public UserIudException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#parameters","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#useriudexceptionstring-exception","title":"UserIudException(String, Exception)","text":"<p>Initializes a new instance of the UserIudException class with a specified error message and a  reference to the inner exception that is the cause of this exception.</p> <pre><code>public UserIudException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.useriudexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message that describes the error.</p> <p><code>innerException</code> Exception The exception that is the cause of the current exception.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/","title":"UserNotFoundException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.Services.UserExceptions</p> <p>This exception is thrown when a user is not found.</p> <pre><code>public class UserNotFoundException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.Services.UserExceptions.UserNotFoundException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;UserNotFoundException&gt; \u2192 UserNotFoundException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#usernotfoundexceptionstring","title":"UserNotFoundException(String)","text":"<p>This constructor creates a new UserNotFoundException object.</p> <pre><code>public UserNotFoundException(string message)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#usernotfoundexceptionstring-exception","title":"UserNotFoundException(String, Exception)","text":"<p>This constructor creates a new UserNotFoundException object.</p> <pre><code>public UserNotFoundException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.services.userexceptions.usernotfoundexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/","title":"EmailAlreadyExistsException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.signup</p> <p>This exception is thrown after an illegal attempt to sign up a user with an already existing email.</p> <pre><code>public class EmailAlreadyExistsException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.signup.EmailAlreadyExistsException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;EmailAlreadyExistsException&gt; \u2192 EmailAlreadyExistsException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#emailalreadyexistsexceptionstring","title":"EmailAlreadyExistsException(String)","text":"<p>Build an exception with the given email.</p> <pre><code>public EmailAlreadyExistsException(string email)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.emailalreadyexistsexception/#parameters","title":"Parameters","text":"<p><code>email</code> String The illegally used email</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/","title":"IllegalCharsInUsernameException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.signup</p> <p>An exception that is thrown when a user attempts to sign up with a username that  contains illegal characters.</p> <pre><code>public class IllegalCharsInUsernameException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.signup.IllegalCharsInUsernameException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;IllegalCharsInUsernameException&gt; \u2192 IllegalCharsInUsernameException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalcharsinusernameexception/#illegalcharsinusernameexception_1","title":"IllegalCharsInUsernameException()","text":"<pre><code>public IllegalCharsInUsernameException()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/","title":"IllegalUsernameLengthException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.signup</p> <p>An exception that is thrown when a user attempts to sign up with a username that  is either too long or too short.</p> <pre><code>public class IllegalUsernameLengthException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.signup.IllegalUsernameLengthException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;IllegalUsernameLengthException&gt; \u2192 IllegalUsernameLengthException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.illegalusernamelengthexception/#illegalusernamelengthexception_1","title":"IllegalUsernameLengthException()","text":"<pre><code>public IllegalUsernameLengthException()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/","title":"PasswordTooShortException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.signup</p> <p>An exception that is thrown when a user attempts to sign up with a password that  is too short.</p> <pre><code>public class PasswordTooShortException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.signup.PasswordTooShortException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;PasswordTooShortException&gt; \u2192 PasswordTooShortException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.passwordtooshortexception/#passwordtooshortexception_1","title":"PasswordTooShortException()","text":"<pre><code>public PasswordTooShortException()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/","title":"UsernameAlreadyExistsException","text":"<p>Namespace: SlottyMedia.Backend.Exceptions.signup</p> <p>This exception is thrown after an illegal attempt to sign up a user with an already  existing username.</p> <pre><code>public class UsernameAlreadyExistsException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Backend.Exceptions.signup.UsernameAlreadyExistsException, SlottyMedia, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;UsernameAlreadyExistsException&gt; \u2192 UsernameAlreadyExistsException Implements ISerializable</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#usernamealreadyexistsexceptionstring","title":"UsernameAlreadyExistsException(String)","text":"<p>Build an exception with the given username.</p> <pre><code>public UsernameAlreadyExistsException(string username)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.exceptions.signup.usernamealreadyexistsexception/#parameters","title":"Parameters","text":"<p><code>username</code> String The illegally used username</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/","title":"SupabaseRepository&lt;TEntity&gt;","text":"<p>Namespace: SlottyMedia.Backend.Repositories.Impl</p> <p>This class represents a repository where the managed entity is assignable from the type  . This repository implements default CRUD methods specifically using  the Supabase API. This takes away a lot of clutter from implementing repositories.  The only method that still needs to be implemented is <code>IRepository::GetById</code>.  IRepository&lt;TEntity&gt;</p> <pre><code>public abstract class SupabaseRepository&lt;TEntity&gt; : \n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#type-parameters","title":"Type Parameters","text":"<p><code>TEntity</code> The Supabase entity that should be managed by this repository</p> <p>Inheritance Object \u2192 SupabaseRepository&lt;TEntity&gt; Implements IRepository&lt;TEntity&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#getbyidguid","title":"GetById(Guid)","text":"<pre><code>public abstract Task&lt;TEntity&gt; GetById(Guid entityId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#parameters","title":"Parameters","text":"<p><code>entityId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#returns","title":"Returns","text":"<p>Task&lt;TEntity&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#getall","title":"GetAll()","text":"<pre><code>public Task&lt;List&lt;TEntity&gt;&gt; GetAll()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#returns_1","title":"Returns","text":"<p>Task&lt;List&lt;TEntity&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#addtentity","title":"Add(TEntity)","text":"<pre><code>public Task Add(TEntity entity)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#parameters_1","title":"Parameters","text":"<p><code>entity</code> TEntity</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#updatetentity","title":"Update(TEntity)","text":"<pre><code>public Task Update(TEntity entity)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#parameters_2","title":"Parameters","text":"<p><code>entity</code> TEntity</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#deletetentity","title":"Delete(TEntity)","text":"<pre><code>public Task Delete(TEntity entity)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#parameters_3","title":"Parameters","text":"<p><code>entity</code> TEntity</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.supabaserepository-1/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/","title":"UserRepositoryImpl","text":"<p>Namespace: SlottyMedia.Backend.Repositories.Impl</p> <pre><code>public class UserRepositoryImpl : SupabaseRepository`1, SlottyMedia.Backend.Repositories.IRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Backend.Repositories.IUserRepository\n</code></pre> <p>Inheritance Object \u2192 SupabaseRepository&lt;UserDao&gt; \u2192 UserRepositoryImpl Implements IRepository&lt;UserDao&gt;, IUserRepository</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#userrepositoryimplclient","title":"UserRepositoryImpl(Client)","text":"<p>Instantiates a UserRepositoryImpl</p> <pre><code>public UserRepositoryImpl(Client supabase)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#parameters","title":"Parameters","text":"<p><code>supabase</code> Client An object that exposes the Supabase API</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#getbyidguid","title":"GetById(Guid)","text":"<pre><code>public Task&lt;UserDao&gt; GetById(Guid entityId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#parameters_1","title":"Parameters","text":"<p><code>entityId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#returns","title":"Returns","text":"<p>Task&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#getuserbyusernamestring","title":"GetUserByUsername(String)","text":"<pre><code>public Task&lt;UserDao&gt; GetUserByUsername(string username)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#parameters_2","title":"Parameters","text":"<p><code>username</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.impl.userrepositoryimpl/#returns_1","title":"Returns","text":"<p>Task&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/","title":"IRepository&lt;TEntity&gt;","text":"<p>Namespace: SlottyMedia.Backend.Repositories</p> <p>This interface represents a repository, which is an intermediary between the application's  business logic and data storage. It provides consistent functionalities to perform CRUD  actions on a database while encapsulating the complexities of data access.</p> <pre><code>public interface IRepository&lt;TEntity&gt;\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#type-parameters","title":"Type Parameters","text":"<p><code>TEntity</code> The entity that should be managed by this repository</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#getbyidguid","title":"GetById(Guid)","text":"<p>Fetches an entity by their designated primary key. Returns <code>null</code> if  no matching entity was found in the database.</p> <pre><code>Task&lt;TEntity&gt; GetById(Guid entityId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#parameters","title":"Parameters","text":"<p><code>entityId</code> Guid The entity's primary key</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#returns","title":"Returns","text":"<p>Task&lt;TEntity&gt; The corresponding entity or <code>null</code> if not found</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#exceptions","title":"Exceptions","text":"<p>T:System.Net.Http.HttpRequestException If an HTTP error occurs while fetching the entity from the database  (except for 404, in which case <code>null</code> is returned)</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#getall","title":"GetAll()","text":"<p>Fetches all entities in the database and collects them in a list.</p> <pre><code>Task&lt;List&lt;TEntity&gt;&gt; GetAll()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#returns_1","title":"Returns","text":"<p>Task&lt;List&lt;TEntity&gt;&gt; The entities</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#exceptions_1","title":"Exceptions","text":"<p>T:System.Net.Http.HttpRequestException If an HTTP error occurs while fetching the entities from the database</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#addtentity","title":"Add(TEntity)","text":"<p>Inserts an entity into the database.</p> <pre><code>Task Add(TEntity entity)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#parameters_1","title":"Parameters","text":"<p><code>entity</code> TEntity The entity to insert</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#exceptions_2","title":"Exceptions","text":"<p>T:System.Net.Http.HttpRequestException If an HTTP error occurs while inserting the entity into the database</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#updatetentity","title":"Update(TEntity)","text":"<p>Updates an already existing entity in the database.</p> <pre><code>Task Update(TEntity entity)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#parameters_2","title":"Parameters","text":"<p><code>entity</code> TEntity The entity to update</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#exceptions_3","title":"Exceptions","text":"<p>T:System.Net.Http.HttpRequestException If an HTTP error occurs while updating the entity in the database</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#deletetentity","title":"Delete(TEntity)","text":"<p>Deletes an entity from the database.</p> <pre><code>Task Delete(TEntity entity)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#parameters_3","title":"Parameters","text":"<p><code>entity</code> TEntity The entity to delete</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.irepository-1/#exceptions_4","title":"Exceptions","text":"<p>T:System.Net.Http.HttpRequestException If an HTTP error occurs while deleting the entity from the database</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.iuserrepository/","title":"IUserRepository","text":"<p>Namespace: SlottyMedia.Backend.Repositories</p> <p>This repository manages all entities of type .</p> <pre><code>public interface IUserRepository : IRepository`1\n</code></pre> <p>Implements IRepository&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.iuserrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.repositories.iuserrepository/#getuserbyusernamestring","title":"GetUserByUsername(String)","text":"<p>Fetches a user by their username. Returns <code>null</code> if such a user was not found  in the database.</p> <pre><code>Task&lt;UserDao&gt; GetUserByUsername(string username)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.iuserrepository/#parameters","title":"Parameters","text":"<p><code>username</code> String The user's username</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.iuserrepository/#returns","title":"Returns","text":"<p>Task&lt;UserDao&gt; The user or <code>null</code> if not found</p>"},{"location":"code/SlottyMedia/slottymedia.backend.repositories.iuserrepository/#exceptions","title":"Exceptions","text":"<p>T:System.Net.Http.HttpRequestException If an HTTP error occurs while fetching the entity from the database  (except for 404, in which case <code>null</code> is returned)</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/","title":"AuthService","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <pre><code>public class AuthService : SlottyMedia.Backend.Services.Interfaces.IAuthService\n</code></pre> <p>Inheritance Object \u2192 AuthService Implements IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#authserviceclient-icookieservice","title":"AuthService(Client, ICookieService)","text":"<p>Initialize scoped service by ctor injection</p> <pre><code>public AuthService(Client supabaseClient, ICookieService cookieService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#parameters","title":"Parameters","text":"<p><code>supabaseClient</code> Client Injected supabaseClient</p> <p><code>cookieService</code> ICookieService Injected cookieService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#signinstring-string","title":"SignIn(String, String)","text":"<pre><code>public Task&lt;Session&gt; SignIn(string email, string password)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#parameters_1","title":"Parameters","text":"<p><code>email</code> String</p> <p><code>password</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#savesessionasyncsession","title":"SaveSessionAsync(Session)","text":"<pre><code>public Task SaveSessionAsync(Session session)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#parameters_2","title":"Parameters","text":"<p><code>session</code> Session</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#restoresessionasync","title":"RestoreSessionAsync()","text":"<pre><code>public Task&lt;Session&gt; RestoreSessionAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_2","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#setsessionstring-string","title":"SetSession(String, String)","text":"<pre><code>public Task&lt;Session&gt; SetSession(string accessToken, string refreshToken)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#parameters_3","title":"Parameters","text":"<p><code>accessToken</code> String</p> <p><code>refreshToken</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_3","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#signout","title":"SignOut()","text":"<pre><code>public Task SignOut()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#refreshsessionstring-string","title":"RefreshSession(String, String)","text":"<pre><code>public Task&lt;Session&gt; RefreshSession(string accessToken, string refreshToken)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#parameters_4","title":"Parameters","text":"<p><code>accessToken</code> String</p> <p><code>refreshToken</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_5","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#isauthenticated","title":"IsAuthenticated()","text":"<pre><code>public bool IsAuthenticated()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_6","title":"Returns","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#getcurrentsession","title":"GetCurrentSession()","text":"<pre><code>public Session GetCurrentSession()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_7","title":"Returns","text":"<p>Session</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#getauthprincipalid","title":"GetAuthPrincipalId()","text":"<pre><code>public Nullable&lt;Guid&gt; GetAuthPrincipalId()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_8","title":"Returns","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#restoresessiononinit","title":"RestoreSessionOnInit()","text":"<p>This restores the session on initialization of the page.</p> <pre><code>public Task&lt;Session&gt; RestoreSessionOnInit()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.authservice/#returns_9","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/","title":"CommentService","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <pre><code>public class CommentService : SlottyMedia.Backend.Services.Interfaces.ICommentService\n</code></pre> <p>Inheritance Object \u2192 CommentService Implements ICommentService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#commentserviceicommentrepository","title":"CommentService(ICommentRepository)","text":"<pre><code>public CommentService(ICommentRepository commentRepository)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#parameters","title":"Parameters","text":"<p><code>commentRepository</code> ICommentRepository</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#getcommentbyidguid","title":"GetCommentById(Guid)","text":"<pre><code>public Task&lt;CommentDto&gt; GetCommentById(Guid commentId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#parameters_1","title":"Parameters","text":"<p><code>commentId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#returns","title":"Returns","text":"<p>Task&lt;CommentDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#insertcommentguid-guid-string","title":"InsertComment(Guid, Guid, String)","text":"<pre><code>public Task InsertComment(Guid creatorUserId, Guid postId, string content)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#parameters_2","title":"Parameters","text":"<p><code>creatorUserId</code> Guid</p> <p><code>postId</code> Guid</p> <p><code>content</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#updatecommentcommentdao","title":"UpdateComment(CommentDao)","text":"<pre><code>public Task UpdateComment(CommentDao comment)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#parameters_3","title":"Parameters","text":"<p><code>comment</code> CommentDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#deletecommentcommentdao","title":"DeleteComment(CommentDao)","text":"<pre><code>public Task DeleteComment(CommentDao comment)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#parameters_4","title":"Parameters","text":"<p><code>comment</code> CommentDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#countcommentsinpostguid","title":"CountCommentsInPost(Guid)","text":"<pre><code>public Task&lt;int&gt; CountCommentsInPost(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#parameters_5","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#returns_4","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#getcommentsinpostguid-pagerequest","title":"GetCommentsInPost(Guid, PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;CommentDto&gt;&gt; GetCommentsInPost(Guid postId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#parameters_6","title":"Parameters","text":"<p><code>postId</code> Guid</p> <p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.commentservice/#returns_5","title":"Returns","text":"<p>Task&lt;IPage&lt;CommentDto&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/","title":"CookieService","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <p>This class is used to perform JSInterops to perform Read, Write, Exec operations on cookies. It uses the stored  cookie.js file on client side (found in wwwroot/js)</p> <pre><code>public class CookieService : SlottyMedia.Backend.Services.Interfaces.ICookieService\n</code></pre> <p>Inheritance Object \u2192 CookieService Implements ICookieService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#cookieserviceijsruntime","title":"CookieService(IJSRuntime)","text":"<p>Sets a singleton by using ctor injection</p> <pre><code>public CookieService(IJSRuntime jsRuntime)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#parameters","title":"Parameters","text":"<p><code>jsRuntime</code> IJSRuntime</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#setcookiestring-string-int32","title":"SetCookie(String, String, Int32)","text":"<p>Sets a cookie by taking a name, value and a expiration offset</p> <pre><code>public ValueTask SetCookie(string name, string value, int days)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#parameters_1","title":"Parameters","text":"<p><code>name</code> String Name of the cookie (key)</p> <p><code>value</code> String Value of the cookie as string.</p> <p><code>days</code> Int32 Expiration offset in days.  Standard value: 7 Days</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#returns","title":"Returns","text":"<p>ValueTask Returns a value task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#getcookiestring","title":"GetCookie(String)","text":"<p>Gets a cookie by name</p> <pre><code>public ValueTask&lt;string&gt; GetCookie(string name)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#parameters_2","title":"Parameters","text":"<p><code>name</code> String Name of the cookie f.e. \"supabase.auth.token\"</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#returns_1","title":"Returns","text":"<p>ValueTask&lt;String&gt; Returns a value task of type string =&gt; output is the cookie value</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#removecookiestring","title":"RemoveCookie(String)","text":"<p>Removes a cookie by name</p> <pre><code>public ValueTask&lt;string&gt; RemoveCookie(string name)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#parameters_3","title":"Parameters","text":"<p><code>name</code> String Name of the cookie to identify it</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.cookieservice/#returns_2","title":"Returns","text":"<p>ValueTask&lt;String&gt; ValueTask of type string =&gt; output is the cookie value</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/","title":"ForumService","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <pre><code>public class ForumService : SlottyMedia.Backend.Services.Interfaces.IForumService\n</code></pre> <p>Inheritance Object \u2192 ForumService Implements IForumService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#forumserviceiforumrepository-itopforumrepository","title":"ForumService(IForumRepository, ITopForumRepository)","text":"<pre><code>public ForumService(IForumRepository forumRepository, ITopForumRepository topForumRepository)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#parameters","title":"Parameters","text":"<p><code>forumRepository</code> IForumRepository</p> <p><code>topForumRepository</code> ITopForumRepository</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#insertforumguid-string","title":"InsertForum(Guid, String)","text":"<pre><code>public Task InsertForum(Guid creatorUserId, string forumTopic)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#parameters_1","title":"Parameters","text":"<p><code>creatorUserId</code> Guid</p> <p><code>forumTopic</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#deleteforumforumdto","title":"DeleteForum(ForumDto)","text":"<pre><code>public Task DeleteForum(ForumDto forum)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#parameters_2","title":"Parameters","text":"<p><code>forum</code> ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#getforumbynamestring","title":"GetForumByName(String)","text":"<pre><code>public Task&lt;ForumDto&gt; GetForumByName(string forumName)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#parameters_3","title":"Parameters","text":"<p><code>forumName</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#returns_2","title":"Returns","text":"<p>Task&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#getforumbyidguid","title":"GetForumById(Guid)","text":"<pre><code>public Task&lt;ForumDto&gt; GetForumById(Guid forumId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#parameters_4","title":"Parameters","text":"<p><code>forumId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#returns_3","title":"Returns","text":"<p>Task&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#getallforumspagerequest","title":"GetAllForums(PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;ForumDto&gt;&gt; GetAllForums(PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#parameters_5","title":"Parameters","text":"<p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#returns_4","title":"Returns","text":"<p>Task&lt;IPage&lt;ForumDto&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#existsbynamestring","title":"ExistsByName(String)","text":"<pre><code>public Task&lt;bool&gt; ExistsByName(string forumName)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#parameters_6","title":"Parameters","text":"<p><code>forumName</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#returns_5","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#determinerecentspaces","title":"DetermineRecentSpaces()","text":"<pre><code>public Task&lt;List&lt;ForumDto&gt;&gt; DetermineRecentSpaces()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#returns_6","title":"Returns","text":"<p>Task&lt;List&lt;ForumDto&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#gettopforums","title":"GetTopForums()","text":"<pre><code>public Task&lt;List&lt;ForumDto&gt;&gt; GetTopForums()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.forumservice/#returns_7","title":"Returns","text":"<p>Task&lt;List&lt;ForumDto&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/","title":"IAuthService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>This interface provides functionalities to authenticate a user.  In this context, the Principal  refers to the currently logged-in user.</p> <pre><code>public interface IAuthService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#signinstring-string","title":"SignIn(String, String)","text":"<p>This method is used to sign in the user.</p> <pre><code>Task&lt;Session&gt; SignIn(string email, string password)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#parameters","title":"Parameters","text":"<p><code>email</code> String</p> <p><code>password</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#signout","title":"SignOut()","text":"<p>This method is used to sign out the user.</p> <pre><code>Task SignOut()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#restoresessionasync","title":"RestoreSessionAsync()","text":"<p>Should restore a session by reading in accessToken, refreshToken Cookie</p> <pre><code>Task&lt;Session&gt; RestoreSessionAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_2","title":"Returns","text":"<p>Task&lt;Session&gt; Returns a supabase session</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#savesessionasyncsession","title":"SaveSessionAsync(Session)","text":"<p>Saves the accessToken, refreshToken in form of a cookie in the clients browser</p> <pre><code>Task SaveSessionAsync(Session session)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#parameters_1","title":"Parameters","text":"<p><code>session</code> Session Session on which the tokens are extracted</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_3","title":"Returns","text":"<p>Task Returns the sessions again</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#isauthenticated","title":"IsAuthenticated()","text":"<p>Checks if a session exists</p> <pre><code>bool IsAuthenticated()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_4","title":"Returns","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#getauthprincipalid","title":"GetAuthPrincipalId()","text":"<p>Retrieves the authentication principal's user ID. Returns <code>null</code> if no authentication  principal is present.</p> <pre><code>Nullable&lt;Guid&gt; GetAuthPrincipalId()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_5","title":"Returns","text":"<p>Nullable&lt;Guid&gt; The principal's ID or <code>null</code> if none was present</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#setsessionstring-string","title":"SetSession(String, String)","text":"<p>Sets a session in form of a cookie on the client side by using wwwroot/js/cookies.js</p> <pre><code>Task&lt;Session&gt; SetSession(string accessToken, string refreshToken)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#parameters_2","title":"Parameters","text":"<p><code>accessToken</code> String AccessToken about to be set as cookie</p> <p><code>refreshToken</code> String RefreshToken about to be set as cookie</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_6","title":"Returns","text":"<p>Task&lt;Session&gt; Returns the session which was set</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#refreshsessionstring-string","title":"RefreshSession(String, String)","text":"<p>Restores a session on server- and client-side and refreshes a accessToken if necessary</p> <pre><code>Task&lt;Session&gt; RefreshSession(string accessToken, string refreshToken)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#parameters_3","title":"Parameters","text":"<p><code>accessToken</code> String AccessToken for restoration</p> <p><code>refreshToken</code> String RefreshToken for restoration</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_7","title":"Returns","text":"<p>Task&lt;Session&gt; Returns the new session</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#getcurrentsession","title":"GetCurrentSession()","text":"<p>Gets the current session set by the client</p> <pre><code>Session GetCurrentSession()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_8","title":"Returns","text":"<p>Session Returns the session</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#restoresessiononinit","title":"RestoreSessionOnInit()","text":"<p>This sets the session on initialization of the page.</p> <pre><code>Task&lt;Session&gt; RestoreSessionOnInit()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iauthservice/#returns_9","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/","title":"ICommentService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>The ICommentService interface is responsible for handling comment related operations.</p> <pre><code>public interface ICommentService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#getcommentbyidguid","title":"GetCommentById(Guid)","text":"<p>Fetches a comment by its ID.</p> <pre><code>Task&lt;CommentDto&gt; GetCommentById(Guid commentId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#parameters","title":"Parameters","text":"<p><code>commentId</code> Guid The comment's ID</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#returns","title":"Returns","text":"<p>Task&lt;CommentDto&gt; The comment</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#insertcommentguid-guid-string","title":"InsertComment(Guid, Guid, String)","text":"<p>Inserts a new comment into the database.</p> <pre><code>Task InsertComment(Guid creatorUserId, Guid postId, string content)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#parameters_1","title":"Parameters","text":"<p><code>creatorUserId</code> Guid The ID of the user who created the comment.</p> <p><code>postId</code> Guid The ID of the post to which the comment belongs.</p> <p><code>content</code> String The content of the comment.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#returns_1","title":"Returns","text":"<p>Task Returns the inserted CommentDto object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#exceptions","title":"Exceptions","text":"<p>CommentIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>CommentGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#updatecommentcommentdao","title":"UpdateComment(CommentDao)","text":"<p>Updates an existing comment in the database.</p> <pre><code>Task UpdateComment(CommentDao comment)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#parameters_2","title":"Parameters","text":"<p><code>comment</code> CommentDao The CommentDto object containing the updated comment details.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#returns_2","title":"Returns","text":"<p>Task Returns the updated CommentDto object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#exceptions_1","title":"Exceptions","text":"<p>CommentIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>CommentGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#deletecommentcommentdao","title":"DeleteComment(CommentDao)","text":"<p>Deletes a comment from the database.</p> <pre><code>Task DeleteComment(CommentDao comment)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#parameters_3","title":"Parameters","text":"<p><code>comment</code> CommentDao The CommentDto object containing the comment details.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#returns_3","title":"Returns","text":"<p>Task Returns a Task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#exceptions_2","title":"Exceptions","text":"<p>CommentIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>CommentGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#countcommentsinpostguid","title":"CountCommentsInPost(Guid)","text":"<p>Counts the total number of comments in the given post.</p> <pre><code>Task&lt;int&gt; CountCommentsInPost(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#parameters_4","title":"Parameters","text":"<p><code>postId</code> Guid The post to query</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#returns_4","title":"Returns","text":"<p>Task&lt;Int32&gt; The total number of comments</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#getcommentsinpostguid-pagerequest","title":"GetCommentsInPost(Guid, PageRequest)","text":"<p>Fetches all comments in the given post. Utilizes pagination in order to limit  the total number of queried posts: Only posts on the given page will be fetched.</p> <pre><code>Task&lt;IPage&lt;CommentDto&gt;&gt; GetCommentsInPost(Guid postId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#parameters_5","title":"Parameters","text":"<p><code>postId</code> Guid The post whose comments should be fetched</p> <p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icommentservice/#returns_5","title":"Returns","text":"<p>Task&lt;IPage&lt;CommentDto&gt;&gt; A list containing the queried posts</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/","title":"ICookieService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>Provides a contract for setting cookies on the clients server</p> <pre><code>public interface ICookieService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#setcookiestring-string-int32","title":"SetCookie(String, String, Int32)","text":"<p>Should set a cookie on the clients browser</p> <pre><code>ValueTask SetCookie(string name, string value, int days)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#parameters","title":"Parameters","text":"<p><code>name</code> String Name of the cookies</p> <p><code>value</code> String Value of the cookie</p> <p><code>days</code> Int32 Expiration offset in days</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#returns","title":"Returns","text":"<p>ValueTask Returns a valuetask</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#getcookiestring","title":"GetCookie(String)","text":"<p>Gets a cookie</p> <pre><code>ValueTask&lt;string&gt; GetCookie(string name)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#parameters_1","title":"Parameters","text":"<p><code>name</code> String Name to identify cookie</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#returns_1","title":"Returns","text":"<p>ValueTask&lt;String&gt; Returns a ValueTask of type string</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#removecookiestring","title":"RemoveCookie(String)","text":"<p>Removes a cookie on the client side by setting its duration below zero</p> <pre><code>ValueTask&lt;string&gt; RemoveCookie(string name)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#parameters_2","title":"Parameters","text":"<p><code>name</code> String Name to identify cookie</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.icookieservice/#returns_2","title":"Returns","text":"<p>ValueTask&lt;String&gt; Returns the cookie which was deleted</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/","title":"IForumService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>The IForumService interface is responsible for handling forum related operations.</p> <pre><code>public interface IForumService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#insertforumguid-string","title":"InsertForum(Guid, String)","text":"<p>Inserts a new forum into the database.</p> <pre><code>Task InsertForum(Guid creatorUserId, string forumTopic)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#parameters","title":"Parameters","text":"<p><code>creatorUserId</code> Guid The Creator UserID</p> <p><code>forumTopic</code> String The Topic from the Forum</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#returns","title":"Returns","text":"<p>Task Returns the inserted ForumDto object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#exceptions","title":"Exceptions","text":"<p>ForumIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>ForumGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#deleteforumforumdto","title":"DeleteForum(ForumDto)","text":"<p>Deletes a forum from the database based on the given forum ID.</p> <pre><code>Task DeleteForum(ForumDto forum)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#parameters_1","title":"Parameters","text":"<p><code>forum</code> ForumDto The forum to delete.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#returns_1","title":"Returns","text":"<p>Task Returns a Task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#exceptions_1","title":"Exceptions","text":"<p>ForumIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>ForumGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#getforumbynamestring","title":"GetForumByName(String)","text":"<p>Retrieves a forum with the given name.</p> <pre><code>Task&lt;ForumDto&gt; GetForumByName(string forumName)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#parameters_2","title":"Parameters","text":"<p><code>forumName</code> String The forum's name.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#returns_2","title":"Returns","text":"<p>Task&lt;ForumDto&gt; The requested forum</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#exceptions_2","title":"Exceptions","text":"<p>ForumNotFoundException Thrown when the forum is not found.</p> <p>ForumGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#getforumbyidguid","title":"GetForumById(Guid)","text":"<pre><code>Task&lt;ForumDto&gt; GetForumById(Guid forumId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#parameters_3","title":"Parameters","text":"<p><code>forumId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#returns_3","title":"Returns","text":"<p>Task&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#getallforumspagerequest","title":"GetAllForums(PageRequest)","text":"<p>Retrieves all forums with pagination.</p> <pre><code>Task&lt;IPage&lt;ForumDto&gt;&gt; GetAllForums(PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#parameters_4","title":"Parameters","text":"<p><code>pageRequest</code> PageRequest The pagination request details.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#returns_4","title":"Returns","text":"<p>Task&lt;IPage&lt;ForumDto&gt;&gt; A paginated list of forums.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#existsbynamestring","title":"ExistsByName(String)","text":"<pre><code>Task&lt;bool&gt; ExistsByName(string forumName)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#parameters_5","title":"Parameters","text":"<p><code>forumName</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#returns_5","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#determinerecentspaces","title":"DetermineRecentSpaces()","text":"<p>Retrieves the 3 most recent forums based on the creation date.</p> <pre><code>Task&lt;List&lt;ForumDto&gt;&gt; DetermineRecentSpaces()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#returns_6","title":"Returns","text":"<p>Task&lt;List&lt;ForumDto&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of the 3 most recent  ForumDto objects.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#exceptions_3","title":"Exceptions","text":"<p>ForumNotFoundException Thrown when the forums are not found.</p> <p>ForumGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#gettopforums","title":"GetTopForums()","text":"<p>Retrieves the top forums.</p> <pre><code>Task&lt;List&lt;ForumDto&gt;&gt; GetTopForums()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#returns_7","title":"Returns","text":"<p>Task&lt;List&lt;ForumDto&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of ForumDto objects  representing the top forums.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iforumservice/#exceptions_4","title":"Exceptions","text":"<p>ForumNotFoundException Thrown when the forums are not found.</p> <p>ForumGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/","title":"ILikeService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>Interface for LikeService which handles operations related to likes on posts.</p> <pre><code>public interface ILikeService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#insertlikeguid-guid","title":"InsertLike(Guid, Guid)","text":"<p>Inserts a like for a given post by a user.</p> <pre><code>Task&lt;bool&gt; InsertLike(Guid userId, Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the user who likes the post.</p> <p><code>postId</code> Guid The ID of the post to be liked.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#returns","title":"Returns","text":"<p>Task&lt;Boolean&gt; A task that represents the asynchronous operation. The task result contains a boolean indicating whether the  like was successfully inserted.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#exceptions","title":"Exceptions","text":"<p>LikeIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>LikeGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#deletelikeguid-guid","title":"DeleteLike(Guid, Guid)","text":"<p>Deletes a like for a given post by a user.</p> <pre><code>Task&lt;bool&gt; DeleteLike(Guid userId, Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the user who unlikes the post.</p> <p><code>postId</code> Guid The ID of the post to be unliked.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#returns_1","title":"Returns","text":"<p>Task&lt;Boolean&gt; A task that represents the asynchronous operation. The task result contains a boolean indicating whether the  like was successfully deleted.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#exceptions_1","title":"Exceptions","text":"<p>LikeNotFoundException Thrown when the like is not found.</p> <p>LikeIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>LikeGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#getlikesforpostguid","title":"GetLikesForPost(Guid)","text":"<p>Retrieves a list of user IDs who liked a given post.</p> <pre><code>Task&lt;List&lt;Guid&gt;&gt; GetLikesForPost(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#parameters_2","title":"Parameters","text":"<p><code>postId</code> Guid The ID of the post for which to retrieve likes.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#returns_2","title":"Returns","text":"<p>Task&lt;List&lt;Guid&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of user IDs who liked the  post.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ilikeservice/#exceptions_2","title":"Exceptions","text":"<p>LikeNotFoundException Thrown when the likes are not found.</p> <p>LikeGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/","title":"IPostService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>Interface for post-related services.</p> <pre><code>public interface IPostService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#getallpostspagerequest","title":"GetAllPosts(PageRequest)","text":"<p>Fetches all posts sorted by date in descending order. Fetches only a specified number of posts  on the specified page.</p> <pre><code>Task&lt;IPage&lt;PostDto&gt;&gt; GetAllPosts(PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#parameters","title":"Parameters","text":"<p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns","title":"Returns","text":"<p>Task&lt;IPage&lt;PostDto&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of PostDto objects.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#exceptions","title":"Exceptions","text":"<p>PostNotFoundException Thrown when the posts are not found.</p> <p>PostGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#countallposts","title":"CountAllPosts()","text":"<p>Counts all existing posts.</p> <pre><code>Task&lt;int&gt; CountAllPosts()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns_1","title":"Returns","text":"<p>Task&lt;Int32&gt; The total number of existing posts</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#getpostbyidguid","title":"GetPostById(Guid)","text":"<p>Attempts to fetch a post by ID. Returns null if such a post could not be found.</p> <pre><code>Task&lt;PostDto&gt; GetPostById(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid The post's ID.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns_2","title":"Returns","text":"<p>Task&lt;PostDto&gt; A task that represents the asynchronous operation. The task result contains the post or null if not found.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#exceptions_1","title":"Exceptions","text":"<p>PostNotFoundException Thrown when the post is not found.</p> <p>PostGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#insertpoststring-guid-guid","title":"InsertPost(String, Guid, Guid)","text":"<p>Inserts a new post into the database.</p> <pre><code>Task InsertPost(string content, Guid creatorUserId, Guid forumId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#parameters_2","title":"Parameters","text":"<p><code>content</code> String The content of the post.</p> <p><code>creatorUserId</code> Guid The UserId who created the post.</p> <p><code>forumId</code> Guid The ID of the forum the post should belong to.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns_3","title":"Returns","text":"<p>Task A task that represents the asynchronous operation. The task result contains the inserted post.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#exceptions_2","title":"Exceptions","text":"<p>PostIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>PostGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#updatepostpostsdao","title":"UpdatePost(PostsDao)","text":"<p>Updates an existing post in the database.</p> <pre><code>Task UpdatePost(PostsDao post)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#parameters_3","title":"Parameters","text":"<p><code>post</code> PostsDao The post to update.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns_4","title":"Returns","text":"<p>Task A task that represents the asynchronous operation. The task result contains the updated post.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#exceptions_3","title":"Exceptions","text":"<p>PostIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>PostGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#deletepostpostsdao","title":"DeletePost(PostsDao)","text":"<p>Deletes a post from the database.</p> <pre><code>Task DeletePost(PostsDao post)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#parameters_4","title":"Parameters","text":"<p><code>post</code> PostsDao The post to delete.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns_5","title":"Returns","text":"<p>Task A task that represents the asynchronous operation. The task result indicates whether the deletion was  successful.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#exceptions_4","title":"Exceptions","text":"<p>PostIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>PostGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#getforumcountbyuseridguid","title":"GetForumCountByUserId(Guid)","text":"<p>This method fetches the number of forums the user has created posts in.</p> <pre><code>Task&lt;int&gt; GetForumCountByUserId(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#parameters_5","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the user.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns_6","title":"Returns","text":"<p>Task&lt;Int32&gt; A task that represents the asynchronous operation. The task result contains the number of forums.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#exceptions_5","title":"Exceptions","text":"<p>PostGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#getpostsbyuseridguid-pagerequest","title":"GetPostsByUserId(Guid, PageRequest)","text":"<p>Gets posts of a user by their id and enables slicing via offsets.</p> <pre><code>Task&lt;IPage&lt;PostDto&gt;&gt; GetPostsByUserId(Guid userId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#parameters_6","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the user that the posts belong to.</p> <p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns_7","title":"Returns","text":"<p>Task&lt;IPage&lt;PostDto&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of PostDto objects.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#exceptions_6","title":"Exceptions","text":"<p>PostNotFoundException Thrown when the posts are not found.</p> <p>PostGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#getpostsbyforumidguid-pagerequest","title":"GetPostsByForumId(Guid, PageRequest)","text":"<p>Gets posts by forum ID and enables slicing via offsets.</p> <pre><code>Task&lt;IPage&lt;PostDto&gt;&gt; GetPostsByForumId(Guid forumId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#parameters_7","title":"Parameters","text":"<p><code>forumId</code> Guid The ID of the forum that the posts belong to.</p> <p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#returns_8","title":"Returns","text":"<p>Task&lt;IPage&lt;PostDto&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of PostDto objects.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.ipostservice/#exceptions_7","title":"Exceptions","text":"<p>PostNotFoundException Thrown when the posts are not found.</p> <p>PostGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/","title":"ISearchService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>This interface is used to define the Search Service.</p> <pre><code>public interface ISearchService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#searchbyusernamestring","title":"SearchByUsername(String)","text":"<p>Search function to retrieve all users for a specific search term.</p> <pre><code>Task&lt;SearchDto&gt; SearchByUsername(string searchTerm)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#parameters","title":"Parameters","text":"<p><code>searchTerm</code> String Search Term used for wildcard selection</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#returns","title":"Returns","text":"<p>Task&lt;SearchDto&gt; SearchDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#exceptions","title":"Exceptions","text":"<p>SearchGeneralExceptions Thrown when a general error occurs during the search.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#searchbytopicstring","title":"SearchByTopic(String)","text":"<p>Search function to retrieve forums by topic.</p> <pre><code>Task&lt;SearchDto&gt; SearchByTopic(string searchTerm)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#parameters_1","title":"Parameters","text":"<p><code>searchTerm</code> String Search Term used for wildcard search</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#returns_1","title":"Returns","text":"<p>Task&lt;SearchDto&gt; SearchDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isearchservice/#exceptions_1","title":"Exceptions","text":"<p>SearchGeneralExceptions Thrown when a general error occurs during the search.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isignupservice/","title":"ISignupService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>This service is used for signup operations for new users.</p> <pre><code>public interface ISignupService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isignupservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isignupservice/#signupstring-string-string","title":"SignUp(String, String, String)","text":"<p>Attempts to perform a signup operation.</p> <pre><code>Task&lt;Session&gt; SignUp(string username, string email, string password)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isignupservice/#parameters","title":"Parameters","text":"<p><code>username</code> String The user's username</p> <p><code>email</code> String The user's email</p> <p><code>password</code> String The user's password</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isignupservice/#returns","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.isignupservice/#exceptions","title":"Exceptions","text":"<p>UsernameAlreadyExistsException If a user with the provided username already exists</p> <p>EmailAlreadyExistsException If a user with the provided email already exists</p> <p>IllegalCharsInUsernameException If the provided username contains illegal characters</p> <p>IllegalUsernameLengthException If the provided username is of illegal length</p> <p>PasswordTooShortException If the provided password was too short</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/","title":"IUserService","text":"<p>Namespace: SlottyMedia.Backend.Services.Interfaces</p> <p>This interface defines the methods which can be used to interact with the User table in the database.</p> <pre><code>public interface IUserService\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#getuserdtobyidguid","title":"GetUserDtoById(Guid)","text":"<p>This method returns a User object from the database based on the given userId.</p> <pre><code>Task&lt;UserDto&gt; GetUserDtoById(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The UserID inside the Database</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns","title":"Returns","text":"<p>Task&lt;UserDto&gt; UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions","title":"Exceptions","text":"<p>UserNotFoundException Thrown when the user is not found.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#existsbyusernamestring","title":"ExistsByUserName(String)","text":"<p>Checks if a user with the given username exists.</p> <pre><code>Task&lt;bool&gt; ExistsByUserName(string username)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_1","title":"Parameters","text":"<p><code>username</code> String The user's username</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_1","title":"Returns","text":"<p>Task&lt;Boolean&gt; Whether a user with the given username exists</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#createuserstring-string-string-guid-string-string","title":"CreateUser(String, String, String, Guid, String, String)","text":"<p>This method creates a new User object in the database and returns the created object.</p> <pre><code>Task CreateUser(string userId, string username, string email, Guid roleId, string description, string profilePicture)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_2","title":"Parameters","text":"<p><code>userId</code> String The UserID from the Authentication Service</p> <p><code>username</code> String The Username, which the User set himself</p> <p><code>email</code> String The Email of the User</p> <p><code>roleId</code> Guid The Role ID of the User</p> <p><code>description</code> String The Description about the User</p> <p><code>profilePicture</code> String The ProfilePicture</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_2","title":"Returns","text":"<p>Task UserDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_1","title":"Exceptions","text":"<p>UserIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#updateuseruserdao","title":"UpdateUser(UserDao)","text":"<p>This method updates the given User object in the database and returns the updated object.</p> <pre><code>Task UpdateUser(UserDao user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_3","title":"Parameters","text":"<p><code>user</code> UserDao The User object</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_3","title":"Returns","text":"<p>Task UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_2","title":"Exceptions","text":"<p>UserIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#deleteuseruserdto","title":"DeleteUser(UserDto)","text":"<p>This method deletes the given User object from the database.</p> <pre><code>Task DeleteUser(UserDto user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_4","title":"Parameters","text":"<p><code>user</code> UserDto The User Object</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_4","title":"Returns","text":"<p>Task Return if the User got deleted or not</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_3","title":"Exceptions","text":"<p>UserIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#getprofilepicguid","title":"GetProfilePic(Guid)","text":"<p>This method returns the Profile Picture of the given User.</p> <pre><code>Task&lt;ProfilePicDto&gt; GetProfilePic(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_5","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the User</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_5","title":"Returns","text":"<p>Task&lt;ProfilePicDto&gt; Returns the Profile Picture of the User</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_4","title":"Exceptions","text":"<p>UserNotFoundException Thrown when the user is not found.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#getfriendsguid","title":"GetFriends(Guid)","text":"<p>This method returns a list of friends for the given user.</p> <pre><code>Task&lt;FriendsOfUserDto&gt; GetFriends(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_6","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the user</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_6","title":"Returns","text":"<p>Task&lt;FriendsOfUserDto&gt; Returns a FriendsOfUserDto object containing the list of friends</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_5","title":"Exceptions","text":"<p>UserNotFoundException Thrown when the user is not found.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#getcountofuserfriendsguid","title":"GetCountOfUserFriends(Guid)","text":"<p>This method retrieves the count of friends for a given user from the database.</p> <pre><code>Task&lt;int&gt; GetCountOfUserFriends(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_7","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the user whose friends count is to be retrieved.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_7","title":"Returns","text":"<p>Task&lt;Int32&gt; Returns the count of friends for the specified user.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_6","title":"Exceptions","text":"<p>UserGeneralException Thrown when a general database error occurs while fetching the friends count.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#getcountofuserspacesguid","title":"GetCountOfUserSpaces(Guid)","text":"<p>Gets all spaces a user has wrote in</p> <pre><code>Task&lt;int&gt; GetCountOfUserSpaces(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_8","title":"Parameters","text":"<p><code>userId</code> Guid User from which it should be retrieved</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_8","title":"Returns","text":"<p>Task&lt;Int32&gt; Returns the amount of spaces as task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_7","title":"Exceptions","text":"<p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#updateuseruserdto","title":"UpdateUser(UserDto)","text":"<p>Updates the given UserDto object in the database and returns the updated object.</p> <pre><code>Task UpdateUser(UserDto user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_9","title":"Parameters","text":"<p><code>user</code> UserDto The UserDto object to be updated.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_9","title":"Returns","text":"<p>Task A task that represents the asynchronous operation. The task result contains the updated UserDto object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_8","title":"Exceptions","text":"<p>UserIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#userfollowrelationguid-guid","title":"UserFollowRelation(Guid, Guid)","text":"<p>Checks whether a user follows another user based on their ids</p> <pre><code>Task&lt;bool&gt; UserFollowRelation(Guid userIdToCheck, Guid userIdLoggedIn)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_10","title":"Parameters","text":"<p><code>userIdToCheck</code> Guid UserId to check</p> <p><code>userIdLoggedIn</code> Guid UserId that may follow the one to check</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_10","title":"Returns","text":"<p>Task&lt;Boolean&gt; Boolean representing the state</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_9","title":"Exceptions","text":"<p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#getuserdaobyidguid","title":"GetUserDaoById(Guid)","text":"<p>Gets a user dao based on the user id</p> <pre><code>Task&lt;UserDao&gt; GetUserDaoById(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_11","title":"Parameters","text":"<p><code>userId</code> Guid Id to retrieve</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_11","title":"Returns","text":"<p>Task&lt;UserDao&gt; Returns a user dao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_10","title":"Exceptions","text":"<p>UserNotFoundException Thrown when the user is not found.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#followuserbyidguid-guid","title":"FollowUserById(Guid, Guid)","text":"<p>Method used to follow a user by id</p> <pre><code>Task FollowUserById(Guid userIdFollows, Guid userIdToFollow)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_12","title":"Parameters","text":"<p><code>userIdFollows</code> Guid The user that tries to follow another</p> <p><code>userIdToFollow</code> Guid The user that the user tries to follow</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_12","title":"Returns","text":"<p>Task Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_11","title":"Exceptions","text":"<p>UserIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#unfollowuserbyidguid-guid","title":"UnfollowUserById(Guid, Guid)","text":"<p>Method used to unfollow a user by id</p> <pre><code>Task UnfollowUserById(Guid userIdFollows, Guid userIdToUnfollow)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_13","title":"Parameters","text":"<p><code>userIdFollows</code> Guid The user that tries to unfollow another</p> <p><code>userIdToUnfollow</code> Guid The user that the user tries to unfollow</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_13","title":"Returns","text":"<p>Task Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#exceptions_12","title":"Exceptions","text":"<p>UserIudException Thrown when an error occurs during Insert, Update, or Delete operations.</p> <p>UserGeneralException Thrown when a general error occurs.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#getuserinfoguid-boolean-boolean","title":"GetUserInfo(Guid, Boolean, Boolean)","text":"<p>This sets a dto holding information about the current user in order to show the current users infos in the profile  card</p> <pre><code>Task&lt;UserInformationDto&gt; GetUserInfo(Guid userId, bool fetchFriends, bool fetchSpaces)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#parameters_14","title":"Parameters","text":"<p><code>userId</code> Guid User from which the dto should be retrieved</p> <p><code>fetchFriends</code> Boolean Determines if the Method should fetch the Friends Count of a User</p> <p><code>fetchSpaces</code> Boolean Determines if the Method should fetch the Spaces Count of a User</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.interfaces.iuserservice/#returns_14","title":"Returns","text":"<p>Task&lt;UserInformationDto&gt; Returns a task of type UserInformationDto. The dto is used to update the state in the view.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/","title":"LikeService","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <p>The service responsible for handling likes.</p> <pre><code>public class LikeService : SlottyMedia.Backend.Services.Interfaces.ILikeService\n</code></pre> <p>Inheritance Object \u2192 LikeService Implements ILikeService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#likeserviceiuserlikepostrelationrepostitory","title":"LikeService(IUserLikePostRelationRepostitory)","text":"<p>The constructor for the LikeService.</p> <pre><code>public LikeService(IUserLikePostRelationRepostitory likeRepository)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#parameters","title":"Parameters","text":"<p><code>likeRepository</code> IUserLikePostRelationRepostitory</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#insertlikeguid-guid","title":"InsertLike(Guid, Guid)","text":"<pre><code>public Task&lt;bool&gt; InsertLike(Guid userId, Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#returns","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#deletelikeguid-guid","title":"DeleteLike(Guid, Guid)","text":"<pre><code>public Task&lt;bool&gt; DeleteLike(Guid userId, Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#returns_1","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#getlikesforpostguid","title":"GetLikesForPost(Guid)","text":"<pre><code>public Task&lt;List&lt;Guid&gt;&gt; GetLikesForPost(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#parameters_3","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.likeservice/#returns_2","title":"Returns","text":"<p>Task&lt;List&lt;Guid&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/","title":"PostService","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <pre><code>public class PostService : SlottyMedia.Backend.Services.Interfaces.IPostService\n</code></pre> <p>Inheritance Object \u2192 PostService Implements IPostService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#postserviceipostrepository","title":"PostService(IPostRepository)","text":"<p>Initializes a new instance of the PostService class.</p> <pre><code>public PostService(IPostRepository postRepository)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters","title":"Parameters","text":"<p><code>postRepository</code> IPostRepository</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#insertpoststring-guid-guid","title":"InsertPost(String, Guid, Guid)","text":"<pre><code>public Task InsertPost(string content, Guid creatorUserId, Guid forumId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters_1","title":"Parameters","text":"<p><code>content</code> String</p> <p><code>creatorUserId</code> Guid</p> <p><code>forumId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#updatepostpostsdao","title":"UpdatePost(PostsDao)","text":"<pre><code>public Task UpdatePost(PostsDao post)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters_2","title":"Parameters","text":"<p><code>post</code> PostsDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#deletepostpostsdao","title":"DeletePost(PostsDao)","text":"<pre><code>public Task DeletePost(PostsDao post)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters_3","title":"Parameters","text":"<p><code>post</code> PostsDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#getpostbyidguid","title":"GetPostById(Guid)","text":"<pre><code>public Task&lt;PostDto&gt; GetPostById(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters_4","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns_3","title":"Returns","text":"<p>Task&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#getforumcountbyuseridguid","title":"GetForumCountByUserId(Guid)","text":"<pre><code>public Task&lt;int&gt; GetForumCountByUserId(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters_5","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns_4","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#getallpostspagerequest","title":"GetAllPosts(PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;PostDto&gt;&gt; GetAllPosts(PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters_6","title":"Parameters","text":"<p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns_5","title":"Returns","text":"<p>Task&lt;IPage&lt;PostDto&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#countallposts","title":"CountAllPosts()","text":"<pre><code>public Task&lt;int&gt; CountAllPosts()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns_6","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#getpostsbyuseridguid-pagerequest","title":"GetPostsByUserId(Guid, PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;PostDto&gt;&gt; GetPostsByUserId(Guid userId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters_7","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns_7","title":"Returns","text":"<p>Task&lt;IPage&lt;PostDto&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#getpostsbyforumidguid-pagerequest","title":"GetPostsByForumId(Guid, PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;PostDto&gt;&gt; GetPostsByForumId(Guid forumId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#parameters_8","title":"Parameters","text":"<p><code>forumId</code> Guid</p> <p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.postservice/#returns_8","title":"Returns","text":"<p>Task&lt;IPage&lt;PostDto&gt;&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/","title":"SearchService","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <p>Service for searching users and topics.</p> <pre><code>public class SearchService : SlottyMedia.Backend.Services.Interfaces.ISearchService\n</code></pre> <p>Inheritance Object \u2192 SearchService Implements ISearchService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#searchserviceiuserseachrepository-iforumsearchrepository","title":"SearchService(IUserSeachRepository, IForumSearchRepository)","text":"<p>Constructor to initialize the database actions dependency.</p> <pre><code>public SearchService(IUserSeachRepository userSearchRepository, IForumSearchRepository forumSearchRepository)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#parameters","title":"Parameters","text":"<p><code>userSearchRepository</code> IUserSeachRepository Repo used to retrieve search results.</p> <p><code>forumSearchRepository</code> IForumSearchRepository Repo used to retrieve search results specific to a forum</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#searchbyusernamestring","title":"SearchByUsername(String)","text":"<pre><code>public Task&lt;SearchDto&gt; SearchByUsername(string searchTerm)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#parameters_1","title":"Parameters","text":"<p><code>searchTerm</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#returns","title":"Returns","text":"<p>Task&lt;SearchDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#searchbytopicstring","title":"SearchByTopic(String)","text":"<pre><code>public Task&lt;SearchDto&gt; SearchByTopic(string searchTerm)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#parameters_2","title":"Parameters","text":"<p><code>searchTerm</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.searchservice/#returns_1","title":"Returns","text":"<p>Task&lt;SearchDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.signupserviceimpl/","title":"SignupServiceImpl","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <pre><code>public class SignupServiceImpl : SlottyMedia.Backend.Services.Interfaces.ISignupService\n</code></pre> <p>Inheritance Object \u2192 SignupServiceImpl Implements ISignupService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.signupserviceimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.signupserviceimpl/#signupserviceimplclient-iuserservice-icookieservice-irolerepository-iavatargenerator","title":"SignupServiceImpl(Client, IUserService, ICookieService, IRoleRepository, IAvatarGenerator)","text":"<p>Standard Constructor for dependency injection</p> <pre><code>public SignupServiceImpl(Client supabaseClient, IUserService userService, ICookieService cookieService, IRoleRepository roleRepository, IAvatarGenerator avatarGenerator)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.signupserviceimpl/#parameters","title":"Parameters","text":"<p><code>supabaseClient</code> Client</p> <p><code>userService</code> IUserService</p> <p><code>cookieService</code> ICookieService</p> <p><code>roleRepository</code> IRoleRepository</p> <p><code>avatarGenerator</code> IAvatarGenerator</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.signupserviceimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.signupserviceimpl/#signupstring-string-string","title":"SignUp(String, String, String)","text":"<pre><code>public Task&lt;Session&gt; SignUp(string username, string email, string password)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.signupserviceimpl/#parameters_1","title":"Parameters","text":"<p><code>username</code> String</p> <p><code>email</code> String</p> <p><code>password</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.signupserviceimpl/#returns","title":"Returns","text":"<p>Task&lt;Session&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/","title":"UserService","text":"<p>Namespace: SlottyMedia.Backend.Services</p> <p>This class is the User Service. It is responsible for handling all User related operations.</p> <pre><code>public class UserService : SlottyMedia.Backend.Services.Interfaces.IUserService\n</code></pre> <p>Inheritance Object \u2192 UserService Implements IUserService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#userserviceiuserrepository-ipostservice-ifolloweruserrelationrepository","title":"UserService(IUserRepository, IPostService, IFollowerUserRelationRepository)","text":"<p>This constructor creates a new UserService object.</p> <pre><code>public UserService(IUserRepository userRepository, IPostService postService, IFollowerUserRelationRepository followerUserRelationRepository)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters","title":"Parameters","text":"<p><code>userRepository</code> IUserRepository Repository used to fetch user table</p> <p><code>postService</code> IPostService This parameter is used to interact with the post service</p> <p><code>followerUserRelationRepository</code> IFollowerUserRelationRepository Repository used to fetch follower user relations</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#createuserstring-string-string-guid-string-string","title":"CreateUser(String, String, String, Guid, String, String)","text":"<pre><code>public Task CreateUser(string userId, string username, string email, Guid roleId, string description, string profilePicture)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_1","title":"Parameters","text":"<p><code>userId</code> String</p> <p><code>username</code> String</p> <p><code>email</code> String</p> <p><code>roleId</code> Guid</p> <p><code>description</code> String</p> <p><code>profilePicture</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#deleteuseruserdto","title":"DeleteUser(UserDto)","text":"<pre><code>public Task DeleteUser(UserDto user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_2","title":"Parameters","text":"<p><code>user</code> UserDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#getuserdtobyidguid","title":"GetUserDtoById(Guid)","text":"<pre><code>public Task&lt;UserDto&gt; GetUserDtoById(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_2","title":"Returns","text":"<p>Task&lt;UserDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#existsbyusernamestring","title":"ExistsByUserName(String)","text":"<pre><code>public Task&lt;bool&gt; ExistsByUserName(string username)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_4","title":"Parameters","text":"<p><code>username</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_3","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#updateuseruserdao","title":"UpdateUser(UserDao)","text":"<pre><code>public Task UpdateUser(UserDao user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_5","title":"Parameters","text":"<p><code>user</code> UserDao</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#updateuseruserdto","title":"UpdateUser(UserDto)","text":"<pre><code>public Task UpdateUser(UserDto user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_6","title":"Parameters","text":"<p><code>user</code> UserDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#userfollowrelationguid-guid","title":"UserFollowRelation(Guid, Guid)","text":"<pre><code>public Task&lt;bool&gt; UserFollowRelation(Guid userIdToCheck, Guid userIdLoggedIn)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_7","title":"Parameters","text":"<p><code>userIdToCheck</code> Guid</p> <p><code>userIdLoggedIn</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_6","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#getprofilepicguid","title":"GetProfilePic(Guid)","text":"<pre><code>public Task&lt;ProfilePicDto&gt; GetProfilePic(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_8","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_7","title":"Returns","text":"<p>Task&lt;ProfilePicDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#getfriendsguid","title":"GetFriends(Guid)","text":"<pre><code>public Task&lt;FriendsOfUserDto&gt; GetFriends(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_9","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_8","title":"Returns","text":"<p>Task&lt;FriendsOfUserDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#getcountofuserfriendsguid","title":"GetCountOfUserFriends(Guid)","text":"<pre><code>public Task&lt;int&gt; GetCountOfUserFriends(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_10","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_9","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#getcountofuserspacesguid","title":"GetCountOfUserSpaces(Guid)","text":"<pre><code>public Task&lt;int&gt; GetCountOfUserSpaces(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_11","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_10","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#getuserdaobyidguid","title":"GetUserDaoById(Guid)","text":"<pre><code>public Task&lt;UserDao&gt; GetUserDaoById(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_12","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_11","title":"Returns","text":"<p>Task&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#followuserbyidguid-guid","title":"FollowUserById(Guid, Guid)","text":"<pre><code>public Task FollowUserById(Guid userIdFollows, Guid userIdToFollow)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_13","title":"Parameters","text":"<p><code>userIdFollows</code> Guid</p> <p><code>userIdToFollow</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_12","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#unfollowuserbyidguid-guid","title":"UnfollowUserById(Guid, Guid)","text":"<pre><code>public Task UnfollowUserById(Guid userIdFollows, Guid userIdToUnfollow)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_14","title":"Parameters","text":"<p><code>userIdFollows</code> Guid</p> <p><code>userIdToUnfollow</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_13","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#getuserinfoguid-boolean-boolean","title":"GetUserInfo(Guid, Boolean, Boolean)","text":"<pre><code>public Task&lt;UserInformationDto&gt; GetUserInfo(Guid userId, bool fetchFriends, bool fetchSpaces)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#parameters_15","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>fetchFriends</code> Boolean</p> <p><code>fetchSpaces</code> Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.services.userservice/#returns_14","title":"Returns","text":"<p>Task&lt;UserInformationDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/","title":"AuthVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>This class implements the IAuthVm interface</p> <pre><code>public class AuthVm : SlottyMedia.Backend.ViewModel.Interfaces.IAuthVm\n</code></pre> <p>Inheritance Object \u2192 AuthVm Implements IAuthVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#authvmiauthservice","title":"AuthVm(IAuthService)","text":"<p>This constructor initializes the AuthService</p> <pre><code>public AuthVm(IAuthService authVmImpl)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#parameters","title":"Parameters","text":"<p><code>authVmImpl</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#getcurrentsession","title":"GetCurrentSession()","text":"<pre><code>public Session GetCurrentSession()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#returns","title":"Returns","text":"<p>Session</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#getcurrentuserid","title":"GetCurrentUserId()","text":"<pre><code>public Guid GetCurrentUserId()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#returns_1","title":"Returns","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#isauthenticated","title":"IsAuthenticated()","text":"<pre><code>public bool IsAuthenticated()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvm/#returns_2","title":"Returns","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvmimpl/","title":"AuthVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>This class implements the IAuthVmImpl interface</p> <pre><code>public class AuthVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IAuthVm\n</code></pre> <p>Inheritance Object \u2192 AuthVmImpl Implements IAuthVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvmimpl/#authvmimpliauthservice","title":"AuthVmImpl(IAuthService)","text":"<p>This constructor initializes the AuthService</p> <pre><code>public AuthVmImpl(IAuthService authVmImpl)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvmimpl/#parameters","title":"Parameters","text":"<p><code>authVmImpl</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvmimpl/#getcurrentsession","title":"GetCurrentSession()","text":"<pre><code>public Session GetCurrentSession()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.authvmimpl/#returns","title":"Returns","text":"<p>Session</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/","title":"CommentSubmissionFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <pre><code>public class CommentSubmissionFormVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.ICommentSubmissionFormVm\n</code></pre> <p>Inheritance Object \u2192 CommentSubmissionFormVmImpl Implements ICommentSubmissionFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#text","title":"Text","text":"<pre><code>public string Text { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#texterrormessage","title":"TextErrorMessage","text":"<pre><code>public string TextErrorMessage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<pre><code>public string ServerErrorMessage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#userinformation","title":"UserInformation","text":"<pre><code>public UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#property-value_3","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#property-value_4","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#commentsubmissionformvmimpliauthservice-icommentservice-navigationmanager-iuserservice","title":"CommentSubmissionFormVmImpl(IAuthService, ICommentService, NavigationManager, IUserService)","text":"<p>Instantiates this class</p> <pre><code>public CommentSubmissionFormVmImpl(IAuthService authService, ICommentService commentService, NavigationManager navigationManager, IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#parameters","title":"Parameters","text":"<p><code>authService</code> IAuthService</p> <p><code>commentService</code> ICommentService</p> <p><code>navigationManager</code> NavigationManager</p> <p><code>userService</code> IUserService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#submitformguid","title":"SubmitForm(Guid)","text":"<pre><code>public Task SubmitForm(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#initializenullableguid","title":"Initialize(Nullable&lt;Guid&gt;)","text":"<pre><code>public Task Initialize(Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentsubmissionformvmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/","title":"CommentVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <pre><code>public class CommentVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.ICommentVm\n</code></pre> <p>Inheritance Object \u2192 CommentVmImpl Implements ICommentVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#dto","title":"Dto","text":"<pre><code>public CommentDto Dto { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#property-value_1","title":"Property Value","text":"<p>CommentDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#userinfo","title":"UserInfo","text":"<pre><code>public UserInformationDto UserInfo { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#property-value_2","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#commentvmimplicommentservice-iuserservice-navigationmanager","title":"CommentVmImpl(ICommentService, IUserService, NavigationManager)","text":"<p>The constructor for the CommentVmImpl.</p> <pre><code>public CommentVmImpl(ICommentService commentService, IUserService userService, NavigationManager navigationManager)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#parameters","title":"Parameters","text":"<p><code>commentService</code> ICommentService</p> <p><code>userService</code> IUserService</p> <p><code>navigationManager</code> NavigationManager</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#initializeguid","title":"Initialize(Guid)","text":"<pre><code>public Task Initialize(Guid commentId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#parameters_1","title":"Parameters","text":"<p><code>commentId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.commentvmimpl/#gotocreatorprofile","title":"GoToCreatorProfile()","text":"<pre><code>public void GoToCreatorProfile()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/","title":"DescriptionContainerVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>The DescriptionContainerVmImpl class is responsible for handling the logic for the DescriptionContainerVm.</p> <pre><code>public class DescriptionContainerVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IDescriptionContainerVm\n</code></pre> <p>Inheritance Object \u2192 DescriptionContainerVmImpl Implements IDescriptionContainerVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#showdescriptiontext","title":"ShowDescriptionText","text":"<p>Flag to determine whether to show the description text or the input field.</p> <pre><code>public bool ShowDescriptionText { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#descriptioncontainervmimpliuserservice","title":"DescriptionContainerVmImpl(IUserService)","text":"<p>The constructor for the DescriptionContainerVmImpl.</p> <pre><code>public DescriptionContainerVmImpl(IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#parameters","title":"Parameters","text":"<p><code>userService</code> IUserService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#submitdescriptionasyncstring-nullableguid","title":"SubmitDescriptionAsync(String, Nullable&lt;Guid&gt;)","text":"<pre><code>public Task SubmitDescriptionAsync(string description, Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#parameters_1","title":"Parameters","text":"<p><code>description</code> String</p> <p><code>userId</code> Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.descriptioncontainervmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/","title":"HomePageVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <pre><code>public class HomePageVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IHomePageVm\n</code></pre> <p>Inheritance Object \u2192 HomePageVmImpl Implements IHomePageVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#isloadingpage","title":"IsLoadingPage","text":"<pre><code>public bool IsLoadingPage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#page","title":"Page","text":"<pre><code>public IPage&lt;PostDto&gt; Page { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#property-value_2","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#homepagevmimplipostservice-iauthservice","title":"HomePageVmImpl(IPostService, IAuthService)","text":"<p>Instantiates this class</p> <pre><code>public HomePageVmImpl(IPostService postService, IAuthService authService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#parameters","title":"Parameters","text":"<p><code>postService</code> IPostService</p> <p><code>authService</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#initialize","title":"Initialize()","text":"<pre><code>public Task Initialize()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#loadpageint32","title":"LoadPage(Int32)","text":"<pre><code>public Task LoadPage(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.homepagevmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvm/","title":"IAuthVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>Interface used as auth viewmodel</p> <pre><code>public interface IAuthVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvm/#getcurrentsession","title":"GetCurrentSession()","text":"<p>Gets the current logged in session of a user.</p> <pre><code>Session GetCurrentSession()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvm/#returns","title":"Returns","text":"<p>Session The current session of the user. Can be null if the user isn't logged in.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvm/#getcurrentuserid","title":"GetCurrentUserId()","text":"<p>Gets the user ID of the current logged in user.</p> <pre><code>Guid GetCurrentUserId()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvm/#returns_1","title":"Returns","text":"<p>Guid The user ID as a Guid.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvm/#isauthenticated","title":"IsAuthenticated()","text":"<p>Checks if the user is authenticated.</p> <pre><code>bool IsAuthenticated()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvm/#returns_2","title":"Returns","text":"<p>Boolean True if the user is authenticated, otherwise false.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvmimpl/","title":"IAuthVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>Interface used as auth viewmodel</p> <pre><code>public interface IAuthVmImpl\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvmimpl/#getcurrentsession","title":"GetCurrentSession()","text":"<p>Gets the current logged in session of a user</p> <pre><code>Session GetCurrentSession()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iauthvmimpl/#returns","title":"Returns","text":"<p>Session Session. Can be null if user isn't logged in</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/","title":"ICommentSubmissionFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents the state of the CommentSubmissionForm component.</p> <pre><code>public interface ICommentSubmissionFormVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#text","title":"Text","text":"<p>The post's textual content</p> <pre><code>public abstract string Text { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#texterrormessage","title":"TextErrorMessage","text":"<p>An optional error message related to the post's textual content</p> <pre><code>public abstract string TextErrorMessage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#userinformation","title":"UserInformation","text":"<p>The user information data transfer object to be rendered.</p> <pre><code>public abstract UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#property-value_3","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#isloading","title":"IsLoading","text":"<p>Gets a value indicating whether the data is still loading.</p> <pre><code>public abstract bool IsLoading { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#property-value_4","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#submitformguid","title":"SubmitForm(Guid)","text":"<p>Attempts to submit the form. If successful, the post was created.  Otherwise, displays an appropriate error message regarding the submission's  failure.</p> <pre><code>Task SubmitForm(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#parameters","title":"Parameters","text":"<p><code>postId</code> Guid The ID of the post to submit the comment for</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#initializenullableguid","title":"Initialize(Nullable&lt;Guid&gt;)","text":"<p>Initializes the ViewModel with the specified user ID.</p> <pre><code>Task Initialize(Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Nullable&lt;Guid&gt; The ID of the user to load information for.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentsubmissionformvm/#returns_1","title":"Returns","text":"<p>Task A task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/","title":"ICommentVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>Interface for the Comment ViewModel.</p> <pre><code>public interface ICommentVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#isloading","title":"IsLoading","text":"<p>Whether the necessary comment-related data is still being loaded.</p> <pre><code>public abstract bool IsLoading { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#dto","title":"Dto","text":"<p>The comment that should be rendered.</p> <pre><code>public abstract CommentDto Dto { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#property-value_1","title":"Property Value","text":"<p>CommentDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#userinfo","title":"UserInfo","text":"<p>User-related information about the comment's creator.</p> <pre><code>public abstract UserInformationDto UserInfo { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#property-value_2","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#initializeguid","title":"Initialize(Guid)","text":"<p>Initializes this view model with the provided comment ID.  This loads all comment-related information.</p> <pre><code>Task Initialize(Guid commentId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#parameters","title":"Parameters","text":"<p><code>commentId</code> Guid The ID of the comment that should be loaded</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.icommentvm/#gotocreatorprofile","title":"GoToCreatorProfile()","text":"<p>Navigates to the comment creator's profile page.</p> <pre><code>void GoToCreatorProfile()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.idescriptioncontainervm/","title":"IDescriptionContainerVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>Interface for the DescriptionContainer ViewModel.</p> <pre><code>public interface IDescriptionContainerVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.idescriptioncontainervm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.idescriptioncontainervm/#showdescriptiontext","title":"ShowDescriptionText","text":"<p>Flag to determine whether to show the description text or the input field.</p> <pre><code>public abstract bool ShowDescriptionText { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.idescriptioncontainervm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.idescriptioncontainervm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.idescriptioncontainervm/#submitdescriptionasyncstring-nullableguid","title":"SubmitDescriptionAsync(String, Nullable&lt;Guid&gt;)","text":"<p>Submits the description asynchronously.</p> <pre><code>Task SubmitDescriptionAsync(string description, Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.idescriptioncontainervm/#parameters","title":"Parameters","text":"<p><code>description</code> String The description text to submit.</p> <p><code>userId</code> Nullable&lt;Guid&gt; The ID of the user to update the description for.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.idescriptioncontainervm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/","title":"IHomePageVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents the state of the Home page.</p> <pre><code>public interface IHomePageVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The ID of the currently logged in user.</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#isloadingpage","title":"IsLoadingPage","text":"<p>Indicates whether the page is loading (for the first time)</p> <pre><code>public abstract bool IsLoadingPage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#page","title":"Page","text":"<p>The posts that will be showcased</p> <pre><code>public abstract IPage&lt;PostDto&gt; Page { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#property-value_2","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#initialize","title":"Initialize()","text":"<p>Initializes this ViewModel, which counts the total number of existing posts and loads the first few  posts into the view.</p> <pre><code>Task Initialize()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#loadpageint32","title":"LoadPage(Int32)","text":"<p>Loads more posts to the view. Does nothing if all posts have already been fetched.</p> <pre><code>Task LoadPage(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#parameters","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ihomepagevm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/","title":"IMainLayoutVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This Interface represents the viewmodel of the MainLayout (root of our application)</p> <pre><code>public interface IMainLayoutVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#userinformation","title":"UserInformation","text":"<p>Gets the user information data transfer object to be rendered.</p> <pre><code>public abstract UserInformationDto UserInformation { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#property-value","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#restoresessiononinit","title":"RestoreSessionOnInit()","text":"<p>This sets the session on initialization of the page.</p> <pre><code>Task&lt;Session&gt; RestoreSessionOnInit()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#returns","title":"Returns","text":"<p>Task&lt;Session&gt; Returns the restored session, or null if nothing was restored.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#setuserinfo","title":"SetUserInfo()","text":"<p>This sets a dto holding information about the current user in order to show the current users infos in the profile  card</p> <pre><code>Task SetUserInfo()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#returns_1","title":"Returns","text":"<p>Task Returns a task of type UserInformationDto. The dto is used to update the state in the view. It's null if a error  occured.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#persistuseravatarindbstring","title":"PersistUserAvatarInDb(String)","text":"<p>This function persists a new avatar of the currently authenticated user</p> <pre><code>Task&lt;string&gt; PersistUserAvatarInDb(string base64Encoding)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#parameters","title":"Parameters","text":"<p><code>base64Encoding</code> String The base64Encoding to persist to db</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.imainlayoutvm/#returns_2","title":"Returns","text":"<p>Task&lt;String&gt; Returns a task of type string. The string represents the base64 encoding persisted in db. Or null if a error  occured;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/","title":"IPostPageVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents the state of the PostPage.</p> <pre><code>public interface IPostPageVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#isloadingpage","title":"IsLoadingPage","text":"<p>Indicates whether the post is being fetched (i.e. the whole page is loading)</p> <pre><code>public abstract bool IsLoadingPage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#isloadingcomments","title":"IsLoadingComments","text":"<p>Indicates whether additional comments are being fetched</p> <pre><code>public abstract bool IsLoadingComments { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#post","title":"Post","text":"<p>The post that will be showcased. If <code>null</code>, then the post is either being fetched or it does not exist.</p> <pre><code>public abstract PostDto Post { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#property-value_2","title":"Property Value","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#comments","title":"Comments","text":"<p>The comments that belong to the post</p> <pre><code>public abstract IPage&lt;CommentDto&gt; Comments { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#property-value_3","title":"Property Value","text":"<p>IPage&lt;CommentDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The ID of the currently logged in user.</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#property-value_4","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#initializeguid","title":"Initialize(Guid)","text":"<p>Attempts to load the given post. If no such post exists, then IPostPageVm.Post will be <code>null</code>.  Otherwise, it will be a PostDto that corresponds to the requested post.</p> <pre><code>Task Initialize(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#parameters","title":"Parameters","text":"<p><code>postId</code> Guid The ID of the post to showcase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#loadcommentspageint32","title":"LoadCommentsPage(Int32)","text":"<p>Attempts to load more comments than were already showcased. Does nothing if no further comments exist.</p> <pre><code>Task LoadCommentsPage(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostpagevm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/","title":"IPostSubmissionFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents a form that is used to create a post.  It contains fields for the post's textual data and fields that  represent corresponding errors.</p> <pre><code>public interface IPostSubmissionFormVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#text","title":"Text","text":"<p>The post's textual content</p> <pre><code>public abstract string Text { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#spaceprompt","title":"SpacePrompt","text":"<p>The prompt the user should input in order to select the space. This field is null if a space was selected.</p> <pre><code>public abstract string SpacePrompt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#spacename","title":"SpaceName","text":"<p>The name of the space the user has selected. Null corresponds to no selection.</p> <pre><code>public abstract string SpaceName { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#searchedspaces","title":"SearchedSpaces","text":"<p>A list containing all space names that contain the searched prompt</p> <pre><code>public abstract List&lt;string&gt; SearchedSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_3","title":"Property Value","text":"<p>List&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#spaceerrormessage","title":"SpaceErrorMessage","text":"<p>An optional error message related to the post's space</p> <pre><code>public abstract string SpaceErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#texterrormessage","title":"TextErrorMessage","text":"<p>An optional error message related to the post's textual content</p> <pre><code>public abstract string TextErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#userinformation","title":"UserInformation","text":"<p>The user information data transfer object to be rendered.</p> <pre><code>public abstract UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_7","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#isloading","title":"IsLoading","text":"<p>Gets a value indicating whether the data is still loading.</p> <pre><code>public abstract bool IsLoading { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#property-value_8","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#handlespacepromptchangechangeeventargs-eventcallbackstring","title":"HandleSpacePromptChange(ChangeEventArgs, EventCallback&lt;String&gt;)","text":"<p>Handles an event that is triggered whenever the user changes the prompt to select a space.  This updates the list of matching spaces in the tooltip above the prompt's input field.</p> <pre><code>Task HandleSpacePromptChange(ChangeEventArgs e, EventCallback&lt;string&gt; promptValueChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#parameters","title":"Parameters","text":"<p><code>e</code> ChangeEventArgs The input field's change event</p> <p><code>promptValueChanged</code> EventCallback&lt;String&gt; A callback that is invoked asynchronously</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#handlespaceselectionstring","title":"HandleSpaceSelection(String)","text":"<p>Handles an event that is triggered when the user selects a space from the list of available spaces  based on the entered prompt. This sets \"SpacePrompt\" to null and \"SpaceName\" to the selected space name.  This method assumes that the provided space name is valid and does not check whether the provided space  actually exists!</p> <pre><code>void HandleSpaceSelection(string spaceName)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#parameters_1","title":"Parameters","text":"<p><code>spaceName</code> String The name of the selected space (without hashtag!)</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#handlespacedeselection","title":"HandleSpaceDeselection()","text":"<p>Handles an event that is triggered when the currently selected space is deselected.  This sets \"SpaceName\" to null.</p> <pre><code>void HandleSpaceDeselection()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#submitform","title":"SubmitForm()","text":"<p>Attempts to submit the form. If successful, the post was created.  Otherwise, displays an appropriate error message regarding the submission's  failure.</p> <pre><code>Task SubmitForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#initializenullableguid","title":"Initialize(Nullable&lt;Guid&gt;)","text":"<p>Initializes the ViewModel with the specified user ID.</p> <pre><code>Task Initialize(Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Nullable&lt;Guid&gt; The ID of the user to load information for.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostsubmissionformvm/#returns_2","title":"Returns","text":"<p>Task A task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/","title":"IPostVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>The interface for post view model implementation.</p> <pre><code>public interface IPostVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The user ID of the authentication principal</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#ispostliked","title":"IsPostLiked","text":"<p>Gets a value indicating whether the post was liked by the user.</p> <pre><code>public abstract bool IsPostLiked { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#isloading","title":"IsLoading","text":"<p>Gets a value indicating whether the post view model is currently loading.</p> <pre><code>public abstract bool IsLoading { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#postdto","title":"PostDto","text":"<p>The post's corresponding DTO</p> <pre><code>public abstract PostDto PostDto { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#property-value_3","title":"Property Value","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#commentcount","title":"CommentCount","text":"<p>Gets the count of comments on the post.</p> <pre><code>public abstract int CommentCount { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#property-value_4","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#likecount","title":"LikeCount","text":"<p>Gets the count of likes on the post.</p> <pre><code>public abstract int LikeCount { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#property-value_5","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#userinformation","title":"UserInformation","text":"<p>Gets the user information associated with the post.</p> <pre><code>public abstract UserInformationDto UserInformation { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#property-value_6","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#initializeguid-action","title":"Initialize(Guid, Action)","text":"<p>Initializes the post view model.</p> <pre><code>Task Initialize(Guid postId, Action onStateChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#parameters","title":"Parameters","text":"<p><code>postId</code> Guid The ID of the post.</p> <p><code>onStateChanged</code> Action An event that is triggered whenever the internal state changes.  This is intended to re-render the component!</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#returns","title":"Returns","text":"<p>Task A task that represents the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#likethispost","title":"LikeThisPost()","text":"<p>Likes a post by a user.</p> <pre><code>Task LikeThisPost()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#returns_1","title":"Returns","text":"<p>Task A task that represents the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#gotopostpage","title":"GoToPostPage()","text":"<p>Navigates to the post's dedicated page (<code>/post/POST-ID</code>)</p> <pre><code>void GoToPostPage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ipostvm/#gotoprofilepage","title":"GoToProfilePage()","text":"<p>Navigates to the post's owner's profile page (<code>/profile/USER-ID</code>)</p> <pre><code>void GoToProfilePage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/","title":"IProfilePageVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents the Profile page.</p> <pre><code>public interface IProfilePageVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#isloadingpage","title":"IsLoadingPage","text":"<p>Whether the whole page is being loaded</p> <pre><code>public abstract bool IsLoadingPage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#isloadingposts","title":"IsLoadingPosts","text":"<p>Whether the posts on the page are being loaded</p> <pre><code>public abstract bool IsLoadingPosts { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#isuserfollowed","title":"IsUserFollowed","text":"<p>Whether the authentication principal is following the user whose profile is being visited</p> <pre><code>public abstract bool IsUserFollowed { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The authentication principal's user ID (i.e. the user that's logged in)</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#property-value_3","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#userinfo","title":"UserInfo","text":"<p>Information about the user whose profile is being visited</p> <pre><code>public abstract UserInformationDto UserInfo { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#property-value_4","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#posts","title":"Posts","text":"<p>The posts that are currently being rendered</p> <pre><code>public abstract IPage&lt;PostDto&gt; Posts { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#property-value_5","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#initializeguid","title":"Initialize(Guid)","text":"<p>Initialized the page's state. This fetches all user-related information and loads  the first posts for the visited user. Also initializes the IProfilePageVm.AuthPrincipalId  if one is present.</p> <pre><code>Task Initialize(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the user whose profile should be visited</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#followthisuser","title":"FollowThisUser()","text":"<p>Has the authentication principal follow the visited profile. Does  nothing if no authentication principal is present.</p> <pre><code>Task FollowThisUser()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#unfollowthisuser","title":"UnfollowThisUser()","text":"<p>Has the authentication principal unfollow the visited profile. Does  nothing if no authentication principal is present.</p> <pre><code>Task UnfollowThisUser()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#loadpostsint32","title":"LoadPosts(Int32)","text":"<p>Loads more IProfilePageVm.Posts for the visited profile by changing the current  page (as in pagination).</p> <pre><code>Task LoadPosts(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32 The page number</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iprofilepagevm/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/","title":"ISearchVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This Interface represents the viewmodel of the Search</p> <pre><code>public interface ISearchVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#searchprompt","title":"SearchPrompt","text":"<p>The prompt the user should input in order to search for a space or user</p> <pre><code>public abstract string SearchPrompt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#searchresults","title":"SearchResults","text":"<p>The search results</p> <pre><code>public abstract SearchDto SearchResults { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#property-value_1","title":"Property Value","text":"<p>SearchDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#getsearchresultschangeeventargs-eventcallbackstring","title":"GetSearchResults(ChangeEventArgs, EventCallback&lt;String&gt;)","text":"<p>This function searches for spaces or users based on the input of the user</p> <pre><code>Task GetSearchResults(ChangeEventArgs e, EventCallback&lt;string&gt; promptValueChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#parameters","title":"Parameters","text":"<p><code>e</code> ChangeEventArgs</p> <p><code>promptValueChanged</code> EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isearchvm/#clearsearchresults","title":"ClearSearchResults()","text":"<p>This function clears the search results</p> <pre><code>void ClearSearchResults()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/","title":"ISignInFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>Interface used for dependency injection on the SignInFormVm</p> <pre><code>public interface ISignInFormVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#email","title":"Email","text":"<p>The form's email address</p> <pre><code>public abstract string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#emailerrormessage","title":"EmailErrorMessage","text":"<p>An optional error message that is caused by the email address</p> <pre><code>public abstract string EmailErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#password","title":"Password","text":"<p>The form's password</p> <pre><code>public abstract string Password { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#passworderrormessage","title":"PasswordErrorMessage","text":"<p>An optional error message that is caused by the password</p> <pre><code>public abstract string PasswordErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#submitsigninform","title":"SubmitSignInForm()","text":"<p>Attempts to submit the form. If this is successful, then the user was signed in  successfully and cookies have been set. Otherwise, displays an appropriate error  message.</p> <pre><code>Task SubmitSignInForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isigninformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/","title":"ISignupFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel is used for the app's signup page. It represents the  form's internal state and provides functionalities for submitting the  form as well.</p> <pre><code>public interface ISignupFormVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#username","title":"Username","text":"<p>The form's username</p> <pre><code>public abstract string Username { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#usernameerrormessage","title":"UsernameErrorMessage","text":"<p>An optional error message that is caused by the username</p> <pre><code>public abstract string UsernameErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#email","title":"Email","text":"<p>The form's email address</p> <pre><code>public abstract string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#emailerrormessage","title":"EmailErrorMessage","text":"<p>An optional error message that is caused by the email address</p> <pre><code>public abstract string EmailErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#password","title":"Password","text":"<p>The form's password</p> <pre><code>public abstract string Password { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#passworderrormessage","title":"PasswordErrorMessage","text":"<p>An optional error message that is caused by the password</p> <pre><code>public abstract string PasswordErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#submitsignupform","title":"SubmitSignupForm()","text":"<p>Attempts to submit the form. If this is successful, then the user was signed up  successfully and cookies have been set. Otherwise, an exception is thrown.</p> <pre><code>Task SubmitSignupForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.isignupformvm/#exceptions","title":"Exceptions","text":"<p>ArgumentException If an input field was left empty but was required</p> <p>UsernameAlreadyExistsException If the username is already in use</p> <p>EmailAlreadyExistsException If the email address is already in use</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/","title":"ISpacesCardVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents the state of the SpacesCard component.</p> <pre><code>public interface ISpacesCardVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#trendingspaces","title":"TrendingSpaces","text":"<p>A list containing all trending spaces</p> <pre><code>public abstract List&lt;ForumDto&gt; TrendingSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#property-value","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#recentspaces","title":"RecentSpaces","text":"<p>A list containing all recent spaces</p> <pre><code>public abstract List&lt;ForumDto&gt; RecentSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#property-value_1","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#numofpostsinspace","title":"NumOfPostsInSpace","text":"<p>A dictionary that maps a space ID to the toal number of posts in that  space. Only spaces listed in ISpacesCardVm.TrendingSpaces and ISpacesCardVm.RecentSpaces  will be considered.</p> <pre><code>public abstract Dictionary&lt;Guid, int&gt; NumOfPostsInSpace { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#property-value_2","title":"Property Value","text":"<p>Dictionary&lt;Guid, Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#fetch","title":"Fetch()","text":"<p>Fetches all trending spaces, recent spaces and evaluates how many posts exist per space.</p> <pre><code>Task Fetch()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacescardvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/","title":"ISpacesVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents the state of the Spaces Page.</p> <pre><code>public interface ISpacesVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/#forums","title":"Forums","text":"<p>A list containing all spaces that should be rendered</p> <pre><code>public abstract List&lt;ForumDto&gt; Forums { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/#property-value","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/#isloading","title":"IsLoading","text":"<p>Indicates whether the ViewModel is currently loading data.</p> <pre><code>public abstract bool IsLoading { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/#loadforums","title":"LoadForums()","text":"<p>Fetches all forums and populates the ISpacesVm.Forums property.</p> <pre><code>Task LoadForums()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacesvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/","title":"ISpaceVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>This ViewModel represents the state of the Space Page.</p> <pre><code>public interface ISpaceVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#isloadingpage","title":"IsLoadingPage","text":"<p>Whether the whole page is being loaded</p> <pre><code>public abstract bool IsLoadingPage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#isloadingposts","title":"IsLoadingPosts","text":"<p>Whether the posts on the page are being loaded</p> <pre><code>public abstract bool IsLoadingPosts { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The authentication principal's user ID (i.e. the user that's logged in)</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#space","title":"Space","text":"<p>The space whose page is being visited</p> <pre><code>public abstract ForumDto Space { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#property-value_3","title":"Property Value","text":"<p>ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#posts","title":"Posts","text":"<p>The posts that are currently being rendered</p> <pre><code>public abstract IPage&lt;PostDto&gt; Posts { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#property-value_4","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#initializeguid","title":"Initialize(Guid)","text":"<p>Initialized the page's state. This fetches all space-related information and loads  the first posts for the visited space. Also initializes the ISpaceVm.AuthPrincipalId  if one is present.</p> <pre><code>Task Initialize(Guid forumId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#parameters","title":"Parameters","text":"<p><code>forumId</code> Guid The ID of the space whose page should be visited</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#loadpostsint32","title":"LoadPosts(Int32)","text":"<p>Loads more ISpaceVm.Posts for the visited space by changing the current  page (as in pagination).</p> <pre><code>Task LoadPosts(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32 The page number</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.ispacevm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/","title":"IUserVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>Interface for user view model implementation.</p> <pre><code>public interface IUserVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#getuserbyidguid","title":"GetUserById(Guid)","text":"<p>Asynchronously retrieves a user by their unique identifier.</p> <pre><code>Task&lt;UserDto&gt; GetUserById(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#returns","title":"Returns","text":"<p>Task&lt;UserDto&gt; A task that represents the asynchronous operation. The task result contains the user data transfer object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#updateuseruserdto","title":"UpdateUser(UserDto)","text":"<p>Updates the given UserDto object in the database and returns the updated object.</p> <pre><code>Task UpdateUser(UserDto user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#parameters_1","title":"Parameters","text":"<p><code>user</code> UserDto The UserDto object to be updated.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#returns_1","title":"Returns","text":"<p>Task A task that represents the asynchronous operation. The task result contains the updated UserDto object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#getuserinformationguid","title":"GetUserInformation(Guid)","text":"<p>Asynchronously retrieves user information by their unique identifier.</p> <pre><code>Task&lt;UserInformationDto&gt; GetUserInformation(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservm/#returns_2","title":"Returns","text":"<p>Task&lt;UserInformationDto&gt; A task that represents the asynchronous operation. The task result contains the user information data transfer  object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservmimpl/","title":"IUserVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Interfaces</p> <p>Interface for user view model implementation.</p> <pre><code>public interface IUserVmImpl\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservmimpl/#getuserbyidguid","title":"GetUserById(Guid)","text":"<p>Asynchronously retrieves a user by their unique identifier.</p> <pre><code>Task&lt;UserDto&gt; GetUserById(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservmimpl/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservmimpl/#returns","title":"Returns","text":"<p>Task&lt;UserDto&gt; A task that represents the asynchronous operation. The task result contains the user data transfer object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservmimpl/#updateuseruserdto","title":"UpdateUser(UserDto)","text":"<p>Updates the given UserDto object in the database and returns the updated object.</p> <pre><code>Task UpdateUser(UserDto user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservmimpl/#parameters_1","title":"Parameters","text":"<p><code>user</code> UserDto The UserDto object to be updated.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.interfaces.iuservmimpl/#returns_1","title":"Returns","text":"<p>Task A task that represents the asynchronous operation. The task result contains the updated UserDto object.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/","title":"MainLayoutVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>ViewModel of the MainLayout which is essentially the root view of SlottyMedia</p> <pre><code>public class MainLayoutVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IMainLayoutVm\n</code></pre> <p>Inheritance Object \u2192 MainLayoutVmImpl Implements IMainLayoutVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#userinformation","title":"UserInformation","text":"<p>The user information to be displayed</p> <pre><code>public UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#property-value","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#mainlayoutvmimpliauthservice-iuserservice","title":"MainLayoutVmImpl(IAuthService, IUserService)","text":"<p>Ctor used for dep inject</p> <pre><code>public MainLayoutVmImpl(IAuthService authService, IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#parameters","title":"Parameters","text":"<p><code>authService</code> IAuthService</p> <p><code>userService</code> IUserService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#restoresessiononinit","title":"RestoreSessionOnInit()","text":"<p>This sets the session on initialization of the page.</p> <pre><code>public Task&lt;Session&gt; RestoreSessionOnInit()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#returns","title":"Returns","text":"<p>Task&lt;Session&gt; Returns the restored session, or null if nothing was restored.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#setuserinfo","title":"SetUserInfo()","text":"<p>This sets a dto holding information about the current user in order to show the current users infos in the profile  card</p> <pre><code>public Task SetUserInfo()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#returns_1","title":"Returns","text":"<p>Task Returns a task of type UserInformationDto. The dto is used to update the state in the view.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#persistuseravatarindbstring","title":"PersistUserAvatarInDb(String)","text":"<p>This function persists a new avatar of the currently authenticated user</p> <pre><code>public Task&lt;string&gt; PersistUserAvatarInDb(string base64Encoding)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#parameters_1","title":"Parameters","text":"<p><code>base64Encoding</code> String The base64Encoding to persist to db</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.mainlayoutvmimpl/#returns_2","title":"Returns","text":"<p>Task&lt;String&gt; Returns a task of type string. The string represents the base64 encoding persisted in db.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/","title":"HomePageVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Home</p> <pre><code>public class HomePageVmImpl : IHomePageVm\n</code></pre> <p>Inheritance Object \u2192 HomePageVmImpl Implements IHomePageVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#isloadingpage","title":"IsLoadingPage","text":"<pre><code>public bool IsLoadingPage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#page","title":"Page","text":"<pre><code>public IPage&lt;PostDto&gt; Page { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#property-value_2","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#homepagevmimplipostservice-iauthservice","title":"HomePageVmImpl(IPostService, IAuthService)","text":"<p>Instantiates this class</p> <pre><code>public HomePageVmImpl(IPostService postService, IAuthService authService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#parameters","title":"Parameters","text":"<p><code>postService</code> IPostService</p> <p><code>authService</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#initialize","title":"Initialize()","text":"<pre><code>public Task Initialize()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#loadpageint32","title":"LoadPage(Int32)","text":"<pre><code>public Task LoadPage(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.homepagevmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/","title":"IHomePageVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Home</p> <p>This ViewModel represents the state of the  page.</p> <pre><code>public interface IHomePageVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The ID of the currently logged in user.</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#isloadingpage","title":"IsLoadingPage","text":"<p>Indicates whether the page is loading (for the first time)</p> <pre><code>public abstract bool IsLoadingPage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#page","title":"Page","text":"<p>The posts that will be showcased</p> <pre><code>public abstract IPage&lt;PostDto&gt; Page { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#property-value_2","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#initialize","title":"Initialize()","text":"<p>Initializes this ViewModel, which counts the total number of existing posts and loads the first few  posts into the view.</p> <pre><code>Task Initialize()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#loadpageint32","title":"LoadPage(Int32)","text":"<p>Loads more posts to the view. Does nothing if all posts have already been fetched.</p> <pre><code>Task LoadPage(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#parameters","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.home.ihomepagevm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/","title":"IPostPageVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Post</p> <p>This ViewModel represents the state of the PostPage.</p> <pre><code>public interface IPostPageVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#isloadingpage","title":"IsLoadingPage","text":"<p>Indicates whether the post is being fetched (i.e. the whole page is loading)</p> <pre><code>public abstract bool IsLoadingPage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#isloadingcomments","title":"IsLoadingComments","text":"<p>Indicates whether additional comments are being fetched</p> <pre><code>public abstract bool IsLoadingComments { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#post","title":"Post","text":"<p>The post that will be showcased. If <code>null</code>, then the post is either being fetched or it does not exist.</p> <pre><code>public abstract PostDto Post { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#property-value_2","title":"Property Value","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#comments","title":"Comments","text":"<p>The comments that belong to the post</p> <pre><code>public abstract IPage&lt;CommentDto&gt; Comments { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#property-value_3","title":"Property Value","text":"<p>IPage&lt;CommentDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The ID of the currently logged in user.</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#property-value_4","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#initializeguid","title":"Initialize(Guid)","text":"<p>Attempts to load the given post. If no such post exists, then IPostPageVm.Post will be <code>null</code>.  Otherwise, it will be a PostDto that corresponds to the requested post.</p> <pre><code>Task Initialize(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#parameters","title":"Parameters","text":"<p><code>postId</code> Guid The ID of the post to showcase</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#loadcommentspageint32","title":"LoadCommentsPage(Int32)","text":"<p>Attempts to load more comments than were already showcased. Does nothing if no further comments exist.</p> <pre><code>Task LoadCommentsPage(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.ipostpagevm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/","title":"PostPageVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Post</p> <pre><code>public class PostPageVmImpl : IPostPageVm\n</code></pre> <p>Inheritance Object \u2192 PostPageVmImpl Implements IPostPageVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#isloadingpage","title":"IsLoadingPage","text":"<pre><code>public bool IsLoadingPage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#isloadingcomments","title":"IsLoadingComments","text":"<pre><code>public bool IsLoadingComments { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#post","title":"Post","text":"<pre><code>public PostDto Post { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#property-value_2","title":"Property Value","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#comments","title":"Comments","text":"<pre><code>public IPage&lt;CommentDto&gt; Comments { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#property-value_3","title":"Property Value","text":"<p>IPage&lt;CommentDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#property-value_4","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#postpagevmimplipostservice-icommentservice-iauthservice","title":"PostPageVmImpl(IPostService, ICommentService, IAuthService)","text":"<p>Instantiates this VM</p> <pre><code>public PostPageVmImpl(IPostService postService, ICommentService commentService, IAuthService authService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#parameters","title":"Parameters","text":"<p><code>postService</code> IPostService</p> <p><code>commentService</code> ICommentService</p> <p><code>authService</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#initializeguid","title":"Initialize(Guid)","text":"<pre><code>public Task Initialize(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#loadcommentspageint32","title":"LoadCommentsPage(Int32)","text":"<pre><code>public Task LoadCommentsPage(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#parameters_2","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.post.postpagevmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/","title":"IProfilePageVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Profile</p> <p>This ViewModel represents the  page.</p> <pre><code>public interface IProfilePageVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#isloadingpage","title":"IsLoadingPage","text":"<p>Whether the whole page is being loaded</p> <pre><code>public abstract bool IsLoadingPage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#isloadingposts","title":"IsLoadingPosts","text":"<p>Whether the posts on the page are being loaded</p> <pre><code>public abstract bool IsLoadingPosts { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#isuserfollowed","title":"IsUserFollowed","text":"<p>Whether the authentication principal is following the user whose profile is being visited</p> <pre><code>public abstract bool IsUserFollowed { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#isownprofilepage","title":"IsOwnProfilePage","text":"<p>Whether the visited profile is actually the authentication principal's profile  (i.e. if this is your own profile page).</p> <pre><code>public abstract bool IsOwnProfilePage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#property-value_3","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The authentication principal's user ID (i.e. the user that's logged in)</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#property-value_4","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#userinfo","title":"UserInfo","text":"<p>Information about the user whose profile is being visited</p> <pre><code>public abstract UserInformationDto UserInfo { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#property-value_5","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#posts","title":"Posts","text":"<p>The posts that are currently being rendered</p> <pre><code>public abstract IPage&lt;PostDto&gt; Posts { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#property-value_6","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#initializeguid","title":"Initialize(Guid)","text":"<p>Initialized the page's state. This fetches all user-related information and loads  the first posts for the visited user. Also initializes the IProfilePageVm.AuthPrincipalId  if one is present.</p> <pre><code>Task Initialize(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The ID of the user whose profile should be visited</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#followthisuser","title":"FollowThisUser()","text":"<p>Has the authentication principal follow the visited profile. Does  nothing if no authentication principal is present.</p> <pre><code>Task FollowThisUser()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#unfollowthisuser","title":"UnfollowThisUser()","text":"<p>Has the authentication principal unfollow the visited profile. Does  nothing if no authentication principal is present.</p> <pre><code>Task UnfollowThisUser()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#loadpostsint32","title":"LoadPosts(Int32)","text":"<p>Loads more IProfilePageVm.Posts for the visited profile by changing the current  page (as in pagination).</p> <pre><code>Task LoadPosts(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32 The page number</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#onavatarclickstring","title":"OnAvatarClick(String)","text":"<p>An event that is triggered when the avatar is clicked.  It should update the profile picture if the user is on their own  profile page.</p> <pre><code>Task OnAvatarClick(string imgB64)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#parameters_2","title":"Parameters","text":"<p><code>imgB64</code> String The new profile page as a base 64 string</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#ondescriptionupdatestring","title":"OnDescriptionUpdate(String)","text":"<p>An event that is triggered when the user updates their own description.</p> <pre><code>Task OnDescriptionUpdate(string description)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#parameters_3","title":"Parameters","text":"<p><code>description</code> String The new description</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.iprofilepagevm/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/","title":"ProfilePageVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Profile</p> <p>Viewmodel used for the profile page /profile?id=..</p> <pre><code>public class ProfilePageVmImpl : IProfilePageVm\n</code></pre> <p>Inheritance Object \u2192 ProfilePageVmImpl Implements IProfilePageVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#isloadingpage","title":"IsLoadingPage","text":"<pre><code>public bool IsLoadingPage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#isloadingposts","title":"IsLoadingPosts","text":"<pre><code>public bool IsLoadingPosts { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#isuserfollowed","title":"IsUserFollowed","text":"<pre><code>public bool IsUserFollowed { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#isownprofilepage","title":"IsOwnProfilePage","text":"<pre><code>public bool IsOwnProfilePage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#property-value_3","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#property-value_4","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#userinfo","title":"UserInfo","text":"<pre><code>public UserInformationDto UserInfo { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#property-value_5","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#posts","title":"Posts","text":"<pre><code>public IPage&lt;PostDto&gt; Posts { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#property-value_6","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#profilepagevmimpliuserservice-ipostservice-iauthservice","title":"ProfilePageVmImpl(IUserService, IPostService, IAuthService)","text":"<p>Ctor for dep inject</p> <pre><code>public ProfilePageVmImpl(IUserService userService, IPostService postService, IAuthService authService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#parameters","title":"Parameters","text":"<p><code>userService</code> IUserService</p> <p><code>postService</code> IPostService</p> <p><code>authService</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#initializeguid","title":"Initialize(Guid)","text":"<pre><code>public Task Initialize(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#loadpostsint32","title":"LoadPosts(Int32)","text":"<pre><code>public Task LoadPosts(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#parameters_2","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#followthisuser","title":"FollowThisUser()","text":"<pre><code>public Task FollowThisUser()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#unfollowthisuser","title":"UnfollowThisUser()","text":"<pre><code>public Task UnfollowThisUser()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#onavatarclickstring","title":"OnAvatarClick(String)","text":"<pre><code>public Task OnAvatarClick(string imgB64)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#parameters_3","title":"Parameters","text":"<p><code>imgB64</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#ondescriptionupdatestring","title":"OnDescriptionUpdate(String)","text":"<pre><code>public Task OnDescriptionUpdate(string description)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#parameters_4","title":"Parameters","text":"<p><code>description</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.profile.profilepagevmimpl/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/","title":"ISpacesVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Space</p> <p>This ViewModel represents the state of the Spaces Page.</p> <pre><code>public interface ISpacesVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/#forums","title":"Forums","text":"<p>A list containing all spaces that should be rendered</p> <pre><code>public abstract List&lt;ForumDto&gt; Forums { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/#property-value","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/#isloading","title":"IsLoading","text":"<p>Indicates whether the ViewModel is currently loading data.</p> <pre><code>public abstract bool IsLoading { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/#loadforums","title":"LoadForums()","text":"<p>Fetches all forums and populates the ISpacesVm.Forums property.</p> <pre><code>Task LoadForums()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacesvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/","title":"ISpaceVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Space</p> <p>This ViewModel represents the state of the Space Page.</p> <pre><code>public interface ISpaceVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#isloadingpage","title":"IsLoadingPage","text":"<p>Whether the whole page is being loaded</p> <pre><code>public abstract bool IsLoadingPage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#isloadingposts","title":"IsLoadingPosts","text":"<p>Whether the posts on the page are being loaded</p> <pre><code>public abstract bool IsLoadingPosts { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The authentication principal's user ID (i.e. the user that's logged in)</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#space","title":"Space","text":"<p>The space whose page is being visited</p> <pre><code>public abstract ForumDto Space { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#property-value_3","title":"Property Value","text":"<p>ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#posts","title":"Posts","text":"<p>The posts that are currently being rendered</p> <pre><code>public abstract IPage&lt;PostDto&gt; Posts { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#property-value_4","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#initializeguid","title":"Initialize(Guid)","text":"<p>Initialized the page's state. This fetches all space-related information and loads  the first posts for the visited space. Also initializes the ISpaceVm.AuthPrincipalId  if one is present.</p> <pre><code>Task Initialize(Guid forumId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#parameters","title":"Parameters","text":"<p><code>forumId</code> Guid The ID of the space whose page should be visited</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#loadpostsint32","title":"LoadPosts(Int32)","text":"<p>Loads more ISpaceVm.Posts for the visited space by changing the current  page (as in pagination).</p> <pre><code>Task LoadPosts(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32 The page number</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.ispacevm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/","title":"SpacesVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Space</p> <pre><code>public class SpacesVmImpl : ISpacesVm\n</code></pre> <p>Inheritance Object \u2192 SpacesVmImpl Implements ISpacesVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#forums","title":"Forums","text":"<pre><code>public List&lt;ForumDto&gt; Forums { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#property-value","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#spacesvmimpliforumservice","title":"SpacesVmImpl(IForumService)","text":"<p>Initializes this ViewModel</p> <pre><code>public SpacesVmImpl(IForumService forumService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#parameters","title":"Parameters","text":"<p><code>forumService</code> IForumService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#loadforums","title":"LoadForums()","text":"<pre><code>public Task LoadForums()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacesvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/","title":"SpaceVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Pages.Space</p> <p>Implements ISpaceVm to manage the state of the Space Page.</p> <pre><code>public class SpaceVmImpl : ISpaceVm\n</code></pre> <p>Inheritance Object \u2192 SpaceVmImpl Implements ISpaceVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#isloadingposts","title":"IsLoadingPosts","text":"<p>A boolean flag indicating whether the posts on the page are being loaded.</p> <pre><code>public bool IsLoadingPosts { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#isloadingpage","title":"IsLoadingPage","text":"<p>A boolean flag indicating whether the entire page is being loaded.</p> <pre><code>public bool IsLoadingPage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<p>The ID of the authenticated user (the currently logged-in user).</p> <pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#space","title":"Space","text":"<p>Holds the details of the current space (ForumDto).</p> <pre><code>public ForumDto Space { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#property-value_3","title":"Property Value","text":"<p>ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#posts","title":"Posts","text":"<p>Contains the paginated posts belonging to the space.</p> <pre><code>public IPage&lt;PostDto&gt; Posts { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#property-value_4","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#spacevmimpliforumservice-ipostservice-iauthservice","title":"SpaceVmImpl(IForumService, IPostService, IAuthService)","text":"<p>Initializes the ViewModel with the necessary services.</p> <pre><code>public SpaceVmImpl(IForumService forumService, IPostService postService, IAuthService authService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#parameters","title":"Parameters","text":"<p><code>forumService</code> IForumService</p> <p><code>postService</code> IPostService</p> <p><code>authService</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#initializeguid","title":"Initialize(Guid)","text":"<p>Loads the details of a specific space based on the provided forum ID.  This method also loads the posts for the space and sets the loading states accordingly.  The space to load information from.</p> <pre><code>public Task Initialize(Guid forumId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#parameters_1","title":"Parameters","text":"<p><code>forumId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#loadpostsint32","title":"LoadPosts(Int32)","text":"<p>Loads the posts for the space. This method is called when loading a specific page of posts.</p> <pre><code>public Task LoadPosts(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#parameters_2","title":"Parameters","text":"<p><code>pageNumber</code> Int32 The page number to load posts from.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.pages.space.spacevmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/","title":"DescriptionContainerVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.DescriptionContainer</p> <p>The DescriptionContainerVmImpl class is responsible for handling the logic for the DescriptionContainerVm.</p> <pre><code>public class DescriptionContainerVmImpl : IDescriptionContainerVm\n</code></pre> <p>Inheritance Object \u2192 DescriptionContainerVmImpl Implements IDescriptionContainerVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#showdescriptiontext","title":"ShowDescriptionText","text":"<p>Flag to determine whether to show the description text or the input field.</p> <pre><code>public bool ShowDescriptionText { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#descriptioncontainervmimpliuserservice","title":"DescriptionContainerVmImpl(IUserService)","text":"<p>The constructor for the DescriptionContainerVmImpl.</p> <pre><code>public DescriptionContainerVmImpl(IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#parameters","title":"Parameters","text":"<p><code>userService</code> IUserService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#submitdescriptionasyncstring-nullableguid","title":"SubmitDescriptionAsync(String, Nullable&lt;Guid&gt;)","text":"<pre><code>public Task SubmitDescriptionAsync(string description, Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#parameters_1","title":"Parameters","text":"<p><code>description</code> String</p> <p><code>userId</code> Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.descriptioncontainervmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.idescriptioncontainervm/","title":"IDescriptionContainerVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.DescriptionContainer</p> <p>Interface for the DescriptionContainer ViewModel.</p> <pre><code>public interface IDescriptionContainerVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.idescriptioncontainervm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.idescriptioncontainervm/#showdescriptiontext","title":"ShowDescriptionText","text":"<p>Flag to determine whether to show the description text or the input field.</p> <pre><code>public abstract bool ShowDescriptionText { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.idescriptioncontainervm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.idescriptioncontainervm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.idescriptioncontainervm/#submitdescriptionasyncstring-nullableguid","title":"SubmitDescriptionAsync(String, Nullable&lt;Guid&gt;)","text":"<p>Submits the description asynchronously.</p> <pre><code>Task SubmitDescriptionAsync(string description, Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.idescriptioncontainervm/#parameters","title":"Parameters","text":"<p><code>description</code> String The description text to submit.</p> <p><code>userId</code> Nullable&lt;Guid&gt; The ID of the user to update the description for.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.descriptioncontainer.idescriptioncontainervm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/","title":"IPostSubmissionFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.MainLayout</p> <p>This ViewModel represents a form that is used to create a post.  It contains fields for the post's textual data and fields that  represent corresponding errors.</p> <pre><code>public interface IPostSubmissionFormVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#text","title":"Text","text":"<p>The post's textual content</p> <pre><code>public abstract string Text { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#spaceprompt","title":"SpacePrompt","text":"<p>The prompt the user should input in order to select the space. This field is null if a space was selected.</p> <pre><code>public abstract string SpacePrompt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#spacename","title":"SpaceName","text":"<p>The name of the space the user has selected. Null corresponds to no selection.</p> <pre><code>public abstract string SpaceName { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#searchedspaces","title":"SearchedSpaces","text":"<p>A list containing all space names that contain the searched prompt</p> <pre><code>public abstract List&lt;string&gt; SearchedSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value_3","title":"Property Value","text":"<p>List&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#spaceerrormessage","title":"SpaceErrorMessage","text":"<p>An optional error message related to the post's space</p> <pre><code>public abstract string SpaceErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#texterrormessage","title":"TextErrorMessage","text":"<p>An optional error message related to the post's textual content</p> <pre><code>public abstract string TextErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#userinformation","title":"UserInformation","text":"<p>The user information data transfer object to be rendered.</p> <pre><code>public abstract UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value_7","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#isloading","title":"IsLoading","text":"<p>Gets a value indicating whether the data is still loading.</p> <pre><code>public abstract bool IsLoading { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#property-value_8","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#handlespacepromptchangechangeeventargs-eventcallbackstring","title":"HandleSpacePromptChange(ChangeEventArgs, EventCallback&lt;String&gt;)","text":"<p>Handles an event that is triggered whenever the user changes the prompt to select a space.  This updates the list of matching spaces in the tooltip above the prompt's input field.</p> <pre><code>Task HandleSpacePromptChange(ChangeEventArgs e, EventCallback&lt;string&gt; promptValueChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#parameters","title":"Parameters","text":"<p><code>e</code> ChangeEventArgs The input field's change event</p> <p><code>promptValueChanged</code> EventCallback&lt;String&gt; A callback that is invoked asynchronously</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#handlespaceselectionstring","title":"HandleSpaceSelection(String)","text":"<p>Handles an event that is triggered when the user selects a space from the list of available spaces  based on the entered prompt. This sets \"SpacePrompt\" to null and \"SpaceName\" to the selected space name.  This method assumes that the provided space name is valid and does not check whether the provided space  actually exists!</p> <pre><code>void HandleSpaceSelection(string spaceName)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#parameters_1","title":"Parameters","text":"<p><code>spaceName</code> String The name of the selected space (without hashtag!)</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#handlespacedeselection","title":"HandleSpaceDeselection()","text":"<p>Handles an event that is triggered when the currently selected space is deselected.  This sets \"SpaceName\" to null.</p> <pre><code>void HandleSpaceDeselection()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#submitform","title":"SubmitForm()","text":"<p>Attempts to submit the form. If successful, the post was created.  Otherwise, displays an appropriate error message regarding the submission's  failure.</p> <pre><code>Task SubmitForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#initializenullableguid","title":"Initialize(Nullable&lt;Guid&gt;)","text":"<p>Initializes the ViewModel with the specified user ID.</p> <pre><code>Task Initialize(Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Nullable&lt;Guid&gt; The ID of the user to load information for.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ipostsubmissionformvm/#returns_2","title":"Returns","text":"<p>Task A task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/","title":"ISpacesCardVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.MainLayout</p> <p>This ViewModel represents the state of the SpacesCard component.</p> <pre><code>public interface ISpacesCardVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#trendingspaces","title":"TrendingSpaces","text":"<p>A list containing all trending spaces</p> <pre><code>public abstract List&lt;ForumDto&gt; TrendingSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#property-value","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#recentspaces","title":"RecentSpaces","text":"<p>A list containing all recent spaces</p> <pre><code>public abstract List&lt;ForumDto&gt; RecentSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#property-value_1","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#numofpostsinspace","title":"NumOfPostsInSpace","text":"<p>A dictionary that maps a space ID to the toal number of posts in that  space. Only spaces listed in ISpacesCardVm.TrendingSpaces and ISpacesCardVm.RecentSpaces  will be considered.</p> <pre><code>public abstract Dictionary&lt;Guid, int&gt; NumOfPostsInSpace { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#property-value_2","title":"Property Value","text":"<p>Dictionary&lt;Guid, Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#fetch","title":"Fetch()","text":"<p>Fetches all trending spaces, recent spaces and evaluates how many posts exist per space.</p> <pre><code>Task Fetch()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.ispacescardvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/","title":"PostSubmissionFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.MainLayout</p> <pre><code>public class PostSubmissionFormVmImpl : IPostSubmissionFormVm\n</code></pre> <p>Inheritance Object \u2192 PostSubmissionFormVmImpl Implements IPostSubmissionFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#text","title":"Text","text":"<pre><code>public string Text { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#texterrormessage","title":"TextErrorMessage","text":"<pre><code>public string TextErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#spaceprompt","title":"SpacePrompt","text":"<pre><code>public string SpacePrompt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#spacename","title":"SpaceName","text":"<pre><code>public string SpaceName { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#searchedspaces","title":"SearchedSpaces","text":"<pre><code>public List&lt;string&gt; SearchedSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value_4","title":"Property Value","text":"<p>List&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#spaceerrormessage","title":"SpaceErrorMessage","text":"<pre><code>public string SpaceErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<pre><code>public string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#userinformation","title":"UserInformation","text":"<pre><code>public UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value_7","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#property-value_8","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#postsubmissionformvmimpliauthservice-ipostservice-iforumservice-isearchservice-navigationmanager-iuserservice","title":"PostSubmissionFormVmImpl(IAuthService, IPostService, IForumService, ISearchService, NavigationManager, IUserService)","text":"<p>Ctor used for dep inject</p> <pre><code>public PostSubmissionFormVmImpl(IAuthService authService, IPostService postService, IForumService forumService, ISearchService searchService, NavigationManager navigationManager, IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#parameters","title":"Parameters","text":"<p><code>authService</code> IAuthService</p> <p><code>postService</code> IPostService</p> <p><code>forumService</code> IForumService</p> <p><code>searchService</code> ISearchService</p> <p><code>navigationManager</code> NavigationManager</p> <p><code>userService</code> IUserService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#handlespacepromptchangechangeeventargs-eventcallbackstring","title":"HandleSpacePromptChange(ChangeEventArgs, EventCallback&lt;String&gt;)","text":"<pre><code>public Task HandleSpacePromptChange(ChangeEventArgs e, EventCallback&lt;string&gt; promptValueChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#parameters_1","title":"Parameters","text":"<p><code>e</code> ChangeEventArgs</p> <p><code>promptValueChanged</code> EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#handlespaceselectionstring","title":"HandleSpaceSelection(String)","text":"<pre><code>public void HandleSpaceSelection(string spaceName)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#parameters_2","title":"Parameters","text":"<p><code>spaceName</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#handlespacedeselection","title":"HandleSpaceDeselection()","text":"<pre><code>public void HandleSpaceDeselection()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#submitform","title":"SubmitForm()","text":"<pre><code>public Task SubmitForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#initializenullableguid","title":"Initialize(Nullable&lt;Guid&gt;)","text":"<pre><code>public Task Initialize(Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.postsubmissionformvmimpl/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/","title":"SpacesCardVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.MainLayout</p> <pre><code>public class SpacesCardVmImpl : ISpacesCardVm\n</code></pre> <p>Inheritance Object \u2192 SpacesCardVmImpl Implements ISpacesCardVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#trendingspaces","title":"TrendingSpaces","text":"<pre><code>public List&lt;ForumDto&gt; TrendingSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#property-value","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#recentspaces","title":"RecentSpaces","text":"<pre><code>public List&lt;ForumDto&gt; RecentSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#property-value_1","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#numofpostsinspace","title":"NumOfPostsInSpace","text":"<pre><code>public Dictionary&lt;Guid, int&gt; NumOfPostsInSpace { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#property-value_2","title":"Property Value","text":"<p>Dictionary&lt;Guid, Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#spacescardvmimpliforumservice","title":"SpacesCardVmImpl(IForumService)","text":"<p>Initializes this ViewModel</p> <pre><code>public SpacesCardVmImpl(IForumService forumService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#parameters","title":"Parameters","text":"<p><code>forumService</code> IForumService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#fetch","title":"Fetch()","text":"<pre><code>public Task Fetch()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.mainlayout.spacescardvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/","title":"IPostVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.Post</p> <p>The interface for post view model implementation.</p> <pre><code>public interface IPostVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#authprincipalid","title":"AuthPrincipalId","text":"<p>The user ID of the authentication principal</p> <pre><code>public abstract Nullable&lt;Guid&gt; AuthPrincipalId { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#ispostliked","title":"IsPostLiked","text":"<p>Gets a value indicating whether the post was liked by the user.</p> <pre><code>public abstract bool IsPostLiked { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#isloading","title":"IsLoading","text":"<p>Gets a value indicating whether the post view model is currently loading.</p> <pre><code>public abstract bool IsLoading { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#postdto","title":"PostDto","text":"<p>The post's corresponding DTO</p> <pre><code>public abstract PostDto PostDto { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#property-value_3","title":"Property Value","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#commentcount","title":"CommentCount","text":"<p>Gets the count of comments on the post.</p> <pre><code>public abstract int CommentCount { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#property-value_4","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#likecount","title":"LikeCount","text":"<p>Gets the count of likes on the post.</p> <pre><code>public abstract int LikeCount { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#property-value_5","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#userinformation","title":"UserInformation","text":"<p>Gets the user information associated with the post.</p> <pre><code>public abstract UserInformationDto UserInformation { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#property-value_6","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#initializeguid-action","title":"Initialize(Guid, Action)","text":"<p>Initializes the post view model.</p> <pre><code>Task Initialize(Guid postId, Action onStateChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#parameters","title":"Parameters","text":"<p><code>postId</code> Guid The ID of the post.</p> <p><code>onStateChanged</code> Action An event that is triggered whenever the internal state changes.  This is intended to re-render the component!</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#returns","title":"Returns","text":"<p>Task A task that represents the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#likethispost","title":"LikeThisPost()","text":"<p>Likes a post by a user.</p> <pre><code>Task LikeThisPost()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#returns_1","title":"Returns","text":"<p>Task A task that represents the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#gotopostpage","title":"GoToPostPage()","text":"<p>Navigates to the post's dedicated page (<code>/post/POST-ID</code>)</p> <pre><code>void GoToPostPage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.ipostvm/#gotoprofilepage","title":"GoToProfilePage()","text":"<p>Navigates to the post's owner's profile page (<code>/profile/USER-ID</code>)</p> <pre><code>void GoToProfilePage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/","title":"PostVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.Post</p> <p>ViewModel for Post</p> <pre><code>public class PostVmImpl : IPostVm\n</code></pre> <p>Inheritance Object \u2192 PostVmImpl Implements IPostVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#ispostliked","title":"IsPostLiked","text":"<pre><code>public bool IsPostLiked { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#postdto","title":"PostDto","text":"<pre><code>public PostDto PostDto { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#property-value_3","title":"Property Value","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#commentcount","title":"CommentCount","text":"<pre><code>public int CommentCount { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#property-value_4","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#likecount","title":"LikeCount","text":"<pre><code>public int LikeCount { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#property-value_5","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#userinformation","title":"UserInformation","text":"<pre><code>public UserInformationDto UserInformation { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#property-value_6","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#postvmimplipostservice-iuserservice-ilikeservice-icommentservice-iauthservice-navigationmanager","title":"PostVmImpl(IPostService, IUserService, ILikeService, ICommentService, IAuthService, NavigationManager)","text":"<p>The constructor for PostVmImpl</p> <pre><code>public PostVmImpl(IPostService postService, IUserService userService, ILikeService likeService, ICommentService commentService, IAuthService authService, NavigationManager navigationManager)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#parameters","title":"Parameters","text":"<p><code>postService</code> IPostService</p> <p><code>userService</code> IUserService</p> <p><code>likeService</code> ILikeService</p> <p><code>commentService</code> ICommentService</p> <p><code>authService</code> IAuthService</p> <p><code>navigationManager</code> NavigationManager</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#initializeguid-action","title":"Initialize(Guid, Action)","text":"<pre><code>public Task Initialize(Guid postId, Action onStateChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p> <p><code>onStateChanged</code> Action</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#likethispost","title":"LikeThisPost()","text":"<pre><code>public Task LikeThisPost()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#gotopostpage","title":"GoToPostPage()","text":"<pre><code>public void GoToPostPage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.post.postvmimpl/#gotoprofilepage","title":"GoToProfilePage()","text":"<pre><code>public void GoToProfilePage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/","title":"CommentSubmissionFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.PostPage</p> <pre><code>public class CommentSubmissionFormVmImpl : ICommentSubmissionFormVm\n</code></pre> <p>Inheritance Object \u2192 CommentSubmissionFormVmImpl Implements ICommentSubmissionFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#text","title":"Text","text":"<pre><code>public string Text { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#texterrormessage","title":"TextErrorMessage","text":"<pre><code>public string TextErrorMessage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<pre><code>public string ServerErrorMessage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#userinformation","title":"UserInformation","text":"<pre><code>public UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#property-value_3","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#property-value_4","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#commentsubmissionformvmimpliauthservice-icommentservice-navigationmanager-iuserservice","title":"CommentSubmissionFormVmImpl(IAuthService, ICommentService, NavigationManager, IUserService)","text":"<p>Instantiates this class</p> <pre><code>public CommentSubmissionFormVmImpl(IAuthService authService, ICommentService commentService, NavigationManager navigationManager, IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#parameters","title":"Parameters","text":"<p><code>authService</code> IAuthService</p> <p><code>commentService</code> ICommentService</p> <p><code>navigationManager</code> NavigationManager</p> <p><code>userService</code> IUserService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#submitformguid","title":"SubmitForm(Guid)","text":"<pre><code>public Task SubmitForm(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#initializenullableguid","title":"Initialize(Nullable&lt;Guid&gt;)","text":"<pre><code>public Task Initialize(Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentsubmissionformvmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/","title":"CommentVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.PostPage</p> <pre><code>public class CommentVmImpl : ICommentVm\n</code></pre> <p>Inheritance Object \u2192 CommentVmImpl Implements ICommentVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#dto","title":"Dto","text":"<pre><code>public CommentDto Dto { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#property-value_1","title":"Property Value","text":"<p>CommentDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#userinfo","title":"UserInfo","text":"<pre><code>public UserInformationDto UserInfo { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#property-value_2","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#commentvmimplicommentservice-iuserservice-navigationmanager","title":"CommentVmImpl(ICommentService, IUserService, NavigationManager)","text":"<p>The constructor for the CommentVmImpl.</p> <pre><code>public CommentVmImpl(ICommentService commentService, IUserService userService, NavigationManager navigationManager)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#parameters","title":"Parameters","text":"<p><code>commentService</code> ICommentService</p> <p><code>userService</code> IUserService</p> <p><code>navigationManager</code> NavigationManager</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#initializeguid","title":"Initialize(Guid)","text":"<pre><code>public Task Initialize(Guid commentId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#parameters_1","title":"Parameters","text":"<p><code>commentId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.commentvmimpl/#gotocreatorprofile","title":"GoToCreatorProfile()","text":"<pre><code>public void GoToCreatorProfile()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/","title":"ICommentSubmissionFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.PostPage</p> <p>This ViewModel represents the state of the CommentSubmissionForm component.</p> <pre><code>public interface ICommentSubmissionFormVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#text","title":"Text","text":"<p>The post's textual content</p> <pre><code>public abstract string Text { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#texterrormessage","title":"TextErrorMessage","text":"<p>An optional error message related to the post's textual content</p> <pre><code>public abstract string TextErrorMessage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#userinformation","title":"UserInformation","text":"<p>The user information data transfer object to be rendered.</p> <pre><code>public abstract UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#property-value_3","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#isloading","title":"IsLoading","text":"<p>Gets a value indicating whether the data is still loading.</p> <pre><code>public abstract bool IsLoading { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#property-value_4","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#submitformguid","title":"SubmitForm(Guid)","text":"<p>Attempts to submit the form. If successful, the post was created.  Otherwise, displays an appropriate error message regarding the submission's  failure.</p> <pre><code>Task SubmitForm(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#parameters","title":"Parameters","text":"<p><code>postId</code> Guid The ID of the post to submit the comment for</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#initializenullableguid","title":"Initialize(Nullable&lt;Guid&gt;)","text":"<p>Initializes the ViewModel with the specified user ID.</p> <pre><code>Task Initialize(Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Nullable&lt;Guid&gt; The ID of the user to load information for.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentsubmissionformvm/#returns_1","title":"Returns","text":"<p>Task A task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/","title":"ICommentVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.PostPage</p> <p>Interface for the Comment ViewModel.</p> <pre><code>public interface ICommentVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#isloading","title":"IsLoading","text":"<p>Whether the necessary comment-related data is still being loaded.</p> <pre><code>public abstract bool IsLoading { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#dto","title":"Dto","text":"<p>The comment that should be rendered.</p> <pre><code>public abstract CommentDto Dto { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#property-value_1","title":"Property Value","text":"<p>CommentDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#userinfo","title":"UserInfo","text":"<p>User-related information about the comment's creator.</p> <pre><code>public abstract UserInformationDto UserInfo { get; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#property-value_2","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#initializeguid","title":"Initialize(Guid)","text":"<p>Initializes this view model with the provided comment ID.  This loads all comment-related information.</p> <pre><code>Task Initialize(Guid commentId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#parameters","title":"Parameters","text":"<p><code>commentId</code> Guid The ID of the comment that should be loaded</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.postpage.icommentvm/#gotocreatorprofile","title":"GoToCreatorProfile()","text":"<p>Navigates to the comment creator's profile page.</p> <pre><code>void GoToCreatorProfile()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/","title":"ISearchVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.Search</p> <p>This Interface represents the viewmodel of the Search</p> <pre><code>public interface ISearchVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#searchprompt","title":"SearchPrompt","text":"<p>The prompt the user should input in order to search for a space or user</p> <pre><code>public abstract string SearchPrompt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#searchresults","title":"SearchResults","text":"<p>The search results</p> <pre><code>public abstract SearchDto SearchResults { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#property-value_1","title":"Property Value","text":"<p>SearchDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#getsearchresultschangeeventargs-eventcallbackstring","title":"GetSearchResults(ChangeEventArgs, EventCallback&lt;String&gt;)","text":"<p>This function searches for spaces or users based on the input of the user</p> <pre><code>Task GetSearchResults(ChangeEventArgs e, EventCallback&lt;string&gt; promptValueChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#parameters","title":"Parameters","text":"<p><code>e</code> ChangeEventArgs</p> <p><code>promptValueChanged</code> EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.isearchvm/#clearsearchresults","title":"ClearSearchResults()","text":"<p>This function clears the search results</p> <pre><code>void ClearSearchResults()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/","title":"SearchImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.Search</p> <p>The implementation of the search view model.</p> <pre><code>public class SearchImpl : ISearchVm\n</code></pre> <p>Inheritance Object \u2192 SearchImpl Implements ISearchVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#searchprompt","title":"SearchPrompt","text":"<pre><code>public string SearchPrompt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#searchresults","title":"SearchResults","text":"<pre><code>public SearchDto SearchResults { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#property-value_1","title":"Property Value","text":"<p>SearchDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#searchimplisearchservice","title":"SearchImpl(ISearchService)","text":"<p>The constructor of the search view model.</p> <pre><code>public SearchImpl(ISearchService searchService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#parameters","title":"Parameters","text":"<p><code>searchService</code> ISearchService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#getsearchresultschangeeventargs-eventcallbackstring","title":"GetSearchResults(ChangeEventArgs, EventCallback&lt;String&gt;)","text":"<pre><code>public Task GetSearchResults(ChangeEventArgs e, EventCallback&lt;string&gt; promptValueChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#parameters_1","title":"Parameters","text":"<p><code>e</code> ChangeEventArgs</p> <p><code>promptValueChanged</code> EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.search.searchimpl/#clearsearchresults","title":"ClearSearchResults()","text":"<pre><code>public void ClearSearchResults()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/","title":"ISignInFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.SignIn</p> <p>Interface used for dependency injection on the SignInFormVm</p> <pre><code>public interface ISignInFormVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#email","title":"Email","text":"<p>The form's email address</p> <pre><code>public abstract string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#emailerrormessage","title":"EmailErrorMessage","text":"<p>An optional error message that is caused by the email address</p> <pre><code>public abstract string EmailErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#password","title":"Password","text":"<p>The form's password</p> <pre><code>public abstract string Password { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#passworderrormessage","title":"PasswordErrorMessage","text":"<p>An optional error message that is caused by the password</p> <pre><code>public abstract string PasswordErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#submitsigninform","title":"SubmitSignInForm()","text":"<p>Attempts to submit the form. If this is successful, then the user was signed in  successfully and cookies have been set. Otherwise, displays an appropriate error  message.</p> <pre><code>Task SubmitSignInForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.isigninformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/","title":"SignInFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.SignIn</p> <p>Viewmodel used for the SignInForm of the Mainlayout</p> <pre><code>public class SignInFormVmImpl : ISignInFormVm\n</code></pre> <p>Inheritance Object \u2192 SignInFormVmImpl Implements ISignInFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#email","title":"Email","text":"<p>Email a user used to sign in</p> <pre><code>public string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#emailerrormessage","title":"EmailErrorMessage","text":"<p>Error message shown when a error with the email occurs</p> <pre><code>public string EmailErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#password","title":"Password","text":"<p>Password used by a user</p> <pre><code>public string Password { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#passworderrormessage","title":"PasswordErrorMessage","text":"<p>Error message shown when a error with the password occurs</p> <pre><code>public string PasswordErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<p>Error message for internal server errors</p> <pre><code>public string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#signinformvmimpliauthservice-navigationmanager","title":"SignInFormVmImpl(IAuthService, NavigationManager)","text":"<p>Standard Constructor used for dependency injection</p> <pre><code>public SignInFormVmImpl(IAuthService authService, NavigationManager navigationManager)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#parameters","title":"Parameters","text":"<p><code>authService</code> IAuthService AuthService about to being injected</p> <p><code>navigationManager</code> NavigationManager NavigationManager used to reload the page.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#submitsigninform","title":"SubmitSignInForm()","text":"<p>Event setting the session for a user. This is triggered whenever the form is submitted</p> <pre><code>public Task SubmitSignInForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signin.signinformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/","title":"ISignupFormVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.SignUp</p> <p>This ViewModel is used for the app's signup page. It represents the  form's internal state and provides functionalities for submitting the  form as well.</p> <pre><code>public interface ISignupFormVm\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#username","title":"Username","text":"<p>The form's username</p> <pre><code>public abstract string Username { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#usernameerrormessage","title":"UsernameErrorMessage","text":"<p>An optional error message that is caused by the username</p> <pre><code>public abstract string UsernameErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#email","title":"Email","text":"<p>The form's email address</p> <pre><code>public abstract string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#emailerrormessage","title":"EmailErrorMessage","text":"<p>An optional error message that is caused by the email address</p> <pre><code>public abstract string EmailErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#password","title":"Password","text":"<p>The form's password</p> <pre><code>public abstract string Password { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#passworderrormessage","title":"PasswordErrorMessage","text":"<p>An optional error message that is caused by the password</p> <pre><code>public abstract string PasswordErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#servererrormessage","title":"ServerErrorMessage","text":"<p>An optional error message that is caused by some internal server error</p> <pre><code>public abstract string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#submitsignupform","title":"SubmitSignupForm()","text":"<p>Attempts to submit the form. If this is successful, then the user was signed up  successfully and cookies have been set. Otherwise, an exception is thrown.</p> <pre><code>Task SubmitSignupForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.isignupformvm/#exceptions","title":"Exceptions","text":"<p>ArgumentException If an input field was left empty but was required</p> <p>UsernameAlreadyExistsException If the username is already in use</p> <p>EmailAlreadyExistsException If the email address is already in use</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/","title":"SignupFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel.Partial.SignUp</p> <p>Viewmodel used to signing up a user.</p> <pre><code>public class SignupFormVmImpl : ISignupFormVm\n</code></pre> <p>Inheritance Object \u2192 SignupFormVmImpl Implements ISignupFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#username","title":"Username","text":"<p>UserName a user can set. This is achieved via data-binding.</p> <pre><code>public string Username { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#usernameerrormessage","title":"UsernameErrorMessage","text":"<p>Error message exposed when a user isn't providing a username</p> <pre><code>public string UsernameErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#email","title":"Email","text":"<p>Email a user can set. This is achieved via data-binding.</p> <pre><code>public string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#emailerrormessage","title":"EmailErrorMessage","text":"<p>Error message exposed when a user isn't providing a email</p> <pre><code>public string EmailErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#password","title":"Password","text":"<p>Password a user can set. This is achieved via data-binding.</p> <pre><code>public string Password { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#passworderrormessage","title":"PasswordErrorMessage","text":"<p>Error message exposed when a user isn't providing a password</p> <pre><code>public string PasswordErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<p>Generic error message shown when server throws an unknown exception</p> <pre><code>public string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#signupformvmimplisignupservice","title":"SignupFormVmImpl(ISignupService)","text":"<p>Standard Constructor used for dependency injection</p> <pre><code>public SignupFormVmImpl(ISignupService signupService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#parameters","title":"Parameters","text":"<p><code>signupService</code> ISignupService Sign Up service for dependency injection</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#submitsignupform","title":"SubmitSignupForm()","text":"<p>Function called when user submits a form</p> <pre><code>public Task SubmitSignupForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.partial.signup.signupformvmimpl/#exceptions","title":"Exceptions","text":"<p>ArgumentException Thrown when user isn't providing all information needed for a signup</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/","title":"PostPageVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <pre><code>public class PostPageVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IPostPageVm\n</code></pre> <p>Inheritance Object \u2192 PostPageVmImpl Implements IPostPageVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#isloadingpage","title":"IsLoadingPage","text":"<pre><code>public bool IsLoadingPage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#isloadingcomments","title":"IsLoadingComments","text":"<pre><code>public bool IsLoadingComments { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#post","title":"Post","text":"<pre><code>public PostDto Post { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#property-value_2","title":"Property Value","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#comments","title":"Comments","text":"<pre><code>public IPage&lt;CommentDto&gt; Comments { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#property-value_3","title":"Property Value","text":"<p>IPage&lt;CommentDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#property-value_4","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#postpagevmimplipostservice-icommentservice-iauthservice","title":"PostPageVmImpl(IPostService, ICommentService, IAuthService)","text":"<p>Instantiates this VM</p> <pre><code>public PostPageVmImpl(IPostService postService, ICommentService commentService, IAuthService authService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#parameters","title":"Parameters","text":"<p><code>postService</code> IPostService</p> <p><code>commentService</code> ICommentService</p> <p><code>authService</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#initializeguid","title":"Initialize(Guid)","text":"<pre><code>public Task Initialize(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#loadcommentspageint32","title":"LoadCommentsPage(Int32)","text":"<pre><code>public Task LoadCommentsPage(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#parameters_2","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postpagevmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/","title":"PostSubmissionFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <pre><code>public class PostSubmissionFormVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IPostSubmissionFormVm\n</code></pre> <p>Inheritance Object \u2192 PostSubmissionFormVmImpl Implements IPostSubmissionFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#text","title":"Text","text":"<pre><code>public string Text { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#texterrormessage","title":"TextErrorMessage","text":"<pre><code>public string TextErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#spaceprompt","title":"SpacePrompt","text":"<pre><code>public string SpacePrompt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#spacename","title":"SpaceName","text":"<pre><code>public string SpaceName { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#searchedspaces","title":"SearchedSpaces","text":"<pre><code>public List&lt;string&gt; SearchedSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_4","title":"Property Value","text":"<p>List&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#spaceerrormessage","title":"SpaceErrorMessage","text":"<pre><code>public string SpaceErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<pre><code>public string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#userinformation","title":"UserInformation","text":"<pre><code>public UserInformationDto UserInformation { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_7","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#property-value_8","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#postsubmissionformvmimpliauthservice-ipostservice-iforumservice-isearchservice-navigationmanager-iuserservice","title":"PostSubmissionFormVmImpl(IAuthService, IPostService, IForumService, ISearchService, NavigationManager, IUserService)","text":"<p>Ctor used for dep inject</p> <pre><code>public PostSubmissionFormVmImpl(IAuthService authService, IPostService postService, IForumService forumService, ISearchService searchService, NavigationManager navigationManager, IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#parameters","title":"Parameters","text":"<p><code>authService</code> IAuthService</p> <p><code>postService</code> IPostService</p> <p><code>forumService</code> IForumService</p> <p><code>searchService</code> ISearchService</p> <p><code>navigationManager</code> NavigationManager</p> <p><code>userService</code> IUserService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#handlespacepromptchangechangeeventargs-eventcallbackstring","title":"HandleSpacePromptChange(ChangeEventArgs, EventCallback&lt;String&gt;)","text":"<pre><code>public Task HandleSpacePromptChange(ChangeEventArgs e, EventCallback&lt;string&gt; promptValueChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#parameters_1","title":"Parameters","text":"<p><code>e</code> ChangeEventArgs</p> <p><code>promptValueChanged</code> EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#handlespaceselectionstring","title":"HandleSpaceSelection(String)","text":"<pre><code>public void HandleSpaceSelection(string spaceName)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#parameters_2","title":"Parameters","text":"<p><code>spaceName</code> String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#handlespacedeselection","title":"HandleSpaceDeselection()","text":"<pre><code>public void HandleSpaceDeselection()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#submitform","title":"SubmitForm()","text":"<pre><code>public Task SubmitForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#initializenullableguid","title":"Initialize(Nullable&lt;Guid&gt;)","text":"<pre><code>public Task Initialize(Nullable&lt;Guid&gt; userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postsubmissionformvmimpl/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/","title":"PostVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>ViewModel for Post</p> <pre><code>public class PostVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IPostVm\n</code></pre> <p>Inheritance Object \u2192 PostVmImpl Implements IPostVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#ispostliked","title":"IsPostLiked","text":"<pre><code>public bool IsPostLiked { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#postdto","title":"PostDto","text":"<pre><code>public PostDto PostDto { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#property-value_3","title":"Property Value","text":"<p>PostDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#commentcount","title":"CommentCount","text":"<pre><code>public int CommentCount { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#property-value_4","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#likecount","title":"LikeCount","text":"<pre><code>public int LikeCount { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#property-value_5","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#userinformation","title":"UserInformation","text":"<pre><code>public UserInformationDto UserInformation { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#property-value_6","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#postvmimplipostservice-iuserservice-ilikeservice-icommentservice-iauthservice-navigationmanager","title":"PostVmImpl(IPostService, IUserService, ILikeService, ICommentService, IAuthService, NavigationManager)","text":"<p>The constructor for PostVmImpl</p> <pre><code>public PostVmImpl(IPostService postService, IUserService userService, ILikeService likeService, ICommentService commentService, IAuthService authService, NavigationManager navigationManager)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#parameters","title":"Parameters","text":"<p><code>postService</code> IPostService</p> <p><code>userService</code> IUserService</p> <p><code>likeService</code> ILikeService</p> <p><code>commentService</code> ICommentService</p> <p><code>authService</code> IAuthService</p> <p><code>navigationManager</code> NavigationManager</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#initializeguid-action","title":"Initialize(Guid, Action)","text":"<pre><code>public Task Initialize(Guid postId, Action onStateChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p> <p><code>onStateChanged</code> Action</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#likethispost","title":"LikeThisPost()","text":"<pre><code>public Task LikeThisPost()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#gotopostpage","title":"GoToPostPage()","text":"<pre><code>public void GoToPostPage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.postvmimpl/#gotoprofilepage","title":"GoToProfilePage()","text":"<pre><code>public void GoToProfilePage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/","title":"ProfilePageVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>Viewmodel used for the profile page /profile?id=..</p> <pre><code>public class ProfilePageVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IProfilePageVm\n</code></pre> <p>Inheritance Object \u2192 ProfilePageVmImpl Implements IProfilePageVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#isloadingpage","title":"IsLoadingPage","text":"<pre><code>public bool IsLoadingPage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#isloadingposts","title":"IsLoadingPosts","text":"<pre><code>public bool IsLoadingPosts { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#isuserfollowed","title":"IsUserFollowed","text":"<pre><code>public bool IsUserFollowed { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#property-value_3","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#userinfo","title":"UserInfo","text":"<pre><code>public UserInformationDto UserInfo { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#property-value_4","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#posts","title":"Posts","text":"<pre><code>public IPage&lt;PostDto&gt; Posts { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#property-value_5","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#profilepagevmimpliuserservice-ipostservice-iauthservice","title":"ProfilePageVmImpl(IUserService, IPostService, IAuthService)","text":"<p>Ctor for dep inject</p> <pre><code>public ProfilePageVmImpl(IUserService userService, IPostService postService, IAuthService authService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#parameters","title":"Parameters","text":"<p><code>userService</code> IUserService</p> <p><code>postService</code> IPostService</p> <p><code>authService</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#initializeguid","title":"Initialize(Guid)","text":"<pre><code>public Task Initialize(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#loadpostsint32","title":"LoadPosts(Int32)","text":"<pre><code>public Task LoadPosts(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#parameters_2","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#followthisuser","title":"FollowThisUser()","text":"<pre><code>public Task FollowThisUser()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#unfollowthisuser","title":"UnfollowThisUser()","text":"<pre><code>public Task UnfollowThisUser()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.profilepagevmimpl/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/","title":"SearchImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>The implementation of the search view model.</p> <pre><code>public class SearchImpl : SlottyMedia.Backend.ViewModel.Interfaces.ISearchVm\n</code></pre> <p>Inheritance Object \u2192 SearchImpl Implements ISearchVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#searchprompt","title":"SearchPrompt","text":"<pre><code>public string SearchPrompt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#searchresults","title":"SearchResults","text":"<pre><code>public SearchDto SearchResults { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#property-value_1","title":"Property Value","text":"<p>SearchDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#searchimplisearchservice","title":"SearchImpl(ISearchService)","text":"<p>The constructor of the search view model.</p> <pre><code>public SearchImpl(ISearchService searchService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#parameters","title":"Parameters","text":"<p><code>searchService</code> ISearchService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#getsearchresultschangeeventargs-eventcallbackstring","title":"GetSearchResults(ChangeEventArgs, EventCallback&lt;String&gt;)","text":"<pre><code>public Task GetSearchResults(ChangeEventArgs e, EventCallback&lt;string&gt; promptValueChanged)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#parameters_1","title":"Parameters","text":"<p><code>e</code> ChangeEventArgs</p> <p><code>promptValueChanged</code> EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.searchimpl/#clearsearchresults","title":"ClearSearchResults()","text":"<pre><code>public void ClearSearchResults()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/","title":"SignInFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>Viewmodel used for the SignInForm of the Mainlayout</p> <pre><code>public class SignInFormVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.ISignInFormVm\n</code></pre> <p>Inheritance Object \u2192 SignInFormVmImpl Implements ISignInFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#email","title":"Email","text":"<p>Email a user used to sign in</p> <pre><code>public string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#emailerrormessage","title":"EmailErrorMessage","text":"<p>Error message shown when a error with the email occurs</p> <pre><code>public string EmailErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#password","title":"Password","text":"<p>Password used by a user</p> <pre><code>public string Password { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#passworderrormessage","title":"PasswordErrorMessage","text":"<p>Error message shown when a error with the password occurs</p> <pre><code>public string PasswordErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<p>Error message for internal server errors</p> <pre><code>public string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#signinformvmimpliauthservice-navigationmanager","title":"SignInFormVmImpl(IAuthService, NavigationManager)","text":"<p>Standard Constructor used for dependency injection</p> <pre><code>public SignInFormVmImpl(IAuthService authService, NavigationManager navigationManager)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#parameters","title":"Parameters","text":"<p><code>authService</code> IAuthService AuthService about to being injected</p> <p><code>navigationManager</code> NavigationManager NavigationManager used to reload the page.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#submitsigninform","title":"SubmitSignInForm()","text":"<p>Event setting the session for a user. This is triggered whenever the form is submitted</p> <pre><code>public Task SubmitSignInForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signinformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/","title":"SignupFormVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>Viewmodel used to signing up a user.</p> <pre><code>public class SignupFormVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.ISignupFormVm\n</code></pre> <p>Inheritance Object \u2192 SignupFormVmImpl Implements ISignupFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#username","title":"Username","text":"<p>UserName a user can set. This is achieved via data-binding.</p> <pre><code>public string Username { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#usernameerrormessage","title":"UsernameErrorMessage","text":"<p>Error message exposed when a user isn't providing a username</p> <pre><code>public string UsernameErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#email","title":"Email","text":"<p>Email a user can set. This is achieved via data-binding.</p> <pre><code>public string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#emailerrormessage","title":"EmailErrorMessage","text":"<p>Error message exposed when a user isn't providing a email</p> <pre><code>public string EmailErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#password","title":"Password","text":"<p>Password a user can set. This is achieved via data-binding.</p> <pre><code>public string Password { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#passworderrormessage","title":"PasswordErrorMessage","text":"<p>Error message exposed when a user isn't providing a password</p> <pre><code>public string PasswordErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#servererrormessage","title":"ServerErrorMessage","text":"<p>Generic error message shown when server throws an unknown exception</p> <pre><code>public string ServerErrorMessage { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#signupformvmimplisignupservice","title":"SignupFormVmImpl(ISignupService)","text":"<p>Standard Constructor used for dependency injection</p> <pre><code>public SignupFormVmImpl(ISignupService signupService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#parameters","title":"Parameters","text":"<p><code>signupService</code> ISignupService Sign Up service for dependency injection</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#submitsignupform","title":"SubmitSignupForm()","text":"<p>Function called when user submits a form</p> <pre><code>public Task SubmitSignupForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.signupformvmimpl/#exceptions","title":"Exceptions","text":"<p>ArgumentException Thrown when user isn't providing all information needed for a signup</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/","title":"SpacesCardVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <pre><code>public class SpacesCardVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.ISpacesCardVm\n</code></pre> <p>Inheritance Object \u2192 SpacesCardVmImpl Implements ISpacesCardVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#trendingspaces","title":"TrendingSpaces","text":"<pre><code>public List&lt;ForumDto&gt; TrendingSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#property-value","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#recentspaces","title":"RecentSpaces","text":"<pre><code>public List&lt;ForumDto&gt; RecentSpaces { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#property-value_1","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#numofpostsinspace","title":"NumOfPostsInSpace","text":"<pre><code>public Dictionary&lt;Guid, int&gt; NumOfPostsInSpace { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#property-value_2","title":"Property Value","text":"<p>Dictionary&lt;Guid, Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#spacescardvmimpliforumservice","title":"SpacesCardVmImpl(IForumService)","text":"<p>Initializes this ViewModel</p> <pre><code>public SpacesCardVmImpl(IForumService forumService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#parameters","title":"Parameters","text":"<p><code>forumService</code> IForumService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#fetch","title":"Fetch()","text":"<pre><code>public Task Fetch()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacescardvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/","title":"SpacesVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <pre><code>public class SpacesVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.ISpacesVm\n</code></pre> <p>Inheritance Object \u2192 SpacesVmImpl Implements ISpacesVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#forums","title":"Forums","text":"<pre><code>public List&lt;ForumDto&gt; Forums { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#property-value","title":"Property Value","text":"<p>List&lt;ForumDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#spacesvmimpliforumservice","title":"SpacesVmImpl(IForumService)","text":"<p>Initializes this ViewModel</p> <pre><code>public SpacesVmImpl(IForumService forumService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#parameters","title":"Parameters","text":"<p><code>forumService</code> IForumService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#loadforums","title":"LoadForums()","text":"<pre><code>public Task LoadForums()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacesvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/","title":"SpaceVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>Implements ISpaceVm to manage the state of the Space Page.</p> <pre><code>public class SpaceVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.ISpaceVm\n</code></pre> <p>Inheritance Object \u2192 SpaceVmImpl Implements ISpaceVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#isloadingposts","title":"IsLoadingPosts","text":"<p>A boolean flag indicating whether the posts on the page are being loaded.</p> <pre><code>public bool IsLoadingPosts { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#property-value","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#isloadingpage","title":"IsLoadingPage","text":"<p>A boolean flag indicating whether the entire page is being loaded.</p> <pre><code>public bool IsLoadingPage { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#authprincipalid","title":"AuthPrincipalId","text":"<p>The ID of the authenticated user (the currently logged-in user).</p> <pre><code>public Nullable&lt;Guid&gt; AuthPrincipalId { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#space","title":"Space","text":"<p>Holds the details of the current space (ForumDto).</p> <pre><code>public ForumDto Space { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#property-value_3","title":"Property Value","text":"<p>ForumDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#posts","title":"Posts","text":"<p>Contains the paginated posts belonging to the space.</p> <pre><code>public IPage&lt;PostDto&gt; Posts { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#property-value_4","title":"Property Value","text":"<p>IPage&lt;PostDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#spacevmimpliforumservice-ipostservice-iauthservice","title":"SpaceVmImpl(IForumService, IPostService, IAuthService)","text":"<p>Initializes the ViewModel with the necessary services.</p> <pre><code>public SpaceVmImpl(IForumService forumService, IPostService postService, IAuthService authService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#parameters","title":"Parameters","text":"<p><code>forumService</code> IForumService</p> <p><code>postService</code> IPostService</p> <p><code>authService</code> IAuthService</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#initializeguid","title":"Initialize(Guid)","text":"<p>Loads the details of a specific space based on the provided forum ID.  This method also loads the posts for the space and sets the loading states accordingly.  The space to load information from.</p> <pre><code>public Task Initialize(Guid forumId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#parameters_1","title":"Parameters","text":"<p><code>forumId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#loadpostsint32","title":"LoadPosts(Int32)","text":"<p>Loads the posts for the space. This method is called when loading a specific page of posts.</p> <pre><code>public Task LoadPosts(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#parameters_2","title":"Parameters","text":"<p><code>pageNumber</code> Int32 The page number to load posts from.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.spacevmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/","title":"UserVm","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>Implementation of the IUserVm interface.</p> <pre><code>public class UserVm : SlottyMedia.Backend.ViewModel.Interfaces.IUserVm\n</code></pre> <p>Inheritance Object \u2192 UserVm Implements IUserVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#uservmiuserservice","title":"UserVm(IUserService)","text":"<p>Initializes a new instance of the UserVm class.</p> <pre><code>public UserVm(IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#parameters","title":"Parameters","text":"<p><code>userService</code> IUserService The user service to be used.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#getuserbyidguid","title":"GetUserById(Guid)","text":"<pre><code>public Task&lt;UserDto&gt; GetUserById(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#returns","title":"Returns","text":"<p>Task&lt;UserDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#updateuseruserdto","title":"UpdateUser(UserDto)","text":"<pre><code>public Task UpdateUser(UserDto user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#parameters_2","title":"Parameters","text":"<p><code>user</code> UserDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#getuserinformationguid","title":"GetUserInformation(Guid)","text":"<pre><code>public Task&lt;UserInformationDto&gt; GetUserInformation(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservm/#returns_2","title":"Returns","text":"<p>Task&lt;UserInformationDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/","title":"UserVmImpl","text":"<p>Namespace: SlottyMedia.Backend.ViewModel</p> <p>Implementation of the IUserVmImpl interface.</p> <pre><code>public class UserVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IUserVm\n</code></pre> <p>Inheritance Object \u2192 UserVmImpl Implements IUserVm</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#uservmimpliuserservice","title":"UserVmImpl(IUserService)","text":"<p>Initializes a new instance of the UserVmImpl class.</p> <pre><code>public UserVmImpl(IUserService userService)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#parameters","title":"Parameters","text":"<p><code>userService</code> IUserService The user service to be used.</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#getuserbyidguid","title":"GetUserById(Guid)","text":"<pre><code>public Task&lt;UserDto&gt; GetUserById(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#returns","title":"Returns","text":"<p>Task&lt;UserDto&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#updateuseruserdto","title":"UpdateUser(UserDto)","text":"<pre><code>public Task UpdateUser(UserDto user)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#parameters_2","title":"Parameters","text":"<p><code>user</code> UserDto</p>"},{"location":"code/SlottyMedia/slottymedia.backend.viewmodel.uservmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components._imports/","title":"_Imports","text":"<p>Namespace: SlottyMedia.Components</p> <pre><code>public class _Imports : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 _Imports Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components._imports/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components._imports/#_imports_1","title":"_Imports()","text":"<pre><code>public _Imports()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components._imports/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components._imports/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components._imports/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.app/","title":"App","text":"<p>Namespace: SlottyMedia.Components</p> <pre><code>public class App : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 App Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.app/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.app/#app_1","title":"App()","text":"<pre><code>public App()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.app/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.app/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.app/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/","title":"LoginLayout","text":"<p>Namespace: SlottyMedia.Components.Layout</p> <pre><code>public class LoginLayout : Microsoft.AspNetCore.Components.LayoutComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 LayoutComponentBase \u2192 LoginLayout Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/#body","title":"Body","text":"<pre><code>public RenderFragment Body { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/#property-value","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/#loginlayout_1","title":"LoginLayout()","text":"<pre><code>public LoginLayout()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.loginlayout/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/","title":"MainLayout","text":"<p>Namespace: SlottyMedia.Components.Layout</p> <pre><code>public class MainLayout : Microsoft.AspNetCore.Components.LayoutComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 LayoutComponentBase \u2192 MainLayout Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#body","title":"Body","text":"<pre><code>public RenderFragment Body { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#property-value","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#mainlayout_1","title":"MainLayout()","text":"<pre><code>public MainLayout()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#onafterrenderasyncboolean","title":"OnAfterRenderAsync(Boolean)","text":"<pre><code>protected Task OnAfterRenderAsync(bool firstRender)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#parameters_1","title":"Parameters","text":"<p><code>firstRender</code> Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.mainlayout/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/","title":"SpaceLayout","text":"<p>Namespace: SlottyMedia.Components.Layout</p> <pre><code>public class SpaceLayout : Microsoft.AspNetCore.Components.LayoutComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 LayoutComponentBase \u2192 SpaceLayout Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#viewmodelsignup","title":"ViewModelSignUp","text":"<p>ViewModelSignUp to be used on auth</p> <pre><code>public ISignInFormVm ViewModelSignUp { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#property-value","title":"Property Value","text":"<p>ISignInFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#mainlayoutvm","title":"MainLayoutVm","text":"<p>ViewModel to be used in this view</p> <pre><code>public IMainLayoutVm MainLayoutVm { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#property-value_1","title":"Property Value","text":"<p>IMainLayoutVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#userinformationdto","title":"UserInformationDto","text":"<pre><code>public UserInformationDto UserInformationDto { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#property-value_2","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#body","title":"Body","text":"<pre><code>public RenderFragment Body { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#property-value_3","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#spacelayout_1","title":"SpaceLayout()","text":"<pre><code>public SpaceLayout()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#oninitializedasync","title":"OnInitializedAsync()","text":"<p>Refreshes a session</p> <pre><code>protected Task OnInitializedAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#onafterrenderboolean","title":"OnAfterRender(Boolean)","text":"<pre><code>protected void OnAfterRender(bool firstRender)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spacelayout/#parameters_1","title":"Parameters","text":"<p><code>firstRender</code> Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/","title":"SpacesLayout","text":"<p>Namespace: SlottyMedia.Components.Layout</p> <pre><code>public class SpacesLayout : Microsoft.AspNetCore.Components.LayoutComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 LayoutComponentBase \u2192 SpacesLayout Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#viewmodelsignup","title":"ViewModelSignUp","text":"<p>ViewModelSignUp to be used on auth</p> <pre><code>public ISignInFormVm ViewModelSignUp { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#property-value","title":"Property Value","text":"<p>ISignInFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#mainlayoutvm","title":"MainLayoutVm","text":"<p>ViewModel to be used in this view</p> <pre><code>public IMainLayoutVm MainLayoutVm { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#property-value_1","title":"Property Value","text":"<p>IMainLayoutVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#userinformationdto","title":"UserInformationDto","text":"<pre><code>public UserInformationDto UserInformationDto { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#property-value_2","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#body","title":"Body","text":"<pre><code>public RenderFragment Body { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#property-value_3","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#spaceslayout_1","title":"SpacesLayout()","text":"<pre><code>public SpacesLayout()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#oninitializedasync","title":"OnInitializedAsync()","text":"<p>Refreshes a session</p> <pre><code>protected Task OnInitializedAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#onafterrenderboolean","title":"OnAfterRender(Boolean)","text":"<pre><code>protected void OnAfterRender(bool firstRender)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.layout.spaceslayout/#parameters_1","title":"Parameters","text":"<p><code>firstRender</code> Boolean</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.home/","title":"Home","text":"<p>Namespace: SlottyMedia.Components.Pages</p> <pre><code>public class Home : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Home Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.home/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.home/#home_1","title":"Home()","text":"<pre><code>public Home()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.home/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.home/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.home/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.home/#oninitializedasync","title":"OnInitializedAsync()","text":"<p>This method is called when the component is initialized.</p> <pre><code>protected Task OnInitializedAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.home/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.login/","title":"Login","text":"<p>Namespace: SlottyMedia.Components.Pages</p> <pre><code>public class Login : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Login Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.login/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.login/#viewmodel","title":"ViewModel","text":"<p>The ViewModel for the login page</p> <pre><code>public ISignInFormVm ViewModel { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.login/#property-value","title":"Property Value","text":"<p>ISignInFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.login/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.login/#login_1","title":"Login()","text":"<pre><code>public Login()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.login/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.login/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.login/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/","title":"PostPage","text":"<p>Namespace: SlottyMedia.Components.Pages</p> <pre><code>public class PostPage : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 PostPage Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#postid","title":"PostId","text":"<p>The ID of the post to showcase</p> <pre><code>public Nullable&lt;Guid&gt; PostId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#viewmodel","title":"ViewModel","text":"<p>The ViewModel for this component</p> <pre><code>public IPostPageVm ViewModel { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#property-value_1","title":"Property Value","text":"<p>IPostPageVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#postpage_1","title":"PostPage()","text":"<pre><code>public PostPage()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#onparameterssetasync","title":"OnParametersSetAsync()","text":"<pre><code>protected Task OnParametersSetAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.postpage/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/","title":"Profile","text":"<p>Namespace: SlottyMedia.Components.Pages</p> <pre><code>public class Profile : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Profile Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#userid","title":"UserId","text":"<p>The user id of the profile page</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#profile_1","title":"Profile()","text":"<pre><code>public Profile()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#onparameterssetasync","title":"OnParametersSetAsync()","text":"<p>Called when the component's parameters are set. Initializes the profile page view model with the user ID.</p> <pre><code>protected Task OnParametersSetAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.profile/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.register/","title":"Register","text":"<p>Namespace: SlottyMedia.Components.Pages</p> <pre><code>public class Register : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Register Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.register/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.register/#viewmodel","title":"ViewModel","text":"<p>ViewModel to be used</p> <pre><code>public ISignupFormVm ViewModel { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.register/#property-value","title":"Property Value","text":"<p>ISignupFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.register/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.register/#register_1","title":"Register()","text":"<pre><code>public Register()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.register/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.register/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.register/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.space/","title":"Space","text":"<p>Namespace: SlottyMedia.Components.Pages</p> <pre><code>public class Space : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Space Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#spaceid","title":"SpaceId","text":"<pre><code>public Guid SpaceId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#space_1","title":"Space()","text":"<pre><code>public Space()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#oninitializedasync","title":"OnInitializedAsync()","text":"<pre><code>protected Task OnInitializedAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.space/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.spaces/","title":"Spaces","text":"<p>Namespace: SlottyMedia.Components.Pages</p> <pre><code>public class Spaces : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Spaces Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.spaces/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.spaces/#spaces_1","title":"Spaces()","text":"<pre><code>public Spaces()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.spaces/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.pages.spaces/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.spaces/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.pages.spaces/#oninitializedasync","title":"OnInitializedAsync()","text":"<p>This method is called when the page is initialized.</p> <pre><code>protected Task OnInitializedAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.pages.spaces/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/","title":"Avatar","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Avatar : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Avatar Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#childcontent","title":"ChildContent","text":"<p>RenderFragment to render a pictogram into the avatar when a action should be done on clicking an avatar.</p> <pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#property-value","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#onclick","title":"OnClick","text":"<pre><code>public EventCallback OnClick { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#property-value_1","title":"Property Value","text":"<p>EventCallback</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#class","title":"Class","text":"<p>Additional CSS classes to add to the avatar's container</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#base64","title":"Base64","text":"<p>Sets a Base64Png. Gets the currently set base64png variable if set. If not set it gets the path of the standard  profile picture.</p> <pre><code>public string Base64 { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#avatar_1","title":"Avatar()","text":"<pre><code>public Avatar()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.avatar/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.card/","title":"Card","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Card : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Card Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#class","title":"Class","text":"<p>This component represents a card.</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#childcontent","title":"ChildContent","text":"<p>The card's content.</p> <pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#property-value_1","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#card_1","title":"Card()","text":"<pre><code>public Card()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.card/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/","title":"Checkbox","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Checkbox : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Checkbox Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#id","title":"Id","text":"<p>The checkboxes ID</p> <pre><code>public string Id { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#label","title":"Label","text":"<p>The checkboxes label</p> <pre><code>public string Label { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#checkbox_1","title":"Checkbox()","text":"<pre><code>public Checkbox()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.checkbox/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/","title":"Comment","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Comment : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Comment Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#id","title":"Id","text":"<p>The comment data transfer object to be rendered.</p> <pre><code>public Guid Id { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#comment_1","title":"Comment()","text":"<pre><code>public Comment()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#onparameterssetasync","title":"OnParametersSetAsync()","text":"<pre><code>protected Task OnParametersSetAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.comment/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/","title":"DescriptionContainer","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class DescriptionContainer : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 DescriptionContainer Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#descriptiontext","title":"DescriptionText","text":"<p>The description text to be displayed or edited.</p> <pre><code>public string DescriptionText { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#userid","title":"UserId","text":"<p>The user id to update the description text.</p> <pre><code>public Nullable&lt;Guid&gt; UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#property-value_1","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#descriptioncontainer_1","title":"DescriptionContainer()","text":"<pre><code>public DescriptionContainer()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.descriptioncontainer/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/","title":"HotButton","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class HotButton : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 HotButton Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#class","title":"Class","text":"<p>Additional CSS classes to add to this button.</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#type","title":"Type","text":"<p>This button's type (see HTML5 specifications).</p> <pre><code>public string Type { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#childcontent","title":"ChildContent","text":"<p>This button's child content, ideally just a string.</p> <pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#property-value_2","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#onclick","title":"OnClick","text":"<p>An event that is triggered when this button is clicked.</p> <pre><code>public EventCallback OnClick { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#property-value_3","title":"Property Value","text":"<p>EventCallback</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#hotbutton_1","title":"HotButton()","text":"<pre><code>public HotButton()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.hotbutton/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/","title":"InputArea","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class InputArea : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 InputArea Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#class","title":"Class","text":"<p>Additional CSS classes to apply to the textarea component</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#id","title":"Id","text":"<p>The input field's ID</p> <pre><code>public string Id { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#name","title":"Name","text":"<p>The input field's name</p> <pre><code>public string Name { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#placeholder","title":"Placeholder","text":"<pre><code>public string Placeholder { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#type","title":"Type","text":"<pre><code>public string Type { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#value","title":"Value","text":"<pre><code>public string Value { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#valuechanged","title":"ValueChanged","text":"<pre><code>public EventCallback&lt;string&gt; ValueChanged { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#property-value_6","title":"Property Value","text":"<p>EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#inputarea_1","title":"InputArea()","text":"<pre><code>public InputArea()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputarea/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/","title":"InputField","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class InputField : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 InputField Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#childcontent","title":"ChildContent","text":"<p>The input field's icon. Should be a \"InputFieldIcon\" component.</p> <pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#property-value","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#id","title":"Id","text":"<p>The input field's ID</p> <pre><code>public string Id { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#name","title":"Name","text":"<p>The input field's name</p> <pre><code>public string Name { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#placeholder","title":"Placeholder","text":"<pre><code>public string Placeholder { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#type","title":"Type","text":"<pre><code>public string Type { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#value","title":"Value","text":"<pre><code>public string Value { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#valuechanged","title":"ValueChanged","text":"<pre><code>public EventCallback&lt;string&gt; ValueChanged { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#property-value_6","title":"Property Value","text":"<p>EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#onenter","title":"OnEnter","text":"<pre><code>public EventCallback OnEnter { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#property-value_7","title":"Property Value","text":"<p>EventCallback</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#inputfield_1","title":"InputField()","text":"<pre><code>public InputField()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfield/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/","title":"InputFieldIcon","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class InputFieldIcon : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 InputFieldIcon Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/#childcontent","title":"ChildContent","text":"<p>Gets or sets the content to be rendered inside the input field icon.</p> <pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/#property-value","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/#inputfieldicon_1","title":"InputFieldIcon()","text":"<pre><code>public InputFieldIcon()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.inputfieldicon/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/","title":"LikeButton","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class LikeButton : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 LikeButton Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#class","title":"Class","text":"<p>Additional CSS classes to apply to the outer SVG image.</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#initial","title":"Initial","text":"<p>The button's initial value. If true, this button is \"turned on\".</p> <pre><code>public Nullable&lt;bool&gt; Initial { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#property-value_1","title":"Property Value","text":"<p>Nullable&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#onclick","title":"OnClick","text":"<p>An event that is triggered when this button is clicked. The callback's parameter  is a boolean that represents the button's new state.</p> <pre><code>public EventCallback&lt;bool&gt; OnClick { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#property-value_2","title":"Property Value","text":"<p>EventCallback&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#likebutton_1","title":"LikeButton()","text":"<pre><code>public LikeButton()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.likebutton/#oninitialized","title":"OnInitialized()","text":"<pre><code>protected void OnInitialized()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/","title":"Link","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Link : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Link Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#to","title":"To","text":"<p>Where this link should navigate to. Corresponds to \"href\".</p> <pre><code>public string To { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#class","title":"Class","text":"<p>Additional CSS classes to apply to this link.</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#childcontent","title":"ChildContent","text":"<p>The link's content, ideally just a string.</p> <pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#property-value_2","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#link_1","title":"Link()","text":"<pre><code>public Link()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.link/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.accountcard/","title":"AccountCard","text":"<p>Namespace: SlottyMedia.Components.Partial.MainLayout</p> <pre><code>public class AccountCard : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 AccountCard Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.accountcard/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.accountcard/#accountcard_1","title":"AccountCard()","text":"<pre><code>public AccountCard()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.accountcard/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.accountcard/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.accountcard/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.accountcard/#oninitializedasync","title":"OnInitializedAsync()","text":"<pre><code>protected Task OnInitializedAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.accountcard/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/","title":"LoginCard","text":"<p>Namespace: SlottyMedia.Components.Partial.MainLayout</p> <pre><code>public class LoginCard : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 LoginCard Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/#signinvm","title":"SignInVm","text":"<pre><code>public ISignInFormVm SignInVm { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/#property-value","title":"Property Value","text":"<p>ISignInFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/#logincard_1","title":"LoginCard()","text":"<pre><code>public LoginCard()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.logincard/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navbox/","title":"NavBox","text":"<p>Namespace: SlottyMedia.Components.Partial.MainLayout</p> <pre><code>public class NavBox : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 NavBox Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navbox/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navbox/#navbox_1","title":"NavBox()","text":"<pre><code>public NavBox()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navbox/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navbox/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navbox/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/","title":"NavBoxLink","text":"<p>Namespace: SlottyMedia.Components.Partial.MainLayout</p> <pre><code>public class NavBoxLink : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 NavBoxLink Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#label","title":"Label","text":"<pre><code>public string Label { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#property-value","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#to","title":"To","text":"<pre><code>public string To { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#childcontent","title":"ChildContent","text":"<pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#property-value_2","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#navboxlink_1","title":"NavBoxLink()","text":"<pre><code>public NavBoxLink()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.navboxlink/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/","title":"PostSubmissionForm","text":"<p>Namespace: SlottyMedia.Components.Partial.MainLayout</p> <pre><code>public class PostSubmissionForm : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 PostSubmissionForm Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#viewmodel","title":"ViewModel","text":"<p>The ViewModel for this component</p> <pre><code>public IPostSubmissionFormVm ViewModel { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#property-value","title":"Property Value","text":"<p>IPostSubmissionFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#valuechanged","title":"ValueChanged","text":"<p>An event that is invoked whenever this input field's value changes</p> <pre><code>public EventCallback&lt;string&gt; ValueChanged { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#property-value_1","title":"Property Value","text":"<p>EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#userid","title":"UserId","text":"<p>The Id of the User</p> <pre><code>public Nullable&lt;Guid&gt; UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#postsubmissionform_1","title":"PostSubmissionForm()","text":"<pre><code>public PostSubmissionForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#onafterrenderboolean","title":"OnAfterRender(Boolean)","text":"<p>Called after the component has been rendered. Fetches user information if it is the first render.</p> <pre><code>protected void OnAfterRender(bool firstRender)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.postsubmissionform/#parameters_1","title":"Parameters","text":"<p><code>firstRender</code> Boolean Indicates whether this is the first render</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescard/","title":"SpacesCard","text":"<p>Namespace: SlottyMedia.Components.Partial.MainLayout</p> <pre><code>public class SpacesCard : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 SpacesCard Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescard/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescard/#spacescard_1","title":"SpacesCard()","text":"<pre><code>public SpacesCard()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescard/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescard/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescard/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescard/#oninitializedasync","title":"OnInitializedAsync()","text":"<p>Called when the component is initialized.</p> <pre><code>protected Task OnInitializedAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescard/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescardnoaccount/","title":"SpacesCardNoAccount","text":"<p>Namespace: SlottyMedia.Components.Partial.MainLayout</p> <pre><code>public class SpacesCardNoAccount : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 SpacesCardNoAccount Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescardnoaccount/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescardnoaccount/#spacescardnoaccount_1","title":"SpacesCardNoAccount()","text":"<pre><code>public SpacesCardNoAccount()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescardnoaccount/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescardnoaccount/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescardnoaccount/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescardnoaccount/#oninitializedasync","title":"OnInitializedAsync()","text":"<p>Called when the component is initialized.</p> <pre><code>protected Task OnInitializedAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.mainlayout.spacescardnoaccount/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/","title":"Pagination&lt;T&gt;","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Pagination&lt;T&gt; : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code></p> <p>Inheritance Object \u2192 ComponentBase \u2192 Pagination&lt;T&gt; Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#page","title":"Page","text":"<p>The paginated list to display.</p> <pre><code>public IPage&lt;T&gt; Page { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#property-value","title":"Property Value","text":"<p>IPage&lt;T&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#onpagefetch","title":"OnPageFetch","text":"<p>The event that is triggered when a page is fetched.</p> <pre><code>public EventCallback&lt;int&gt; OnPageFetch { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#property-value_1","title":"Property Value","text":"<p>EventCallback&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#childcontent","title":"ChildContent","text":"<p>The content to display in the paginated list.</p> <pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#property-value_2","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#class","title":"Class","text":"<p>The additional CSS classes to apply to the outer div.</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#pagination","title":"Pagination()","text":"<pre><code>public Pagination()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.pagination-1/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.post/","title":"Post","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Post : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Post Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#id","title":"Id","text":"<pre><code>public Guid Id { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#post_1","title":"Post()","text":"<pre><code>public Post()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#onparameterssetasync","title":"OnParametersSetAsync()","text":"<pre><code>protected Task OnParametersSetAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.post/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/","title":"Comment","text":"<p>Namespace: SlottyMedia.Components.Partial.PostPage</p> <pre><code>public class Comment : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Comment Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#id","title":"Id","text":"<p>The ID of the comment to render</p> <pre><code>public Guid Id { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#comment_1","title":"Comment()","text":"<pre><code>public Comment()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#onparameterssetasync","title":"OnParametersSetAsync()","text":"<pre><code>protected Task OnParametersSetAsync()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.comment/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/","title":"CommentSubmissionForm","text":"<p>Namespace: SlottyMedia.Components.Partial.PostPage</p> <pre><code>public class CommentSubmissionForm : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 CommentSubmissionForm Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#postid","title":"PostId","text":"<p>The ID of the post to submit a comment for.</p> <pre><code>public Nullable&lt;Guid&gt; PostId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#userid","title":"UserId","text":"<p>The UserId of the user to submit the comment for.</p> <pre><code>public Nullable&lt;Guid&gt; UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#property-value_1","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#viewmodel","title":"ViewModel","text":"<p>The ViewModel for this component.</p> <pre><code>public ICommentSubmissionFormVm ViewModel { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#property-value_2","title":"Property Value","text":"<p>ICommentSubmissionFormVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#commentsubmissionform_1","title":"CommentSubmissionForm()","text":"<pre><code>public CommentSubmissionForm()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#onafterrenderboolean","title":"OnAfterRender(Boolean)","text":"<p>Called after the component has been rendered. Fetches user information if it is the first render.</p> <pre><code>protected void OnAfterRender(bool firstRender)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.postpage.commentsubmissionform/#parameters_1","title":"Parameters","text":"<p><code>firstRender</code> Boolean Indicates whether this is the first render.</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.search/","title":"Search","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Search : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Search Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#mainlayoutvm","title":"MainLayoutVm","text":"<p>ViewModel to be used in this view</p> <pre><code>public ISearchVm MainLayoutVm { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#property-value","title":"Property Value","text":"<p>ISearchVm</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#valuechanged","title":"ValueChanged","text":"<pre><code>public EventCallback&lt;string&gt; ValueChanged { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#property-value_1","title":"Property Value","text":"<p>EventCallback&lt;String&gt;</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#search_1","title":"Search()","text":"<pre><code>public Search()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.search/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/","title":"Tag","text":"<p>Namespace: SlottyMedia.Components.Partial</p> <pre><code>public class Tag : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Tag Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#childcontent","title":"ChildContent","text":"<p>This component represents a tag.</p> <pre><code>public RenderFragment ChildContent { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#property-value","title":"Property Value","text":"<p>RenderFragment</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#exceptions","title":"Exceptions","text":"<p>ArgumentException If an illegal color was provided.</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#color","title":"Color","text":"<p>The tag's color.  Should be one of 'savoy-blue', 'grape', 'fandango', 'crayola-orange', 'jasmine'.  Default is 'fandango'.</p> <pre><code>public string Color { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#class","title":"Class","text":"<p>Additional CSS classes to apply to the outermost container of this component.</p> <pre><code>public string Class { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#onclick","title":"OnClick","text":"<p>An event that is triggered when this tag is clicked.</p> <pre><code>public EventCallback OnClick { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#property-value_3","title":"Property Value","text":"<p>EventCallback</p>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#tag_1","title":"Tag()","text":"<pre><code>public Tag()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.partial.tag/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.components.routes/","title":"Routes","text":"<p>Namespace: SlottyMedia.Components</p> <pre><code>public class Routes : Microsoft.AspNetCore.Components.ComponentBase, Microsoft.AspNetCore.Components.IComponent, Microsoft.AspNetCore.Components.IHandleEvent, Microsoft.AspNetCore.Components.IHandleAfterRender\n</code></pre> <p>Inheritance Object \u2192 ComponentBase \u2192 Routes Implements IComponent, IHandleEvent, IHandleAfterRender</p>"},{"location":"code/SlottyMedia/slottymedia.components.routes/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.components.routes/#routes_1","title":"Routes()","text":"<pre><code>public Routes()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.routes/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.components.routes/#buildrendertreerendertreebuilder","title":"BuildRenderTree(RenderTreeBuilder)","text":"<pre><code>protected void BuildRenderTree(RenderTreeBuilder __builder)\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.components.routes/#parameters","title":"Parameters","text":"<p><code>__builder</code> RenderTreeBuilder</p>"},{"location":"code/SlottyMedia/slottymedia.nlogconfiguration/","title":"NlogConfiguration","text":"<p>Namespace: SlottyMedia</p> <p>Configuration for NLog.</p> <pre><code>public class NlogConfiguration\n</code></pre> <p>Inheritance Object \u2192 NlogConfiguration</p>"},{"location":"code/SlottyMedia/slottymedia.nlogconfiguration/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia/slottymedia.nlogconfiguration/#nlogconfiguration_1","title":"NlogConfiguration()","text":"<pre><code>public NlogConfiguration()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.nlogconfiguration/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia/slottymedia.nlogconfiguration/#createnlogconfig","title":"CreateNlogConfig()","text":"<p>Create a new NLog configuration.</p> <pre><code>public static LoggingConfiguration CreateNlogConfig()\n</code></pre>"},{"location":"code/SlottyMedia/slottymedia.nlogconfiguration/#returns","title":"Returns","text":"<p>LoggingConfiguration</p>"},{"location":"code/SlottyMedia.Database/","title":"SlottyMedia.Database","text":""},{"location":"code/SlottyMedia.Database/#slottymediadatabase_1","title":"SlottyMedia.Database","text":"<p>InitializeSupabaseClient</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabasedaos","title":"SlottyMedia.Database.Daos","text":"<p>CommentDao</p> <p>FollowerUserRelationDao</p> <p>ForumDao</p> <p>PostsDao</p> <p>RoleDao</p> <p>TopForumDao</p> <p>UserDao</p> <p>UserLikePostRelationDao</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaseexceptions","title":"SlottyMedia.Database.Exceptions","text":"<p>DatabaseIudActionException</p> <p>DatabaseJsonConvertFailed</p> <p>DatabaseMissingItemException</p> <p>DatabasePaginationFailedException</p> <p>GeneralDatabaseException</p> <p>TableHasNoPrimaryKeyException</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabasehelper","title":"SlottyMedia.Database.Helper","text":"<p>DaoHelper</p> <p>DatabaseRepositroyHelper</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabasepagination","title":"SlottyMedia.Database.Pagination","text":"<p>IPage&lt;T&gt;</p> <p>PageImpl&lt;T&gt;</p> <p>PageRequest</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepository","title":"SlottyMedia.Database.Repository","text":"<p>DatabaseRepository&lt;T&gt;</p> <p>IDatabaseRepository&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepositorycommentrepo","title":"SlottyMedia.Database.Repository.CommentRepo","text":"<p>CommentRepository</p> <p>ICommentRepository</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepositoryfolloweruserrelatiorepo","title":"SlottyMedia.Database.Repository.FollowerUserRelatioRepo","text":"<p>FollowerUserRelationRepository</p> <p>IFollowerUserRelationRepository</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepositoryforumrepo","title":"SlottyMedia.Database.Repository.ForumRepo","text":"<p>ForumRepository</p> <p>IForumRepository</p> <p>ITopForumRepository</p> <p>TopForumRepository</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepositorypostrepo","title":"SlottyMedia.Database.Repository.PostRepo","text":"<p>IPostRepository</p> <p>PostRepository</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepositoryrolerepo","title":"SlottyMedia.Database.Repository.RoleRepo","text":"<p>IRoleRepository</p> <p>RoleRepository</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepositorysearchrepo","title":"SlottyMedia.Database.Repository.SearchRepo","text":"<p>ForumSearchRepository</p> <p>IForumSearchRepository</p> <p>IUserSeachRepository</p> <p>UserSearchRepository</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepositoryuserlikepostrelationrepo","title":"SlottyMedia.Database.Repository.UserLikePostRelationRepo","text":"<p>IUserLikePostRelationRepostitory</p> <p>UserLikePostRelationRepostitory</p>"},{"location":"code/SlottyMedia.Database/#slottymediadatabaserepositoryuserrepo","title":"SlottyMedia.Database.Repository.UserRepo","text":"<p>IUserRepository</p> <p>UserRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/","title":"CommentDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the Comment table in the database.</p> <pre><code>public class CommentDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 CommentDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#commentid","title":"CommentId","text":"<p>The ID of the Comment. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; CommentId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#parentcommentid","title":"ParentCommentId","text":"<p>The ID of the Parent Comment. This is only set when there is a Parent Comment.</p> <pre><code>public Nullable&lt;Guid&gt; ParentCommentId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_1","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#creatoruserid","title":"CreatorUserId","text":"<p>The ID of the User who created the Comment. This is a Foreign Key to the User Table.</p> <pre><code>public Nullable&lt;Guid&gt; CreatorUserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#postid","title":"PostId","text":"<p>The ID of the Post the Comment is related to. This is a Foreign Key to the Post Table.</p> <pre><code>public Nullable&lt;Guid&gt; PostId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_3","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#content","title":"Content","text":"<p>The Content of the Comment.</p> <pre><code>public string Content { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#createdat","title":"CreatedAt","text":"<p>The Date and Time the Comment was created.</p> <pre><code>public DateTimeOffset CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_5","title":"Property Value","text":"<p>DateTimeOffset</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_7","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_8","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#property-value_9","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#commentdao_1","title":"CommentDao()","text":"<p>Default constructor.</p> <pre><code>public CommentDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#commentdaoguid-guid-string-nullableguid","title":"CommentDao(Guid, Guid, String, Nullable&lt;Guid&gt;)","text":"<p>This constructor is used to create a new Comment. The CommentId is auto-generated.</p> <pre><code>public CommentDao(Guid creatorUserId, Guid postId, string content, Nullable&lt;Guid&gt; parentCommentId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#parameters","title":"Parameters","text":"<p><code>creatorUserId</code> Guid The user who created the comment</p> <p><code>postId</code> Guid The postId of the comment</p> <p><code>content</code> String The content of the comment</p> <p><code>parentCommentId</code> Nullable&lt;Guid&gt; The ID of the parent comment, if any</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#tostring","title":"ToString()","text":"<p>The ToString method is used to return a string representation of the CommentDao object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.commentdao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/","title":"FollowerUserRelationDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the Follower_User_Relation table in the database.</p> <pre><code>public class FollowerUserRelationDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 FollowerUserRelationDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#followeruserrelationid","title":"FollowerUserRelationId","text":"<p>The ID of the Follower_User_Relation. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; FollowerUserRelationId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#followeruser","title":"FollowerUser","text":"<p>The User who is following another User. This is a Reference to the User Table.</p> <pre><code>public UserDao FollowerUser { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value_1","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#followeruserid","title":"FollowerUserId","text":"<p>The ID of the User who is following another User. This is a Foreign Key to the User Table.</p> <pre><code>public Nullable&lt;Guid&gt; FollowerUserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#followeduserid","title":"FollowedUserId","text":"<p>The ID of the User who is being followed. This is a Foreign Key to the User Table.</p> <pre><code>public Nullable&lt;Guid&gt; FollowedUserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value_3","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#createdat","title":"CreatedAt","text":"<p>The Date and Time the Follower_User_Relation was created.</p> <pre><code>public DateTimeOffset CreatedAt { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value_4","title":"Property Value","text":"<p>DateTimeOffset</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value_6","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#property-value_8","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#followeruserrelationdao_1","title":"FollowerUserRelationDao()","text":"<p>Default constructor.</p> <pre><code>public FollowerUserRelationDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#followeruserrelationdaoguid-guid","title":"FollowerUserRelationDao(Guid, Guid)","text":"<p>Constructor to create a new FollowerUserRelation.</p> <pre><code>public FollowerUserRelationDao(Guid followerUserId, Guid followedUserId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#parameters","title":"Parameters","text":"<p><code>followerUserId</code> Guid The ID of the User who is following another User.</p> <p><code>followedUserId</code> Guid The ID of the User who is being followed.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the FollowerUserRelationDao object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.followeruserrelationdao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/","title":"ForumDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the Forum table in the database.</p> <pre><code>public class ForumDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 ForumDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#forumid","title":"ForumId","text":"<p>The ID of the Forum. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; ForumId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#creatoruser","title":"CreatorUser","text":"<p>The User who created the Forum. This is a Reference to the User Table.</p> <pre><code>public UserDao CreatorUser { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_1","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#creatoruserid","title":"CreatorUserId","text":"<p>The ID of the User who created the Forum. This is a Foreign Key to the User Table.</p> <pre><code>public Nullable&lt;Guid&gt; CreatorUserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#forumtopic","title":"ForumTopic","text":"<p>The Title of the Forum.</p> <pre><code>public string ForumTopic { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#post_count","title":"post_count","text":"<p>The Count of Posts in the Forum.</p> <pre><code>public Nullable&lt;int&gt; post_count { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_4","title":"Property Value","text":"<p>Nullable&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#createdat","title":"CreatedAt","text":"<p>Created Date and Time of the Forum.</p> <pre><code>public DateTimeOffset CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_5","title":"Property Value","text":"<p>DateTimeOffset</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_7","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_8","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#property-value_9","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#forumdao_1","title":"ForumDao()","text":"<p>The default constructor.</p> <pre><code>public ForumDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#forumdaoguid-string","title":"ForumDao(Guid, String)","text":"<p>The constructor with parameters.</p> <pre><code>public ForumDao(Guid creatorUserId, string forumTopic)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#parameters","title":"Parameters","text":"<p><code>creatorUserId</code> Guid The Id of the User who created the Forum</p> <p><code>forumTopic</code> String The Topic of the Forum</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.forumdao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/","title":"PostsDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the Posts table in the database.</p> <pre><code>public class PostsDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 PostsDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#postid","title":"PostId","text":"<p>The ID of the Post. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; PostId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#userid","title":"UserId","text":"<p>The ID of the User who created the Post. This is a Foreign Key to the User Table.</p> <pre><code>public Nullable&lt;Guid&gt; UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_1","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#forum","title":"Forum","text":"<p>The Forum the Post is associated with. This is a Reference to the Forum Table. It is a Foreign Key. Be aware, that  this  Field will not be filled when you insert the Post into the Database.</p> <pre><code>public ForumDao Forum { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_2","title":"Property Value","text":"<p>ForumDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#forumid","title":"ForumId","text":"<p>The ID of the Forum the Post is associated with. This is a Foreign Key to the Forum Table.</p> <pre><code>public Nullable&lt;Guid&gt; ForumId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_3","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#headline","title":"Headline","text":"<p>The Headline of the Post.</p> <pre><code>public string Headline { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#content","title":"Content","text":"<p>The Content of the Post.</p> <pre><code>public string Content { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#createdat","title":"CreatedAt","text":"<p>The Date and Time the Post was created.</p> <pre><code>public DateTimeOffset CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_6","title":"Property Value","text":"<p>DateTimeOffset</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_8","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_9","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#property-value_10","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#postsdao_1","title":"PostsDao()","text":"<p>The default constructor.</p> <pre><code>public PostsDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#postsdaoguid-guid-string-string","title":"PostsDao(Guid, Guid, String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public PostsDao(Guid userId, Guid forumId, string headline, string content)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The UserId of the Post</p> <p><code>forumId</code> Guid The ForumId of the Post</p> <p><code>headline</code> String The Headline of the Post</p> <p><code>content</code> String The Content of the Post</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.postsdao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/","title":"RoleDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the Role table in the database.</p> <pre><code>public class RoleDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 RoleDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#roleid","title":"RoleId","text":"<p>The ID of the Role. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; RoleId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#rolename","title":"RoleName","text":"<p>The Name of the Role.</p> <pre><code>public string RoleName { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#description","title":"Description","text":"<p>The Description of the Role.</p> <pre><code>public string Description { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#property-value_2","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#createdat","title":"CreatedAt","text":"<p>The Date and Time the Role was created.</p> <pre><code>public DateTimeOffset CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#property-value_3","title":"Property Value","text":"<p>DateTimeOffset</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#property-value_5","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#property-value_7","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.roledao/#roledao_1","title":"RoleDao()","text":"<pre><code>public RoleDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/","title":"SpaceDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the Forum table in the database.</p> <pre><code>public class SpaceDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 SpaceDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#forumid","title":"ForumId","text":"<p>The ID of the Forum. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; ForumId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#creatoruser","title":"CreatorUser","text":"<p>The User who created the Forum. This is a Reference to the User Table.</p> <pre><code>public UserDao CreatorUser { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value_1","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#creatoruserid","title":"CreatorUserId","text":"<p>The ID of the User who created the Forum. This is a Foreign Key to the User Table.</p> <pre><code>public Nullable&lt;Guid&gt; CreatorUserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#forumtopic","title":"ForumTopic","text":"<p>The Title of the Forum.</p> <pre><code>public string ForumTopic { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#createdat","title":"CreatedAt","text":"<p>Created Date and Time of the Forum.</p> <pre><code>public DateTimeOffset CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value_4","title":"Property Value","text":"<p>DateTimeOffset</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value_6","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#property-value_8","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#spacedao_1","title":"SpaceDao()","text":"<p>The default constructor.</p> <pre><code>public SpaceDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#spacedaoguid-string","title":"SpaceDao(Guid, String)","text":"<p>The constructor with parameters.</p> <pre><code>public SpaceDao(Guid creatorUserId, string forumTopic)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#parameters","title":"Parameters","text":"<p><code>creatorUserId</code> Guid The Id of the User who created the Forum</p> <p><code>forumTopic</code> String The Topic of the Forum</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.spacedao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/","title":"TopForumDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the Forum table in the database.</p> <pre><code>public class TopForumDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 TopForumDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#forumid","title":"ForumId","text":"<p>The ID of the Forum. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; ForumId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#forumtopic","title":"ForumTopic","text":"<p>The Title of the Forum.</p> <pre><code>public string ForumTopic { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#post_count","title":"post_count","text":"<p>The Count of Posts in the Forum.</p> <pre><code>public Nullable&lt;int&gt; post_count { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#property-value_4","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#property-value_6","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#topforumdao_1","title":"TopForumDao()","text":"<p>The default constructor.</p> <pre><code>public TopForumDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#topforumdaostring","title":"TopForumDao(String)","text":"<p>The constructor with parameters.</p> <pre><code>public TopForumDao(string forumTopic)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#parameters","title":"Parameters","text":"<p><code>forumTopic</code> String The Topic of the Forum</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topforumdao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/","title":"TopSpaceDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the Forum table in the database.</p> <pre><code>public class TopSpaceDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 TopSpaceDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#forumid","title":"ForumId","text":"<p>The ID of the Forum. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; ForumId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#forumtopic","title":"ForumTopic","text":"<p>The Title of the Forum.</p> <pre><code>public string ForumTopic { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#post_count","title":"post_count","text":"<p>The Count of Posts in the Forum.</p> <pre><code>public Nullable&lt;int&gt; post_count { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#property-value_4","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#property-value_6","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#topspacedao_1","title":"TopSpaceDao()","text":"<p>The default constructor.</p> <pre><code>public TopSpaceDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#topspacedaostring","title":"TopSpaceDao(String)","text":"<p>The constructor with parameters.</p> <pre><code>public TopSpaceDao(string forumTopic)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#parameters","title":"Parameters","text":"<p><code>forumTopic</code> String The Topic of the Forum</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.topspacedao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/","title":"UserDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the User table in the database.</p> <pre><code>public class UserDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 UserDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#userid","title":"UserId","text":"<p>The ID of the User. This is the Primary Key. The User ID is generated by the Supabase Authentication Service.</p> <pre><code>public Nullable&lt;Guid&gt; UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#role","title":"Role","text":"<p>The Role of the User. This is a Reference to the Role Table. It is a Foreign Key. Be aware, that this  Field will not be filled when you insert the User into the Database.</p> <pre><code>public RoleDao Role { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_1","title":"Property Value","text":"<p>RoleDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#roleid","title":"RoleId","text":"<p>The ID of the Role the User has. This is a Foreign Key to the Role Table.</p> <pre><code>public Nullable&lt;Guid&gt; RoleId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#username","title":"UserName","text":"<p>The Username of the User.</p> <pre><code>public string UserName { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_3","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#email","title":"Email","text":"<p>The Email of the User.</p> <pre><code>public string Email { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#description","title":"Description","text":"<p>The Description of the User.</p> <pre><code>public string Description { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#profilepic","title":"ProfilePic","text":"<p>The Profile Picture of the User.</p> <pre><code>public string ProfilePic { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#createdat","title":"CreatedAt","text":"<p>The Date and Time the User was created.</p> <pre><code>public DateTimeOffset CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_7","title":"Property Value","text":"<p>DateTimeOffset</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_8","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_9","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_10","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#property-value_11","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#userdao_1","title":"UserDao()","text":"<p>The defaulkt constructor for the User Dao.</p> <pre><code>public UserDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#userdaoguid-guid-string-string-string-string","title":"UserDao(Guid, Guid, String, String, String, String)","text":"<p>The constructor for the User Dao.</p> <pre><code>public UserDao(Guid userId, Guid roleId, string userName, string email, string description, string profilePic)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>roleId</code> Guid</p> <p><code>userName</code> String</p> <p><code>email</code> String</p> <p><code>description</code> String</p> <p><code>profilePic</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the UserDao object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userdao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/","title":"UserLikePostRelationDao","text":"<p>Namespace: SlottyMedia.Database.Daos</p> <p>This class represents the User_Like_Post_Relation table in the database.</p> <pre><code>public class UserLikePostRelationDao : Supabase.Postgrest.Models.BaseModel\n</code></pre> <p>Inheritance Object \u2192 BaseModel \u2192 UserLikePostRelationDao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#userlikepostrelationid","title":"UserLikePostRelationId","text":"<p>The ID of the User_Like_Post_Relation. This is the Primary Key. It is auto-generated.</p> <pre><code>public Nullable&lt;Guid&gt; UserLikePostRelationId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#property-value","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#userid","title":"UserId","text":"<p>The ID of the User who liked the Post. This is a Foreign Key to the User Table.</p> <pre><code>public Nullable&lt;Guid&gt; UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#property-value_1","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#postid","title":"PostId","text":"<p>The ID of the Post that was liked. This is a Foreign Key to the Post Table.</p> <pre><code>public Nullable&lt;Guid&gt; PostId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#property-value_2","title":"Property Value","text":"<p>Nullable&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#createdat","title":"CreatedAt","text":"<p>The Date and Time the User_Like_Post_Relation was created.</p> <pre><code>public DateTimeOffset CreatedAt { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#property-value_3","title":"Property Value","text":"<p>DateTimeOffset</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#baseurl","title":"BaseUrl","text":"<pre><code>public string BaseUrl { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#requestclientoptions","title":"RequestClientOptions","text":"<pre><code>public ClientOptions RequestClientOptions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#property-value_5","title":"Property Value","text":"<p>ClientOptions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#tablename","title":"TableName","text":"<pre><code>public string TableName { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#property-value_6","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#primarykey","title":"PrimaryKey","text":"<pre><code>public Dictionary&lt;PrimaryKeyAttribute, object&gt; PrimaryKey { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#property-value_7","title":"Property Value","text":"<p>Dictionary&lt;PrimaryKeyAttribute, Object&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#userlikepostrelationdao_1","title":"UserLikePostRelationDao()","text":"<p>The default constructor.</p> <pre><code>public UserLikePostRelationDao()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#userlikepostrelationdaoguid-guid","title":"UserLikePostRelationDao(Guid, Guid)","text":"<p>The constructor with parameters.</p> <pre><code>public UserLikePostRelationDao(Guid userId, Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The UserId</p> <p><code>postId</code> Guid The PostId</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#tostring","title":"ToString()","text":"<p>The ToString method returns a string representation of the object.</p> <pre><code>public string ToString()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.daos.userlikepostrelationdao/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/","title":"DatabaseActions","text":"<p>Namespace: SlottyMedia.Database</p> <p>The DatabaseActions class is responsible for all database actions.</p> <pre><code>public class DatabaseActions : IDatabaseActions\n</code></pre> <p>Inheritance Object \u2192 DatabaseActions Implements IDatabaseActions</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#databaseactionsclient","title":"DatabaseActions(Client)","text":"<p>The default constructor.</p> <pre><code>public DatabaseActions(Client supabaseClient)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters","title":"Parameters","text":"<p><code>supabaseClient</code> Client</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#inserttt","title":"Insert&lt;T&gt;(T)","text":"<pre><code>public Task&lt;T&gt; Insert&lt;T&gt;(T item)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_1","title":"Parameters","text":"<p><code>item</code> T</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns","title":"Returns","text":"<p>Task&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#updatett","title":"Update&lt;T&gt;(T)","text":"<pre><code>public Task&lt;T&gt; Update&lt;T&gt;(T item)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_1","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_2","title":"Parameters","text":"<p><code>item</code> T</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_1","title":"Returns","text":"<p>Task&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#deletett","title":"Delete&lt;T&gt;(T)","text":"<pre><code>public Task&lt;bool&gt; Delete&lt;T&gt;(T item)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_2","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_3","title":"Parameters","text":"<p><code>item</code> T</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_2","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#getentitybyfieldtstring-string","title":"GetEntityByField&lt;T&gt;(String, String)","text":"<pre><code>public Task&lt;T&gt; GetEntityByField&lt;T&gt;(string field, string value)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_3","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_4","title":"Parameters","text":"<p><code>field</code> String</p> <p><code>value</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_3","title":"Returns","text":"<p>Task&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#getentitiewithselectorbyidtexpressionfunct-object-string-string","title":"GetEntitieWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt;, String, String)","text":"<pre><code>public Task&lt;T&gt; GetEntitieWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt; selector, string field, string value)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_4","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_5","title":"Parameters","text":"<p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt;</p> <p><code>field</code> String</p> <p><code>value</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_4","title":"Returns","text":"<p>Task&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#getentitieswithselectorbyidtexpressionfunct-object-string-string-int32-int32-valuetuple3","title":"GetEntitiesWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt;, String, String, Int32, Int32, ValueTuple`3[])","text":"<pre><code>public Task&lt;List&lt;T&gt;&gt; GetEntitiesWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt; selector, string field, string value, int max, int min, ValueTuple`3[] orderByFields)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_5","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_6","title":"Parameters","text":"<p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt;</p> <p><code>field</code> String</p> <p><code>value</code> String</p> <p><code>max</code> Int32</p> <p><code>min</code> Int32</p> <p><code>orderByFields</code> ValueTuple`3[]</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_5","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#getentitieswithselectorbyidtexpressionfunct-object-listvaluetuplestring-operator-string-int32-int32-valuetuple3","title":"GetEntitiesWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt;, List&lt;ValueTuple&lt;String, Operator, String&gt;&gt;, Int32, Int32, ValueTuple`3[])","text":"<pre><code>public Task&lt;List&lt;T&gt;&gt; GetEntitiesWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt; selector, List&lt;ValueTuple&lt;string, Operator, string&gt;&gt; search, int max, int min, ValueTuple`3[] orderByFields)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_6","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_7","title":"Parameters","text":"<p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt;</p> <p><code>search</code> List&lt;ValueTuple&lt;String, Operator, String&gt;&gt;</p> <p><code>max</code> Int32</p> <p><code>min</code> Int32</p> <p><code>orderByFields</code> ValueTuple`3[]</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_6","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#getentitiest","title":"GetEntities&lt;T&gt;()","text":"<pre><code>public Task&lt;List&lt;T&gt;&gt; GetEntities&lt;T&gt;()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_7","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_7","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#checkifentityexistststring-string","title":"CheckIfEntityExists&lt;T&gt;(String, String)","text":"<pre><code>public Task&lt;bool&gt; CheckIfEntityExists&lt;T&gt;(string field, string value)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_8","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_8","title":"Parameters","text":"<p><code>field</code> String</p> <p><code>value</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_8","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#getcountbyfieldtstring-string","title":"GetCountByField&lt;T&gt;(String, String)","text":"<pre><code>public Task&lt;int&gt; GetCountByField&lt;T&gt;(string field, string value)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#type-parameters_9","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_9","title":"Parameters","text":"<p><code>field</code> String</p> <p><code>value</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_9","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#getcountforuserforumsstring","title":"GetCountForUserForums(String)","text":"<pre><code>public Task&lt;int&gt; GetCountForUserForums(string userId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_10","title":"Parameters","text":"<p><code>userId</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_10","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#gettotalforumcountstring","title":"GetTotalForumCount(String)","text":"<pre><code>public Task&lt;int&gt; GetTotalForumCount(string forumID)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#parameters_11","title":"Parameters","text":"<p><code>forumID</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_11","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#gettopforums","title":"GetTopForums()","text":"<pre><code>public Task&lt;List&lt;TopForumDao&gt;&gt; GetTopForums()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.databaseactions/#returns_12","title":"Returns","text":"<p>Task&lt;List&lt;TopForumDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/","title":"BaseDatabaseException","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>This class represents the BaseDatabaseException.</p> <pre><code>public class BaseDatabaseException : System.Exception, System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseDatabaseException Implements ISerializable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#basedatabaseexception_1","title":"BaseDatabaseException()","text":"<p>The default constructor.</p> <pre><code>public BaseDatabaseException()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#basedatabaseexceptionstring","title":"BaseDatabaseException(String)","text":"<p>The constructor with parameters.</p> <pre><code>public BaseDatabaseException(string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#basedatabaseexceptionstring-string","title":"BaseDatabaseException(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public BaseDatabaseException(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#basedatabaseexceptionstring-exception","title":"BaseDatabaseException(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public BaseDatabaseException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.basedatabaseexception/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/","title":"DatabaseIudActionException","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>This exception is thrown when an IUD action fails. I stands for Insert, U for Update and D for Delete.</p> <pre><code>public class DatabaseIudActionException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Database.Exceptions.DatabaseIudActionException, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;DatabaseIudActionException&gt; \u2192 DatabaseIudActionException Implements ISerializable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#databaseiudactionexception_1","title":"DatabaseIudActionException()","text":"<p>The default constructor.</p> <pre><code>public DatabaseIudActionException()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#databaseiudactionexceptionstring","title":"DatabaseIudActionException(String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseIudActionException(string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#databaseiudactionexceptionstring-string","title":"DatabaseIudActionException(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseIudActionException(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#databaseiudactionexceptionstring-exception","title":"DatabaseIudActionException(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseIudActionException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databaseiudactionexception/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/","title":"DatabaseJsonConvertFailed","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>This exception is thrown when an IUD action fails. I stands for Insert, U for Update and D for Delete.</p> <pre><code>public class DatabaseJsonConvertFailed : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Database.Exceptions.DatabaseJsonConvertFailed, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;DatabaseJsonConvertFailed&gt; \u2192 DatabaseJsonConvertFailed Implements ISerializable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#databasejsonconvertfailed_1","title":"DatabaseJsonConvertFailed()","text":"<p>The default constructor.</p> <pre><code>public DatabaseJsonConvertFailed()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#databasejsonconvertfailedstring","title":"DatabaseJsonConvertFailed(String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseJsonConvertFailed(string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#databasejsonconvertfailedstring-string","title":"DatabaseJsonConvertFailed(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseJsonConvertFailed(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#databasejsonconvertfailedstring-exception","title":"DatabaseJsonConvertFailed(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseJsonConvertFailed(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasejsonconvertfailed/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/","title":"DatabaseMissingItemException","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>/// This exception is thrown when an item is missing from the database.</p> <pre><code>public class DatabaseMissingItemException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Database.Exceptions.DatabaseMissingItemException, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;DatabaseMissingItemException&gt; \u2192 DatabaseMissingItemException Implements ISerializable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#databasemissingitemexception_1","title":"DatabaseMissingItemException()","text":"<p>The default constructor.</p> <pre><code>public DatabaseMissingItemException()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#databasemissingitemexceptionstring","title":"DatabaseMissingItemException(String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseMissingItemException(string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#databasemissingitemexceptionstring-string","title":"DatabaseMissingItemException(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseMissingItemException(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#databasemissingitemexceptionstring-exception","title":"DatabaseMissingItemException(String, Exception)","text":"<p>THe constructor with parameters.</p> <pre><code>public DatabaseMissingItemException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasemissingitemexception/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/","title":"DatabasePaginationFailedException","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>This exception is thrown when the Pagination fails.</p> <pre><code>public class DatabasePaginationFailedException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Database.Exceptions.DatabasePaginationFailedException, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;DatabasePaginationFailedException&gt; \u2192 DatabasePaginationFailedException Implements ISerializable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#databasepaginationfailedexception_1","title":"DatabasePaginationFailedException()","text":"<p>The default constructor.</p> <pre><code>public DatabasePaginationFailedException()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#databasepaginationfailedexceptionstring","title":"DatabasePaginationFailedException(String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabasePaginationFailedException(string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#databasepaginationfailedexceptionstring-string","title":"DatabasePaginationFailedException(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabasePaginationFailedException(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#databasepaginationfailedexceptionstring-exception","title":"DatabasePaginationFailedException(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabasePaginationFailedException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.databasepaginationfailedexception/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/","title":"GeneralDatabaseException","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>This exception is thrown when a general database exception occurs.</p> <pre><code>public class GeneralDatabaseException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Database.Exceptions.GeneralDatabaseException, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;GeneralDatabaseException&gt; \u2192 GeneralDatabaseException Implements ISerializable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#generaldatabaseexception_1","title":"GeneralDatabaseException()","text":"<p>This exception is thrown when a general database exception occurs.</p> <pre><code>public GeneralDatabaseException()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#generaldatabaseexceptionstring","title":"GeneralDatabaseException(String)","text":"<p>The constructor with parameters.</p> <pre><code>public GeneralDatabaseException(string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#generaldatabaseexceptionstring-string","title":"GeneralDatabaseException(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public GeneralDatabaseException(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#generaldatabaseexceptionstring-exception","title":"GeneralDatabaseException(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public GeneralDatabaseException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.generaldatabaseexception/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/","title":"TableHasNoPrimaryKeyException","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>This exception is thrown when a table has no primary key.</p> <pre><code>public class TableHasNoPrimaryKeyException : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Database.Exceptions.TableHasNoPrimaryKeyException, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;TableHasNoPrimaryKeyException&gt; \u2192 TableHasNoPrimaryKeyException Implements ISerializable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#tablehasnoprimarykeyexception_1","title":"TableHasNoPrimaryKeyException()","text":"<p>The default constructor.</p> <pre><code>public TableHasNoPrimaryKeyException()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#tablehasnoprimarykeyexceptionstring","title":"TableHasNoPrimaryKeyException(String)","text":"<p>The constructor with parameters.</p> <pre><code>public TableHasNoPrimaryKeyException(string message)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#tablehasnoprimarykeyexceptionstring-exception","title":"TableHasNoPrimaryKeyException(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public TableHasNoPrimaryKeyException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.exceptions.tablehasnoprimarykeyexception/#parameters_1","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.daohelper/","title":"DaoHelper","text":"<p>Namespace: SlottyMedia.Database.Helper</p> <p>This class provides helper methods for DAOs.</p> <pre><code>public class DaoHelper\n</code></pre> <p>Inheritance Object \u2192 DaoHelper</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.daohelper/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.daohelper/#daohelper_1","title":"DaoHelper()","text":"<pre><code>public DaoHelper()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.daohelper/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.daohelper/#getprimarykeyfieldt","title":"GetPrimaryKeyField&lt;T&gt;()","text":"<p>This method returns the name of the primary key field of a DAO.</p> <pre><code>public string GetPrimaryKeyField&lt;T&gt;()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.daohelper/#type-parameters","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.daohelper/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.databaserepositroyhelper/","title":"DatabaseRepositroyHelper","text":"<p>Namespace: SlottyMedia.Database.Helper</p> <p>This class provides helper methods for database repositories.</p> <pre><code>public class DatabaseRepositroyHelper\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepositroyHelper</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.databaserepositroyhelper/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.databaserepositroyhelper/#databaserepositroyhelper_1","title":"DatabaseRepositroyHelper()","text":"<pre><code>public DatabaseRepositroyHelper()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.databaserepositroyhelper/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.databaserepositroyhelper/#handleexceptionexception-string","title":"HandleException(Exception, String)","text":"<p>This method handles exceptions that occur during database operations.</p> <pre><code>internal void HandleException(Exception ex, string operation)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.databaserepositroyhelper/#parameters","title":"Parameters","text":"<p><code>ex</code> Exception</p> <p><code>operation</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.helper.databaserepositroyhelper/#exceptions","title":"Exceptions","text":"<p>GeneralDatabaseException</p> <p>DatabaseMissingItemException</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/","title":"IDatabaseActions","text":"<p>Namespace: SlottyMedia.Database</p> <p>Interface for database actions. Provides methods to interact with the database.</p> <pre><code>public interface IDatabaseActions\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#inserttt","title":"Insert&lt;T&gt;(T)","text":"<p>Inserts an item into the database.</p> <pre><code>Task&lt;T&gt; Insert&lt;T&gt;(T item)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters","title":"Type Parameters","text":"<p><code>T</code> The model class of the item.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters","title":"Parameters","text":"<p><code>item</code> T The item to insert into the database.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns","title":"Returns","text":"<p>Task&lt;T&gt; Returns the inserted item.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#updatett","title":"Update&lt;T&gt;(T)","text":"<p>Updates an item in the database.</p> <pre><code>Task&lt;T&gt; Update&lt;T&gt;(T item)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_1","title":"Type Parameters","text":"<p><code>T</code> The model class of the item.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_1","title":"Parameters","text":"<p><code>item</code> T The item to update in the database.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_1","title":"Returns","text":"<p>Task&lt;T&gt; Returns the updated item.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_1","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#deletett","title":"Delete&lt;T&gt;(T)","text":"<p>Deletes an item from the database.</p> <pre><code>Task&lt;bool&gt; Delete&lt;T&gt;(T item)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_2","title":"Type Parameters","text":"<p><code>T</code> The type of the item object.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_2","title":"Parameters","text":"<p><code>item</code> T The item to delete.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_2","title":"Returns","text":"<p>Task&lt;Boolean&gt; Returns true if the operation was successful.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_2","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#getentitybyfieldtstring-string","title":"GetEntityByField&lt;T&gt;(String, String)","text":"<p>Returns an entity from the database based on the given field and value.</p> <pre><code>Task&lt;T&gt; GetEntityByField&lt;T&gt;(string field, string value)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_3","title":"Type Parameters","text":"<p><code>T</code> The type of the item object.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_3","title":"Parameters","text":"<p><code>field</code> String The field to search.</p> <p><code>value</code> String The value to search for.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_3","title":"Returns","text":"<p>Task&lt;T&gt; Returns the entity from the database.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_3","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#getentitiewithselectorbyidtexpressionfunct-object-string-string","title":"GetEntitieWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt;, String, String)","text":"<p>Returns an entity with a selector from the database based on the given field and value.</p> <pre><code>Task&lt;T&gt; GetEntitieWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt; selector, string field, string value)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_4","title":"Type Parameters","text":"<p><code>T</code> The type of the item object.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_4","title":"Parameters","text":"<p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt; The selector expression to use.</p> <p><code>field</code> String The field to search.</p> <p><code>value</code> String The value to search for.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_4","title":"Returns","text":"<p>Task&lt;T&gt; Returns the entity from the database.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_4","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#getentitieswithselectorbyidtexpressionfunct-object-string-string-int32-int32-valuetuple3","title":"GetEntitiesWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt;, String, String, Int32, Int32, ValueTuple`3[])","text":"<p>Returns a list of entities with a selector from the database based on the given field and value.</p> <pre><code>Task&lt;List&lt;T&gt;&gt; GetEntitiesWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt; selector, string field, string value, int max, int min, ValueTuple`3[] orderByFields)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_5","title":"Type Parameters","text":"<p><code>T</code> The type of the item object.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_5","title":"Parameters","text":"<p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt; The selector expression to use.</p> <p><code>field</code> String The field to search.</p> <p><code>value</code> String The value to search for.</p> <p><code>max</code> Int32 The maximum number of items to retrieve.</p> <p><code>min</code> Int32 The minimum number of items to retrieve</p> <p><code>orderByFields</code> ValueTuple`3[] The fields to order by.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_5","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt; Returns a list of entities from the database.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_5","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#getentitieswithselectorbyidtexpressionfunct-object-listvaluetuplestring-operator-string-int32-int32-valuetuple3","title":"GetEntitiesWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt;, List&lt;ValueTuple&lt;String, Operator, String&gt;&gt;, Int32, Int32, ValueTuple`3[])","text":"<p>Returns a list of entities with a selector from the database based on the given search criteria.</p> <pre><code>Task&lt;List&lt;T&gt;&gt; GetEntitiesWithSelectorById&lt;T&gt;(Expression&lt;Func&lt;T, Object[]&gt;&gt; selector, List&lt;ValueTuple&lt;string, Operator, string&gt;&gt; search, int max, int min, ValueTuple`3[] orderByFields)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_6","title":"Type Parameters","text":"<p><code>T</code> The type of the item object.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_6","title":"Parameters","text":"<p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt; The selector expression to use.</p> <p><code>search</code> List&lt;ValueTuple&lt;String, Operator, String&gt;&gt; The search criteria.</p> <p><code>max</code> Int32 The maximum number of items to retrieve.</p> <p><code>min</code> Int32 The minimum number of items to retrieve</p> <p><code>orderByFields</code> ValueTuple`3[] The fields to order by.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_6","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt; Returns a list of entities from the database.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_6","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#getentitiest","title":"GetEntities&lt;T&gt;()","text":"<p>Returns a list of all entities from the database.</p> <pre><code>Task&lt;List&lt;T&gt;&gt; GetEntities&lt;T&gt;()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_7","title":"Type Parameters","text":"<p><code>T</code> The type of the item object.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_7","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt; Returns a list of entities from the database.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_7","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#checkifentityexistststring-string","title":"CheckIfEntityExists&lt;T&gt;(String, String)","text":"<p>Checks if an entity exists in the database based on the given field and value.</p> <pre><code>Task&lt;bool&gt; CheckIfEntityExists&lt;T&gt;(string field, string value)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_8","title":"Type Parameters","text":"<p><code>T</code> The type of the item object.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_7","title":"Parameters","text":"<p><code>field</code> String The field to search.</p> <p><code>value</code> String The value to search for.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_8","title":"Returns","text":"<p>Task&lt;Boolean&gt; Returns true if the entity exists.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_8","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#getcountbyfieldtstring-string","title":"GetCountByField&lt;T&gt;(String, String)","text":"<p>Retrieves the count of entities from the database by a specific field and value.</p> <pre><code>Task&lt;int&gt; GetCountByField&lt;T&gt;(string field, string value)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#type-parameters_9","title":"Type Parameters","text":"<p><code>T</code> The type of the entities to count.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_8","title":"Parameters","text":"<p><code>field</code> String The field to filter by.</p> <p><code>value</code> String The value to filter by.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_9","title":"Returns","text":"<p>Task&lt;Int32&gt; The count of entities.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_9","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#getcountforuserforumsstring","title":"GetCountForUserForums(String)","text":"<p>This method retrieves the count of Forums for a specific user.</p> <pre><code>Task&lt;int&gt; GetCountForUserForums(string userId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_9","title":"Parameters","text":"<p><code>userId</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_10","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_10","title":"Exceptions","text":"<p>GeneralDatabaseException</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#gettotalforumcountstring","title":"GetTotalForumCount(String)","text":"<p>Retrieves the total count of forums for a specific forum ID.</p> <pre><code>Task&lt;int&gt; GetTotalForumCount(string forumId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#parameters_10","title":"Parameters","text":"<p><code>forumId</code> String The ID of the forum to count.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_11","title":"Returns","text":"<p>Task&lt;Int32&gt; A task that represents the asynchronous operation. The task result contains the total count of forums.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_11","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#gettopforums","title":"GetTopForums()","text":"<p>Retrieves a list of top forums.</p> <pre><code>Task&lt;List&lt;TopForumDao&gt;&gt; GetTopForums()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#returns_12","title":"Returns","text":"<p>Task&lt;List&lt;TopForumDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of TopForumDao objects.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaseactions/#exceptions_12","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when a network error, argument null, invalid operation, timeout, task  cancellation, or unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/","title":"IDatabaseRepository&lt;T&gt;","text":"<p>Namespace: SlottyMedia.Database</p> <p>This interface defines the contract for a generic database repository.</p> <pre><code>public interface IDatabaseRepository&lt;T&gt;\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code> The type of the entity that the repository will manage.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#getelementbyidguid","title":"GetElementById(Guid)","text":"<p>Retrieves an element by its unique identifier.</p> <pre><code>Task&lt;T&gt; GetElementById(Guid entityId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#parameters","title":"Parameters","text":"<p><code>entityId</code> Guid The unique identifier of the entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#returns","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains the entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>TableHasNoPrimaryKeyException Thrown when the table has no primary key.</p> <p>Exception Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#getallelements","title":"GetAllElements()","text":"<p>Retrieves all elements.</p> <pre><code>Task&lt;List&lt;T&gt;&gt; GetAllElements()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#returns_1","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt; A task that represents the asynchronous operation. The task result contains a collection of all entities.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#exceptions_1","title":"Exceptions","text":"<p>Exception Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#addelementt","title":"AddElement(T)","text":"<p>Creates a new element.</p> <pre><code>Task&lt;T&gt; AddElement(T element)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#parameters_1","title":"Parameters","text":"<p><code>element</code> T The entity to create.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#returns_2","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains the created entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#exceptions_2","title":"Exceptions","text":"<p>DatabaseIudActionException Thrown when an error occurs while inserting the entity.</p> <p>Exception Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#updateelementt","title":"UpdateElement(T)","text":"<p>Updates an existing element.</p> <pre><code>Task UpdateElement(T element)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#parameters_2","title":"Parameters","text":"<p><code>element</code> T The entity to update.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#returns_3","title":"Returns","text":"<p>Task A task that represents the asynchronous operation. The task result contains the updated entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#exceptions_3","title":"Exceptions","text":"<p>DatabaseIudActionException Thrown when an error occurs while updating the entity.</p> <p>Exception Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#deleteelementt","title":"DeleteElement(T)","text":"<p>Deletes an element by its object.</p> <pre><code>Task DeleteElement(T entity)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#parameters_3","title":"Parameters","text":"<p><code>entity</code> T The entity to delete.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#returns_4","title":"Returns","text":"<p>Task A task that represents the asynchronous operation.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#exceptions_4","title":"Exceptions","text":"<p>DatabaseIudActionException Thrown when an error occurs while deleting the entity.</p> <p>Exception Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#getelementbyfieldstring-string","title":"GetElementByField(String, String)","text":"<p>Retrieves an element by a specific field.</p> <pre><code>Task&lt;T&gt; GetElementByField(string fieldName, string fieldValue)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#parameters_4","title":"Parameters","text":"<p><code>fieldName</code> String The name of the field.</p> <p><code>fieldValue</code> String The value of the field.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#returns_5","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains the entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#getelementbyidguid-expressionfunct-object","title":"GetElementById(Guid, Expression&lt;Func&lt;T, Object[]&gt;&gt;)","text":"<p>Retrieves an element by its unique identifier with a specific selector.</p> <pre><code>Task&lt;T&gt; GetElementById(Guid entityId, Expression&lt;Func&lt;T, Object[]&gt;&gt; selector)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#parameters_5","title":"Parameters","text":"<p><code>entityId</code> Guid The unique identifier of the entity.</p> <p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt; The selector expression.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#returns_6","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains the entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#executequeryipostgresttablet","title":"ExecuteQuery(IPostgrestTable&lt;T&gt;)","text":"<p>Executes a query on the specified table.</p> <pre><code>Task&lt;List&lt;T&gt;&gt; ExecuteQuery(IPostgrestTable&lt;T&gt; query)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#parameters_6","title":"Parameters","text":"<p><code>query</code> IPostgrestTable&lt;T&gt; The query to execute.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.idatabaserepository-1/#returns_7","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of entities.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.initializesupabaseclient/","title":"InitializeSupabaseClient","text":"<p>Namespace: SlottyMedia.Database</p> <p>This Class is used to Initialize the Supabase Client</p> <pre><code>public static class InitializeSupabaseClient\n</code></pre> <p>Inheritance Object \u2192 InitializeSupabaseClient</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.initializesupabaseclient/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.initializesupabaseclient/#getsupabaseclient","title":"GetSupabaseClient()","text":"<p>This class uses the Environment Variables to Initialize the Supabase Client</p> <pre><code>public static Client GetSupabaseClient()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.initializesupabaseclient/#returns","title":"Returns","text":"<p>Client</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.initializesupabaseclient/#exceptions","title":"Exceptions","text":"<p>Exception When the Supabase EnvironemtVaraibles are not set, an Exception will be thrown</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.iuserrepository/","title":"IUserRepository","text":"<p>Namespace: SlottyMedia.Database</p> <pre><code>public interface IUserRepository : IDatabaseRepository`1\n</code></pre> <p>Implements IDatabaseRepository&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/","title":"IPage&lt;T&gt;","text":"<p>Namespace: SlottyMedia.Database.Pagination</p> <p>This class represents a paginated list.</p> <pre><code>public interface IPage&lt;T&gt; : , System.Collections.IEnumerable\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code> The type of the page's elements</p> <p>Implements IEnumerable&lt;T&gt;, IEnumerable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#pagenumber","title":"PageNumber","text":"<p>The number of this page. This number is always between  <code>0</code> (inclusive) and IPage&lt;T&gt;.TotalPages (exclusive).  This number is always <code>0</code> when no pages are available.</p> <pre><code>public abstract int PageNumber { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#property-value","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#pagesize","title":"PageSize","text":"<p>The size of each page.</p> <pre><code>public abstract int PageSize { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#property-value_1","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#totalpages","title":"TotalPages","text":"<p>The total number of pages. This number is at least <code>0</code>.</p> <pre><code>public abstract int TotalPages { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#property-value_2","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#hasnext","title":"HasNext","text":"<p>Whether there is a page that comes after this page.</p> <pre><code>public bool HasNext { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#property-value_3","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#hasprevious","title":"HasPrevious","text":"<p>Whether there is a page that comes before this page.</p> <pre><code>public bool HasPrevious { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#property-value_4","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#content","title":"Content","text":"<p>This page's elements as a list.</p> <pre><code>public abstract List&lt;T&gt; Content { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#property-value_5","title":"Property Value","text":"<p>List&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#maptmappedfunct-tmapped","title":"Map&lt;TMapped&gt;(Func&lt;T, TMapped&gt;)","text":"<p>Maps the content of this page using the supplied function.</p> <pre><code>IPage&lt;TMapped&gt; Map&lt;TMapped&gt;(Func&lt;T, TMapped&gt; function)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#type-parameters_1","title":"Type Parameters","text":"<p><code>TMapped</code> The type of the resulting page's contents</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#parameters","title":"Parameters","text":"<p><code>function</code> Func&lt;T, TMapped&gt; The function that maps all contents of this page</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#returns","title":"Returns","text":"<p>IPage&lt;TMapped&gt; The mapped page</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#fetchint32","title":"Fetch(Int32)","text":"<p>Fetches a matching page with the specified page number.</p> <pre><code>Task&lt;IPage&lt;T&gt;&gt; Fetch(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#parameters_1","title":"Parameters","text":"<p><code>pageNumber</code> Int32 The number of the page to fetch</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#returns_1","title":"Returns","text":"<p>Task&lt;IPage&lt;T&gt;&gt; The requested page</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#fetchnext","title":"FetchNext()","text":"<p>Fetches the next page. Returns this page instead if no such page exists.  Consider checking IPage&lt;T&gt;.HasNext before invoking this method.</p> <pre><code>Task&lt;IPage&lt;T&gt;&gt; FetchNext()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#returns_2","title":"Returns","text":"<p>Task&lt;IPage&lt;T&gt;&gt; The next page</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#fetchprevious","title":"FetchPrevious()","text":"<p>Fetches the previous page. Returns this page instead if no such page exists.  Consider checking IPage&lt;T&gt;.HasPrevious before invoking this method.</p> <pre><code>Task&lt;IPage&lt;T&gt;&gt; FetchPrevious()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.ipage-1/#returns_3","title":"Returns","text":"<p>Task&lt;IPage&lt;T&gt;&gt; The previous page</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/","title":"PageImpl&lt;T&gt;","text":"<p>Namespace: SlottyMedia.Database.Pagination</p> <pre><code>public class PageImpl&lt;T&gt; : IPage`1, , System.Collections.IEnumerable\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code></p> <p>Inheritance Object \u2192 PageImpl&lt;T&gt; Implements IPage&lt;T&gt;, IEnumerable&lt;T&gt;, IEnumerable</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#content","title":"Content","text":"<pre><code>public List&lt;T&gt; Content { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#property-value","title":"Property Value","text":"<p>List&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#pagenumber","title":"PageNumber","text":"<pre><code>public int PageNumber { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#property-value_1","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#pagesize","title":"PageSize","text":"<pre><code>public int PageSize { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#property-value_2","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#totalpages","title":"TotalPages","text":"<pre><code>public int TotalPages { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#property-value_3","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#pageimpllistt-int32-int32-int32-funcint32-taskipaget","title":"PageImpl(List&lt;T&gt;, Int32, Int32, Int32, Func&lt;Int32, Task&lt;IPage&lt;T&gt;&gt;&gt;)","text":"<p>Creates a page.</p> <pre><code>public PageImpl(List&lt;T&gt; content, int pageNumber, int pageSize, int totalPages, Func&lt;int, Task&lt;IPage&lt;T&gt;&gt;&gt; callback)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#parameters","title":"Parameters","text":"<p><code>content</code> List&lt;T&gt; The page's content</p> <p><code>pageNumber</code> Int32 The number of this page</p> <p><code>pageSize</code> Int32 The size of each page</p> <p><code>totalPages</code> Int32 The number of total pages</p> <p><code>callback</code> Func&lt;Int32, Task&lt;IPage&lt;T&gt;&gt;&gt; A calback that is used to fetch a page with a specific number</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#maptmappedfunct-tmapped","title":"Map&lt;TMapped&gt;(Func&lt;T, TMapped&gt;)","text":"<pre><code>public IPage&lt;TMapped&gt; Map&lt;TMapped&gt;(Func&lt;T, TMapped&gt; function)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#type-parameters_1","title":"Type Parameters","text":"<p><code>TMapped</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#parameters_1","title":"Parameters","text":"<p><code>function</code> Func&lt;T, TMapped&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#returns","title":"Returns","text":"<p>IPage&lt;TMapped&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#fetchint32","title":"Fetch(Int32)","text":"<pre><code>public Task&lt;IPage&lt;T&gt;&gt; Fetch(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#parameters_2","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#returns_1","title":"Returns","text":"<p>Task&lt;IPage&lt;T&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#getenumerator","title":"GetEnumerator()","text":"<pre><code>public IEnumerator&lt;T&gt; GetEnumerator()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#returns_2","title":"Returns","text":"<p>IEnumerator&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#empty","title":"Empty()","text":"<p>Builds an empty page with no content. Throws an InvalidOperationException when  attempting to fetch another page.</p> <pre><code>public static IPage&lt;T&gt; Empty()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pageimpl-1/#returns_3","title":"Returns","text":"<p>IPage&lt;T&gt; The empty page</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/","title":"PageRequest","text":"<p>Namespace: SlottyMedia.Database.Pagination</p> <p>This class represents a request for a IPage&lt;T&gt;. It specifies  the page's size and the current page number. The page is then intended to be  fetched server-side using this object.</p> <pre><code>public class PageRequest\n</code></pre> <p>Inheritance Object \u2192 PageRequest</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#fields","title":"Fields","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#pagenumber","title":"PageNumber","text":"<p>The number of the page to request</p> <pre><code>public int PageNumber;\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#pagesize","title":"PageSize","text":"<p>Each page's size</p> <pre><code>public int PageSize;\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#ofint32-int32","title":"Of(Int32, Int32)","text":"<p>Builds a request consisting of the page's number and size.</p> <pre><code>public static PageRequest Of(int pageNumber, int pageSize)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#parameters","title":"Parameters","text":"<p><code>pageNumber</code> Int32 The page's number</p> <p><code>pageSize</code> Int32 The page's size</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#returns","title":"Returns","text":"<p>PageRequest The corresponding request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#ofsizeint32","title":"OfSize(Int32)","text":"<p>Builds a request consisting of the page's size.</p> <pre><code>public static PageRequest OfSize(int pageSize)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#parameters_1","title":"Parameters","text":"<p><code>pageSize</code> Int32 The page's size</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#returns_1","title":"Returns","text":"<p>PageRequest The corresponding request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#first","title":"First()","text":"<p>Build a request equivalent to the first page.</p> <pre><code>public PageRequest First()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#returns_2","title":"Returns","text":"<p>PageRequest The corresponding request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#next","title":"Next()","text":"<p>Build a request equivalent to the next page.</p> <pre><code>public PageRequest Next()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#returns_3","title":"Returns","text":"<p>PageRequest The corresponding request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#previous","title":"Previous()","text":"<p>Build a request equivalent to the previous page.  Returns this object instead if there is no previous page.</p> <pre><code>public PageRequest Previous()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.pagination.pagerequest/#returns_4","title":"Returns","text":"<p>PageRequest The corresponding request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/","title":"CommentRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.CommentRepo</p> <p>Repository class for managing comments in the database.</p> <pre><code>public class CommentRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.CommentDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.CommentDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], ICommentRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;CommentDao&gt; \u2192 CommentRepository Implements IDatabaseRepository&lt;CommentDao&gt;, ICommentRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#commentrepositoryclient-daohelper-databaserepositroyhelper","title":"CommentRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the CommentRepository.</p> <pre><code>public CommentRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#countcommentsinpostguid","title":"CountCommentsInPost(Guid)","text":"<pre><code>public Task&lt;int&gt; CountCommentsInPost(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#returns","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#getcommentsinpostguid-pagerequest","title":"GetCommentsInPost(Guid, PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;CommentDao&gt;&gt; GetCommentsInPost(Guid postId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#parameters_2","title":"Parameters","text":"<p><code>postId</code> Guid</p> <p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.commentrepository/#returns_1","title":"Returns","text":"<p>Task&lt;IPage&lt;CommentDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.icommentrepository/","title":"ICommentRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.CommentRepo</p> <p>Interface for the Comment Repository.</p> <pre><code>public interface ICommentRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.CommentDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;CommentDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.icommentrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.icommentrepository/#countcommentsinpostguid","title":"CountCommentsInPost(Guid)","text":"<p>Counts the total number of comments in the given post.</p> <pre><code>Task&lt;int&gt; CountCommentsInPost(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.icommentrepository/#parameters","title":"Parameters","text":"<p><code>postId</code> Guid The post to query</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.icommentrepository/#returns","title":"Returns","text":"<p>Task&lt;Int32&gt; The total number of comments</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.icommentrepository/#getcommentsinpostguid-pagerequest","title":"GetCommentsInPost(Guid, PageRequest)","text":"<p>Fetches all comments in the given post. Utilizes pagination in order to limit  the total number of queried posts: Only posts on the given page will be fetched.</p> <pre><code>Task&lt;IPage&lt;CommentDao&gt;&gt; GetCommentsInPost(Guid postId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.icommentrepository/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid The post whose comments should be fetched</p> <p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.commentrepo.icommentrepository/#returns_1","title":"Returns","text":"<p>Task&lt;IPage&lt;CommentDao&gt;&gt; A list containing the queried posts</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.daohelper/","title":"DaoHelper","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>This class provides helper methods for DAOs.</p> <pre><code>public class DaoHelper\n</code></pre> <p>Inheritance Object \u2192 DaoHelper</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.daohelper/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.daohelper/#daohelper_1","title":"DaoHelper()","text":"<pre><code>public DaoHelper()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.daohelper/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.daohelper/#getprimarykeyfieldt","title":"GetPrimaryKeyField&lt;T&gt;()","text":"<p>This method returns the name of the primary key field of a DAO.</p> <pre><code>public string GetPrimaryKeyField&lt;T&gt;()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.daohelper/#type-parameters","title":"Type Parameters","text":"<p><code>T</code></p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.daohelper/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/","title":"DatabaseRepository&lt;T&gt;","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>This interface provides the basic CRUD operations for a database repository.</p> <pre><code>public abstract class DatabaseRepository&lt;T&gt; : IDatabaseRepository`1\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code></p> <p>Inheritance Object \u2192 DatabaseRepository&lt;T&gt; Implements IDatabaseRepository&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#getelementbyidguid","title":"GetElementById(Guid)","text":"<pre><code>public Task&lt;T&gt; GetElementById(Guid entityId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters","title":"Parameters","text":"<p><code>entityId</code> Guid</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns","title":"Returns","text":"<p>Task&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#getelementbyidguid-expressionfunct-object","title":"GetElementById(Guid, Expression&lt;Func&lt;T, Object[]&gt;&gt;)","text":"<pre><code>public Task&lt;T&gt; GetElementById(Guid entityId, Expression&lt;Func&lt;T, Object[]&gt;&gt; selector)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_1","title":"Parameters","text":"<p><code>entityId</code> Guid</p> <p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_1","title":"Returns","text":"<p>Task&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#getelementbyfieldstring-string","title":"GetElementByField(String, String)","text":"<pre><code>public Task&lt;T&gt; GetElementByField(string fieldName, string fieldValue)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_2","title":"Parameters","text":"<p><code>fieldName</code> String</p> <p><code>fieldValue</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_2","title":"Returns","text":"<p>Task&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#getallelements","title":"GetAllElements()","text":"<pre><code>public Task&lt;List&lt;T&gt;&gt; GetAllElements()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_3","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#getallelementspagerequest","title":"GetAllElements(PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;T&gt;&gt; GetAllElements(PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_3","title":"Parameters","text":"<p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_4","title":"Returns","text":"<p>Task&lt;IPage&lt;T&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#addelementt","title":"AddElement(T)","text":"<pre><code>public Task&lt;T&gt; AddElement(T entity)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_4","title":"Parameters","text":"<p><code>entity</code> T</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_5","title":"Returns","text":"<p>Task&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#updateelementt","title":"UpdateElement(T)","text":"<pre><code>public Task UpdateElement(T entity)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_5","title":"Parameters","text":"<p><code>entity</code> T</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_6","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#deleteelementt","title":"DeleteElement(T)","text":"<pre><code>public Task DeleteElement(T entity)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_6","title":"Parameters","text":"<p><code>entity</code> T</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_7","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#executequeryipostgresttablet","title":"ExecuteQuery(IPostgrestTable&lt;T&gt;)","text":"<p>Executes a query on the specified table.</p> <pre><code>protected Task&lt;List&lt;T&gt;&gt; ExecuteQuery(IPostgrestTable&lt;T&gt; query)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_7","title":"Parameters","text":"<p><code>query</code> IPostgrestTable&lt;T&gt; The query to execute.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_8","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of entities.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#exceptions","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#executesinglequeryipostgresttablet","title":"ExecuteSingleQuery(IPostgrestTable&lt;T&gt;)","text":"<p>Executes a single query on the specified table.</p> <pre><code>public Task&lt;T&gt; ExecuteSingleQuery(IPostgrestTable&lt;T&gt; query)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_8","title":"Parameters","text":"<p><code>query</code> IPostgrestTable&lt;T&gt; The query to execute.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_9","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains a single entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#exceptions_1","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#executecountqueryipostgresttablet-counttype","title":"ExecuteCountQuery(IPostgrestTable&lt;T&gt;, CountType)","text":"<p>Executes a single query on the specified table.</p> <pre><code>public Task&lt;int&gt; ExecuteCountQuery(IPostgrestTable&lt;T&gt; query, CountType countType)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_9","title":"Parameters","text":"<p><code>query</code> IPostgrestTable&lt;T&gt; The query to execute.</p> <p><code>countType</code> CountType Determines how exact the Count will be</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_10","title":"Returns","text":"<p>Task&lt;Int32&gt; A task that represents the asynchronous operation. The task result contains a single entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#exceptions_2","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#executefunctionstring","title":"ExecuteFunction(String)","text":"<p>Executes a function on the database.</p> <pre><code>protected Task&lt;object&gt; ExecuteFunction(string nameOfFunction)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_10","title":"Parameters","text":"<p><code>nameOfFunction</code> String The name of the function to execute.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_11","title":"Returns","text":"<p>Task&lt;Object&gt; A task that represents the asynchronous operation. The task result contains the result of the function.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#exceptions_3","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the items could not be retrieved from the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#executefunctionstring-dictionarystring-object","title":"ExecuteFunction(String, Dictionary&lt;String, Object&gt;)","text":"<p>Executes a function on the database with parameters.</p> <pre><code>protected Task&lt;object&gt; ExecuteFunction(string nameOfFunction, Dictionary&lt;string, object&gt; parameters)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_11","title":"Parameters","text":"<p><code>nameOfFunction</code> String The name of the function to execute.</p> <p><code>parameters</code> Dictionary&lt;String, Object&gt; The parameters to pass to the function.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_12","title":"Returns","text":"<p>Task&lt;Object&gt; A task that represents the asynchronous operation. The task result contains the result of the function.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#exceptions_4","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the items could not be retrieved from the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#applypaginationfuncipostgresttablet-pagerequest","title":"ApplyPagination(Func&lt;IPostgrestTable&lt;T&gt;&gt;, PageRequest)","text":"<p>This method applies pagination to a query.</p> <pre><code>protected Task&lt;IPage&lt;T&gt;&gt; ApplyPagination(Func&lt;IPostgrestTable&lt;T&gt;&gt; queryBuilder, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#parameters_12","title":"Parameters","text":"<p><code>queryBuilder</code> Func&lt;IPostgrestTable&lt;T&gt;&gt; A function that builds the needed query. This function needs to return a different  object on each invocation, otherwise the pagination will break!</p> <p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#returns_13","title":"Returns","text":"<p>Task&lt;IPage&lt;T&gt;&gt; The IPage&lt;T&gt; that corresponds to the given request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepository-1/#exceptions_5","title":"Exceptions","text":"<p>DatabasePaginationFailedException This exception will be thrown, when an error occurs during the  Process of Applying the Pagination</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepositroyhelper/","title":"DatabaseRepositroyHelper","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>This class provides helper methods for database repositories.</p> <pre><code>public class DatabaseRepositroyHelper\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepositroyHelper</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepositroyhelper/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepositroyhelper/#databaserepositroyhelper_1","title":"DatabaseRepositroyHelper()","text":"<pre><code>public DatabaseRepositroyHelper()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepositroyhelper/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepositroyhelper/#handleexceptionexception-string","title":"HandleException(Exception, String)","text":"<p>This method handles exceptions that occur during database operations.</p> <pre><code>internal void HandleException(Exception ex, string operation)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepositroyhelper/#parameters","title":"Parameters","text":"<p><code>ex</code> Exception</p> <p><code>operation</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.databaserepositroyhelper/#exceptions","title":"Exceptions","text":"<p>GeneralDatabaseException</p> <p>DatabaseMissingItemException</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/","title":"FollowerUserRelationRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.FollowerUserRelatioRepo</p> <p>Repository class for managing follower-user relations in the database.</p> <pre><code>public class FollowerUserRelationRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.FollowerUserRelationDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.FollowerUserRelationDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IFollowerUserRelationRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;FollowerUserRelationDao&gt; \u2192 FollowerUserRelationRepository Implements IDatabaseRepository&lt;FollowerUserRelationDao&gt;, IFollowerUserRelationRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#followeruserrelationrepositoryclient-daohelper-databaserepositroyhelper","title":"FollowerUserRelationRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the FollowerUserRelationRepository.</p> <pre><code>public FollowerUserRelationRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#getcountofuserfriendsguid","title":"GetCountOfUserFriends(Guid)","text":"<pre><code>public Task&lt;int&gt; GetCountOfUserFriends(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#returns","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#getfriendsguid","title":"GetFriends(Guid)","text":"<pre><code>public Task&lt;List&lt;FollowerUserRelationDao&gt;&gt; GetFriends(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#returns_1","title":"Returns","text":"<p>Task&lt;List&lt;FollowerUserRelationDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#checkifuserisfollowedguid-guid","title":"CheckIfUserIsFollowed(Guid, Guid)","text":"<pre><code>public Task&lt;FollowerUserRelationDao&gt; CheckIfUserIsFollowed(Guid userId, Guid followedUserId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>followedUserId</code> Guid</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.followeruserrelationrepository/#returns_2","title":"Returns","text":"<p>Task&lt;FollowerUserRelationDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/","title":"IFollowerUserRelationRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.FollowerUserRelatioRepo</p> <p>Interface for the Follower User Relation Repository.</p> <pre><code>public interface IFollowerUserRelationRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.FollowerUserRelationDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;FollowerUserRelationDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#getcountofuserfriendsguid","title":"GetCountOfUserFriends(Guid)","text":"<p>Gets the count of friends for a specific user.</p> <pre><code>Task&lt;int&gt; GetCountOfUserFriends(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#returns","title":"Returns","text":"<p>Task&lt;Int32&gt; A task that represents the asynchronous operation. The task result contains the count of friends.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#getfriendsguid","title":"GetFriends(Guid)","text":"<p>Gets the list of friends for a specific user.</p> <pre><code>Task&lt;List&lt;FollowerUserRelationDao&gt;&gt; GetFriends(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#returns_1","title":"Returns","text":"<p>Task&lt;List&lt;FollowerUserRelationDao&gt;&gt; A task that represents the asynchronous operation. The task result contains the list of friends.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#exceptions_1","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#checkifuserisfollowedguid-guid","title":"CheckIfUserIsFollowed(Guid, Guid)","text":"<p>Checks if a user is followed by another user.</p> <pre><code>Task&lt;FollowerUserRelationDao&gt; CheckIfUserIsFollowed(Guid userId, Guid followedUserId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p> <p><code>followedUserId</code> Guid The unique identifier of the followed user.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#returns_2","title":"Returns","text":"<p>Task&lt;FollowerUserRelationDao&gt; A task that represents the asynchronous operation. The task result contains the follower user relation.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.followeruserrelatiorepo.ifolloweruserrelationrepository/#exceptions_2","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/","title":"ForumRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.ForumRepo</p> <p>Repository class for managing forums in the database.</p> <pre><code>public class ForumRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.ForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.ForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IForumRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;ForumDao&gt; \u2192 ForumRepository Implements IDatabaseRepository&lt;ForumDao&gt;, IForumRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#forumrepositoryclient-daohelper-databaserepositroyhelper","title":"ForumRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the ForumRepository.</p> <pre><code>public ForumRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#getforumbynamestring","title":"GetForumByName(String)","text":"<pre><code>public Task&lt;ForumDao&gt; GetForumByName(string name)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#parameters_1","title":"Parameters","text":"<p><code>name</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#returns","title":"Returns","text":"<p>Task&lt;ForumDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#existsbynamestring","title":"ExistsByName(String)","text":"<pre><code>public Task&lt;bool&gt; ExistsByName(string forumName)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#parameters_2","title":"Parameters","text":"<p><code>forumName</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.forumrepository/#returns_1","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.iforumrepository/","title":"IForumRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.ForumRepo</p> <p>Interface for the Forum Repository.</p> <pre><code>public interface IForumRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.ForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;ForumDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.iforumrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.iforumrepository/#getforumbynamestring","title":"GetForumByName(String)","text":"<p>Fetches a forum by its name.</p> <pre><code>Task&lt;ForumDao&gt; GetForumByName(string name)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.iforumrepository/#parameters","title":"Parameters","text":"<p><code>name</code> String The forum's name</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.iforumrepository/#returns","title":"Returns","text":"<p>Task&lt;ForumDao&gt; The forum</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.iforumrepository/#existsbynamestring","title":"ExistsByName(String)","text":"<pre><code>Task&lt;bool&gt; ExistsByName(string forumName)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.iforumrepository/#parameters_1","title":"Parameters","text":"<p><code>forumName</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.iforumrepository/#returns_1","title":"Returns","text":"<p>Task&lt;Boolean&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.itopforumrepository/","title":"ITopForumRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.ForumRepo</p> <p>Interface for the Top Forum Repository.</p> <pre><code>public interface ITopForumRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.TopForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;TopForumDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.itopforumrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.itopforumrepository/#determinerecentspaces","title":"DetermineRecentSpaces()","text":"<p>Determines the recent spaces.</p> <pre><code>Task&lt;List&lt;TopForumDao&gt;&gt; DetermineRecentSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.itopforumrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;TopForumDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of recent spaces.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.itopforumrepository/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p> <p>DatabaseJsonConvertFailed Thrown when the Database Result was not able to be converted to a Class Dao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.itopforumrepository/#gettopforums","title":"GetTopForums()","text":"<p>Gets the top forums.</p> <pre><code>Task&lt;List&lt;TopForumDao&gt;&gt; GetTopForums()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.itopforumrepository/#returns_1","title":"Returns","text":"<p>Task&lt;List&lt;TopForumDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of top forums.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.itopforumrepository/#exceptions_1","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p> <p>DatabaseJsonConvertFailed Thrown when the Database Result was not able to be converted to a Class Dao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/","title":"TopForumRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.ForumRepo</p> <p>Repository class for managing top forums in the database.</p> <pre><code>public class TopForumRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.TopForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.TopForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], ITopForumRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;TopForumDao&gt; \u2192 TopForumRepository Implements IDatabaseRepository&lt;TopForumDao&gt;, ITopForumRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/#topforumrepositoryclient-daohelper-databaserepositroyhelper","title":"TopForumRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the TopForumRepository.</p> <pre><code>public TopForumRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/#determinerecentspaces","title":"DetermineRecentSpaces()","text":"<pre><code>public Task&lt;List&lt;TopForumDao&gt;&gt; DetermineRecentSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;TopForumDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/#gettopforums","title":"GetTopForums()","text":"<pre><code>public Task&lt;List&lt;TopForumDao&gt;&gt; GetTopForums()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumrepo.topforumrepository/#returns_1","title":"Returns","text":"<p>Task&lt;List&lt;TopForumDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumsearchrepository/","title":"ForumSearchRepository","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>Repository class for managing forum searches in the database.</p> <pre><code>public class ForumSearchRepository : DatabaseRepository`1, SlottyMedia.Database.IDatabaseRepository`1[[SlottyMedia.Database.Daos.ForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IForumSearchRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;ForumDao&gt; \u2192 ForumSearchRepository Implements IDatabaseRepository&lt;ForumDao&gt;, IForumSearchRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumsearchrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumsearchrepository/#forumsearchrepositoryclient-daohelper-databaserepositroyhelper","title":"ForumSearchRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the ForumSearchRepository.</p> <pre><code>public ForumSearchRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumsearchrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumsearchrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumsearchrepository/#getforumsbytopicstring-int32-int32","title":"GetForumsByTopic(String, Int32, Int32)","text":"<p>Retrieves forums by their topic with pagination.</p> <pre><code>public Task&lt;List&lt;ForumDao&gt;&gt; GetForumsByTopic(string topic, int page, int pageSize)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumsearchrepository/#parameters_1","title":"Parameters","text":"<p><code>topic</code> String The topic to search for.</p> <p><code>page</code> Int32 The page number for pagination.</p> <p><code>pageSize</code> Int32 The number of items per page.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.forumsearchrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;ForumDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of forums.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/","title":"IDatabaseRepository&lt;T&gt;","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>This interface defines the contract for a generic database repository.</p> <pre><code>public interface IDatabaseRepository&lt;T&gt;\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code> The type of the entity that the repository will manage.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#getelementbyidguid","title":"GetElementById(Guid)","text":"<p>Retrieves an element by its unique identifier.</p> <pre><code>Task&lt;T&gt; GetElementById(Guid entityId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#parameters","title":"Parameters","text":"<p><code>entityId</code> Guid The unique identifier of the entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#returns","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains the entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>TableHasNoPrimaryKeyException Thrown when the table has no primary key.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#getallelements","title":"GetAllElements()","text":"<p>Retrieves all elements from the table.</p> <pre><code>Task&lt;List&lt;T&gt;&gt; GetAllElements()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#returns_1","title":"Returns","text":"<p>Task&lt;List&lt;T&gt;&gt; A task that represents the asynchronous operation. The task result contains a collection of all entities.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#exceptions_1","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#getallelementspagerequest","title":"GetAllElements(PageRequest)","text":"<p>Retrieves all elements from the table. Fetches only a specified number of elements  at the specified page.</p> <pre><code>Task&lt;IPage&lt;T&gt;&gt; GetAllElements(PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#parameters_1","title":"Parameters","text":"<p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#returns_2","title":"Returns","text":"<p>Task&lt;IPage&lt;T&gt;&gt; A task that represents the asynchronous operation. The task result contains a collection of all entities.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#exceptions_2","title":"Exceptions","text":"<p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#addelementt","title":"AddElement(T)","text":"<p>Creates a new element.</p> <pre><code>Task&lt;T&gt; AddElement(T element)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#parameters_2","title":"Parameters","text":"<p><code>element</code> T The entity to create.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#returns_3","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains the created entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#exceptions_3","title":"Exceptions","text":"<p>DatabaseIudActionException Thrown when an error occurs while inserting the entity.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#updateelementt","title":"UpdateElement(T)","text":"<p>Updates an existing element.</p> <pre><code>Task UpdateElement(T element)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#parameters_3","title":"Parameters","text":"<p><code>element</code> T The entity to update.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#returns_4","title":"Returns","text":"<p>Task A task that represents the asynchronous operation. The task result contains the updated entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#exceptions_4","title":"Exceptions","text":"<p>DatabaseIudActionException Thrown when an error occurs while updating the entity.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#deleteelementt","title":"DeleteElement(T)","text":"<p>Deletes an element by its object.</p> <pre><code>Task DeleteElement(T entity)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#parameters_4","title":"Parameters","text":"<p><code>entity</code> T The entity to delete.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#returns_5","title":"Returns","text":"<p>Task A task that represents the asynchronous operation.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#exceptions_5","title":"Exceptions","text":"<p>DatabaseIudActionException Thrown when an error occurs while deleting the entity.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#getelementbyfieldstring-string","title":"GetElementByField(String, String)","text":"<p>Retrieves an element by a specific field.</p> <pre><code>Task&lt;T&gt; GetElementByField(string fieldName, string fieldValue)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#parameters_5","title":"Parameters","text":"<p><code>fieldName</code> String The name of the field.</p> <p><code>fieldValue</code> String The value of the field.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#returns_6","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains the entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#exceptions_6","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#getelementbyidguid-expressionfunct-object","title":"GetElementById(Guid, Expression&lt;Func&lt;T, Object[]&gt;&gt;)","text":"<p>Retrieves an element by its unique identifier with a specific selector.</p> <pre><code>Task&lt;T&gt; GetElementById(Guid entityId, Expression&lt;Func&lt;T, Object[]&gt;&gt; selector)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#parameters_6","title":"Parameters","text":"<p><code>entityId</code> Guid The unique identifier of the entity.</p> <p><code>selector</code> Expression&lt;Func&lt;T, Object[]&gt;&gt; The selector expression.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#returns_7","title":"Returns","text":"<p>Task&lt;T&gt; A task that represents the asynchronous operation. The task result contains the entity.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.idatabaserepository-1/#exceptions_7","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iforumsearchrepository/","title":"IForumSearchRepository","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>Interface for the Forum Search Repository.</p> <pre><code>public interface IForumSearchRepository : SlottyMedia.Database.IDatabaseRepository`1[[SlottyMedia.Database.Daos.ForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;ForumDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iforumsearchrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iforumsearchrepository/#getforumsbytopicstring-int32-int32","title":"GetForumsByTopic(String, Int32, Int32)","text":"<p>Gets forums by a specific topic with pagination.</p> <pre><code>Task&lt;List&lt;ForumDao&gt;&gt; GetForumsByTopic(string topic, int page, int pageSize)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iforumsearchrepository/#parameters","title":"Parameters","text":"<p><code>topic</code> String The topic to search for.</p> <p><code>page</code> Int32 The page number.</p> <p><code>pageSize</code> Int32 The size of the page.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iforumsearchrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;ForumDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of forums.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iuserseachrepository/","title":"IUserSeachRepository","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>Interface for the User Search Repository.</p> <pre><code>public interface IUserSeachRepository : SlottyMedia.Database.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iuserseachrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iuserseachrepository/#getusersbyusernamestring-int32-int32","title":"GetUsersByUserName(String, Int32, Int32)","text":"<p>Gets users by their username with pagination.</p> <pre><code>Task&lt;List&lt;UserDao&gt;&gt; GetUsersByUserName(string userName, int page, int pageSize)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iuserseachrepository/#parameters","title":"Parameters","text":"<p><code>userName</code> String The username to search for.</p> <p><code>page</code> Int32 The page number.</p> <p><code>pageSize</code> Int32 The size of the page.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.iuserseachrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;UserDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of users.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/","title":"IPostRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.PostRepo</p> <p>Interface for the Post Repository.</p> <pre><code>public interface IPostRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.PostsDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;PostsDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#getforumcountbyuseridguid","title":"GetForumCountByUserId(Guid)","text":"<p>Gets the count of forums by a specific user.</p> <pre><code>Task&lt;int&gt; GetForumCountByUserId(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#parameters","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#returns","title":"Returns","text":"<p>Task&lt;Int32&gt; A task that represents the asynchronous operation. The task result contains the count of forums.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#getallelementspagerequest","title":"GetAllElements(PageRequest)","text":"<p>Gets all elements with pagination.</p> <pre><code>Task&lt;IPage&lt;PostsDao&gt;&gt; GetAllElements(PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#parameters_1","title":"Parameters","text":"<p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#returns_1","title":"Returns","text":"<p>Task&lt;IPage&lt;PostsDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of elements.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#countallposts","title":"CountAllPosts()","text":"<p>Counts all existing posts.</p> <pre><code>Task&lt;int&gt; CountAllPosts()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#returns_2","title":"Returns","text":"<p>Task&lt;Int32&gt; The total number of existing posts</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#getpostsbyuseridguid-pagerequest","title":"GetPostsByUserId(Guid, PageRequest)","text":"<p>Gets posts by a specific user with pagination.</p> <pre><code>Task&lt;IPage&lt;PostsDao&gt;&gt; GetPostsByUserId(Guid userId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p> <p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#returns_3","title":"Returns","text":"<p>Task&lt;IPage&lt;PostsDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of posts.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#exceptions_1","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#getpostsbyuseridbyforumidguid-guid-pagerequest","title":"GetPostsByUserIdByForumId(Guid, Guid, PageRequest)","text":"<p>Gets posts by a specific user and forum with pagination.</p> <pre><code>Task&lt;IPage&lt;PostsDao&gt;&gt; GetPostsByUserIdByForumId(Guid userId, Guid forumId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p> <p><code>forumId</code> Guid The unique identifier of the forum.</p> <p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#returns_4","title":"Returns","text":"<p>Task&lt;IPage&lt;PostsDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of posts.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#exceptions_2","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#getpostsbyforumidguid-pagerequest","title":"GetPostsByForumId(Guid, PageRequest)","text":"<p>Gets posts by a specific forum with pagination.</p> <pre><code>Task&lt;IPage&lt;PostsDao&gt;&gt; GetPostsByForumId(Guid forumId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#parameters_4","title":"Parameters","text":"<p><code>forumId</code> Guid The unique identifier of the forum.</p> <p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#returns_5","title":"Returns","text":"<p>Task&lt;IPage&lt;PostsDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of posts.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.ipostrepository/#exceptions_3","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/","title":"PostRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.PostRepo</p> <p>Repository class for managing posts in the database.</p> <pre><code>public class PostRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.PostsDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.PostsDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IPostRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;PostsDao&gt; \u2192 PostRepository Implements IDatabaseRepository&lt;PostsDao&gt;, IPostRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#postrepositoryclient-daohelper-databaserepositroyhelper","title":"PostRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the PostRepository.</p> <pre><code>public PostRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#getallelements","title":"GetAllElements()","text":"<p>Fetches all posts and orders them by date created in descending order.</p> <pre><code>public Task&lt;List&lt;PostsDao&gt;&gt; GetAllElements()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;PostsDao&gt;&gt; The posts in a list</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#getallelementspagerequest","title":"GetAllElements(PageRequest)","text":"<p>Fetches all posts and orders them by date created in descending order.  Only fetches posts on the specified page of the specified size.</p> <pre><code>public Task&lt;IPage&lt;PostsDao&gt;&gt; GetAllElements(PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#parameters_1","title":"Parameters","text":"<p><code>pageRequest</code> PageRequest The page request</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#returns_1","title":"Returns","text":"<p>Task&lt;IPage&lt;PostsDao&gt;&gt; The page containing the requested posts</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#getforumcountbyuseridguid","title":"GetForumCountByUserId(Guid)","text":"<pre><code>public Task&lt;int&gt; GetForumCountByUserId(Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#returns_2","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#countallposts","title":"CountAllPosts()","text":"<pre><code>public Task&lt;int&gt; CountAllPosts()\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#returns_3","title":"Returns","text":"<p>Task&lt;Int32&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#getpostsbyuseridguid-pagerequest","title":"GetPostsByUserId(Guid, PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;PostsDao&gt;&gt; GetPostsByUserId(Guid userId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#returns_4","title":"Returns","text":"<p>Task&lt;IPage&lt;PostsDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#getpostsbyuseridbyforumidguid-guid-pagerequest","title":"GetPostsByUserIdByForumId(Guid, Guid, PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;PostsDao&gt;&gt; GetPostsByUserIdByForumId(Guid userId, Guid forumId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#parameters_4","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>forumId</code> Guid</p> <p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#returns_5","title":"Returns","text":"<p>Task&lt;IPage&lt;PostsDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#getpostsbyforumidguid-pagerequest","title":"GetPostsByForumId(Guid, PageRequest)","text":"<pre><code>public Task&lt;IPage&lt;PostsDao&gt;&gt; GetPostsByForumId(Guid forumId, PageRequest pageRequest)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#parameters_5","title":"Parameters","text":"<p><code>forumId</code> Guid</p> <p><code>pageRequest</code> PageRequest</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.postrepo.postrepository/#returns_6","title":"Returns","text":"<p>Task&lt;IPage&lt;PostsDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/","title":"IRoleRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.RoleRepo</p> <p>Interface for Role Repository, extending the IDatabaseRepository for RoleDao.</p> <pre><code>public interface IRoleRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.RoleDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;RoleDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#getroleidbynamestring","title":"GetRoleIdByName(String)","text":"<p>Retrieves the role ID by the role name.</p> <pre><code>Task&lt;Guid&gt; GetRoleIdByName(string roleName)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#parameters","title":"Parameters","text":"<p><code>roleName</code> String The name of the role.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#returns","title":"Returns","text":"<p>Task&lt;Guid&gt; A task that represents the asynchronous operation. The task result contains the role ID.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#updateelementroledao","title":"UpdateElement(RoleDao)","text":"<p>Updates an existing RoleDao element in the repository.</p> <pre><code>Task UpdateElement(RoleDao element)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#parameters_1","title":"Parameters","text":"<p><code>element</code> RoleDao The RoleDao element to update.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#returns_1","title":"Returns","text":"<p>Task A task that represents the asynchronous operation.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#deleteelementroledao","title":"DeleteElement(RoleDao)","text":"<p>Deletes a RoleDao entity from the repository.</p> <pre><code>Task DeleteElement(RoleDao entity)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#parameters_2","title":"Parameters","text":"<p><code>entity</code> RoleDao The RoleDao entity to delete.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.irolerepository/#returns_2","title":"Returns","text":"<p>Task A task that represents the asynchronous operation.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.rolerepository/","title":"RoleRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.RoleRepo</p> <p>This class is used to manage roles in the database.</p> <pre><code>public class RoleRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.RoleDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.RoleDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IRoleRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;RoleDao&gt; \u2192 RoleRepository Implements IDatabaseRepository&lt;RoleDao&gt;, IRoleRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.rolerepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.rolerepository/#rolerepositoryclient-daohelper-databaserepositroyhelper","title":"RoleRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the RoleRepository.</p> <pre><code>public RoleRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.rolerepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.rolerepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.rolerepository/#getroleidbynamestring","title":"GetRoleIdByName(String)","text":"<pre><code>public Task&lt;Guid&gt; GetRoleIdByName(string roleName)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.rolerepository/#parameters_1","title":"Parameters","text":"<p><code>roleName</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.rolerepo.rolerepository/#returns","title":"Returns","text":"<p>Task&lt;Guid&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.forumsearchrepository/","title":"ForumSearchRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.SearchRepo</p> <p>Repository class for managing forum searches in the database.</p> <pre><code>public class ForumSearchRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.ForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.ForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IForumSearchRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;ForumDao&gt; \u2192 ForumSearchRepository Implements IDatabaseRepository&lt;ForumDao&gt;, IForumSearchRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.forumsearchrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.forumsearchrepository/#forumsearchrepositoryclient-daohelper-databaserepositroyhelper","title":"ForumSearchRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the ForumSearchRepository.</p> <pre><code>public ForumSearchRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.forumsearchrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.forumsearchrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.forumsearchrepository/#getforumsbytopicstring","title":"GetForumsByTopic(String)","text":"<pre><code>public Task&lt;List&lt;ForumDao&gt;&gt; GetForumsByTopic(string topic)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.forumsearchrepository/#parameters_1","title":"Parameters","text":"<p><code>topic</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.forumsearchrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;ForumDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iforumsearchrepository/","title":"IForumSearchRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.SearchRepo</p> <p>Interface for the Forum Search Repository.</p> <pre><code>public interface IForumSearchRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.ForumDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;ForumDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iforumsearchrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iforumsearchrepository/#getforumsbytopicstring","title":"GetForumsByTopic(String)","text":"<p>Gets forums by a specific topic with pagination.</p> <pre><code>Task&lt;List&lt;ForumDao&gt;&gt; GetForumsByTopic(string topic)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iforumsearchrepository/#parameters","title":"Parameters","text":"<p><code>topic</code> String The topic to search for.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iforumsearchrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;ForumDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of forums.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iforumsearchrepository/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p> <p>DatabaseJsonConvertFailed Thrown when the Database Result was not able to be converted to a Class Dao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iuserseachrepository/","title":"IUserSeachRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.SearchRepo</p> <p>Interface for the User Search Repository.</p> <pre><code>public interface IUserSeachRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iuserseachrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iuserseachrepository/#getusersbyusernamestring","title":"GetUsersByUserName(String)","text":"<p>Gets users by their username with pagination.</p> <pre><code>Task&lt;List&lt;UserDao&gt;&gt; GetUsersByUserName(string userName)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iuserseachrepository/#parameters","title":"Parameters","text":"<p><code>userName</code> String The username to search for.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iuserseachrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;UserDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of users.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.iuserseachrepository/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p> <p>DatabaseJsonConvertFailed Thrown when the Database Result was not able to be converted to a Class Dao</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.usersearchrepository/","title":"UserSearchRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.SearchRepo</p> <p>Repository class for managing user searches in the database.</p> <pre><code>public class UserSearchRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IUserSeachRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;UserDao&gt; \u2192 UserSearchRepository Implements IDatabaseRepository&lt;UserDao&gt;, IUserSeachRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.usersearchrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.usersearchrepository/#usersearchrepositoryclient-daohelper-databaserepositroyhelper","title":"UserSearchRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the UserSearchRepository.</p> <pre><code>public UserSearchRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.usersearchrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.usersearchrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.usersearchrepository/#getusersbyusernamestring","title":"GetUsersByUserName(String)","text":"<pre><code>public Task&lt;List&lt;UserDao&gt;&gt; GetUsersByUserName(string userName)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.usersearchrepository/#parameters_1","title":"Parameters","text":"<p><code>userName</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.searchrepo.usersearchrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;UserDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/","title":"IUserLikePostRelationRepostitory","text":"<p>Namespace: SlottyMedia.Database.Repository.UserLikePostRelationRepo</p> <p>Interface for the User Like Post Relation Repository.</p> <pre><code>public interface IUserLikePostRelationRepostitory : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserLikePostRelationDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;UserLikePostRelationDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#getlikesforpostguid","title":"GetLikesForPost(Guid)","text":"<p>Gets the likes for a specific post.</p> <pre><code>Task&lt;List&lt;UserLikePostRelationDao&gt;&gt; GetLikesForPost(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#parameters","title":"Parameters","text":"<p><code>postId</code> Guid The unique identifier of the post.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#returns","title":"Returns","text":"<p>Task&lt;List&lt;UserLikePostRelationDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of user like post  relations.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#getlikebyuseridandpostidguid-guid","title":"GetLikeByUserIdAndPostId(Guid, Guid)","text":"<p>Gets the like for a specific post by a specific user.</p> <pre><code>Task&lt;UserLikePostRelationDao&gt; GetLikeByUserIdAndPostId(Guid userId, Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#parameters_1","title":"Parameters","text":"<p><code>userId</code> Guid The unique identifier of the user.</p> <p><code>postId</code> Guid The unique identifier of the post.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#returns_1","title":"Returns","text":"<p>Task&lt;UserLikePostRelationDao&gt; A task that represents the asynchronous operation. The task result contains the user like post relation.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.iuserlikepostrelationrepostitory/#exceptions_1","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/","title":"UserLikePostRelationRepostitory","text":"<p>Namespace: SlottyMedia.Database.Repository.UserLikePostRelationRepo</p> <p>Repository class for managing user like post relations in the database.</p> <pre><code>public class UserLikePostRelationRepostitory : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.UserLikePostRelationDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserLikePostRelationDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IUserLikePostRelationRepostitory\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;UserLikePostRelationDao&gt; \u2192 UserLikePostRelationRepostitory Implements IDatabaseRepository&lt;UserLikePostRelationDao&gt;, IUserLikePostRelationRepostitory</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#userlikepostrelationrepostitoryclient-daohelper-databaserepositroyhelper","title":"UserLikePostRelationRepostitory(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the UserLikePostRelationRepostitory.</p> <pre><code>public UserLikePostRelationRepostitory(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#getlikesforpostguid","title":"GetLikesForPost(Guid)","text":"<pre><code>public Task&lt;List&lt;UserLikePostRelationDao&gt;&gt; GetLikesForPost(Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#returns","title":"Returns","text":"<p>Task&lt;List&lt;UserLikePostRelationDao&gt;&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#getlikebyuseridandpostidguid-guid","title":"GetLikeByUserIdAndPostId(Guid, Guid)","text":"<pre><code>public Task&lt;UserLikePostRelationDao&gt; GetLikeByUserIdAndPostId(Guid userId, Guid postId)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#parameters_2","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>postId</code> Guid</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userlikepostrelationrepo.userlikepostrelationrepostitory/#returns_1","title":"Returns","text":"<p>Task&lt;UserLikePostRelationDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/","title":"IUserRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.UserRepo</p> <p>Interface for the User Repository.</p> <pre><code>public interface IUserRepository : SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]\n</code></pre> <p>Implements IDatabaseRepository&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#getuserbyusernamestring","title":"GetUserByUsername(String)","text":"<p>Gets a user by their username.</p> <pre><code>Task&lt;UserDao&gt; GetUserByUsername(string username)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#parameters","title":"Parameters","text":"<p><code>username</code> String The username of the user.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#returns","title":"Returns","text":"<p>Task&lt;UserDao&gt; A task that represents the asynchronous operation. The task result contains the user.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#exceptions","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#getuserbyemailstring","title":"GetUserByEmail(String)","text":"<p>Gets a user by their email.</p> <pre><code>Task&lt;UserDao&gt; GetUserByEmail(string email)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#parameters_1","title":"Parameters","text":"<p><code>email</code> String The email of the user.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#returns_1","title":"Returns","text":"<p>Task&lt;UserDao&gt; A task that represents the asynchronous operation. The task result contains the user.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.iuserrepository/#exceptions_1","title":"Exceptions","text":"<p>DatabaseMissingItemException Thrown when the entity is not found in the database.</p> <p>GeneralDatabaseException Thrown when an unexpected error occurs.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/","title":"UserRepository","text":"<p>Namespace: SlottyMedia.Database.Repository.UserRepo</p> <p>This class provides methods to interact with the user table.</p> <pre><code>public class UserRepository : SlottyMedia.Database.Repository.DatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.Repository.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IUserRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;UserDao&gt; \u2192 UserRepository Implements IDatabaseRepository&lt;UserDao&gt;, IUserRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#userrepositoryclient-daohelper-databaserepositroyhelper","title":"UserRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the UserRepository.</p> <pre><code>public UserRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client</p> <p><code>daoHelper</code> DaoHelper</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#getuserbyusernamestring","title":"GetUserByUsername(String)","text":"<pre><code>public Task&lt;UserDao&gt; GetUserByUsername(string username)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#parameters_1","title":"Parameters","text":"<p><code>username</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#returns","title":"Returns","text":"<p>Task&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#getuserbyemailstring","title":"GetUserByEmail(String)","text":"<pre><code>public Task&lt;UserDao&gt; GetUserByEmail(string email)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#parameters_2","title":"Parameters","text":"<p><code>email</code> String</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepo.userrepository/#returns_1","title":"Returns","text":"<p>Task&lt;UserDao&gt;</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepository/","title":"UserRepository","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>This class provides methods to interact with the user table.</p> <pre><code>public class UserRepository : DatabaseRepository`1, SlottyMedia.Database.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], SlottyMedia.Database.IUserRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;UserDao&gt; \u2192 UserRepository Implements IDatabaseRepository&lt;UserDao&gt;, IUserRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepository/#userrepositoryclient-daohelper-databaserepositroyhelper","title":"UserRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the UserRepository.</p> <pre><code>public UserRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.userrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client</p> <p><code>daoHelper</code> DaoHelper</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.usersearchrepository/","title":"UserSearchRepository","text":"<p>Namespace: SlottyMedia.Database.Repository</p> <p>Repository class for managing user searches in the database.</p> <pre><code>public class UserSearchRepository : DatabaseRepository`1, SlottyMedia.Database.IDatabaseRepository`1[[SlottyMedia.Database.Daos.UserDao, SlottyMedia.Database, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], IUserSeachRepository\n</code></pre> <p>Inheritance Object \u2192 DatabaseRepository&lt;UserDao&gt; \u2192 UserSearchRepository Implements IDatabaseRepository&lt;UserDao&gt;, IUserSeachRepository</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.usersearchrepository/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.usersearchrepository/#usersearchrepositoryclient-daohelper-databaserepositroyhelper","title":"UserSearchRepository(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>Base constructor for the UserSearchRepository.</p> <pre><code>public UserSearchRepository(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.usersearchrepository/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client instance.</p> <p><code>daoHelper</code> DaoHelper The data access object helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.usersearchrepository/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.usersearchrepository/#getusersbyusernamestring-int32-int32","title":"GetUsersByUserName(String, Int32, Int32)","text":"<p>Retrieves users by their username with pagination.</p> <pre><code>public Task&lt;List&lt;UserDao&gt;&gt; GetUsersByUserName(string userName, int page, int pageSize)\n</code></pre>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.usersearchrepository/#parameters_1","title":"Parameters","text":"<p><code>userName</code> String The username to search for.</p> <p><code>page</code> Int32 The page number for pagination.</p> <p><code>pageSize</code> Int32 The number of items per page.</p>"},{"location":"code/SlottyMedia.Database/slottymedia.database.repository.usersearchrepository/#returns","title":"Returns","text":"<p>Task&lt;List&lt;UserDao&gt;&gt; A task that represents the asynchronous operation. The task result contains a list of users.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/","title":"SlottyMedia.DatabaseSeeding","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/#slottymediadatabaseseeding_1","title":"SlottyMedia.DatabaseSeeding","text":"<p>ImageDownloader</p> <p>Login</p> <p>Rules</p> <p>Seeding</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/#slottymediadatabaseseedingavatar","title":"SlottyMedia.DatabaseSeeding.Avatar","text":"<p>IAvatarGenerator</p> <p>PredefinedAvatarGenerator</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/#slottymediadatabaseseedingexceptions","title":"SlottyMedia.DatabaseSeeding.Exceptions","text":"<p>DatabaseSeedingRepositoryCreationFailed</p> <p>DatabaseSeedingUserDosentContainProfilePic</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/imagedownloader/","title":"ImageDownloader","text":"<p>Namespace:</p> <p>This class is used to download and encode images.</p> <pre><code>public class ImageDownloader\n</code></pre> <p>Inheritance Object \u2192 ImageDownloader</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/imagedownloader/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/imagedownloader/#imagedownloader_1","title":"ImageDownloader()","text":"<pre><code>public ImageDownloader()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/imagedownloader/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/imagedownloader/#downloadandencodeimagestring","title":"DownloadAndEncodeImage(String)","text":"<pre><code>internal static Task&lt;string&gt; DownloadAndEncodeImage(string imageUrl)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/imagedownloader/#parameters","title":"Parameters","text":"<p><code>imageUrl</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/imagedownloader/#returns","title":"Returns","text":"<p>Task&lt;String&gt;</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/","title":"DatabaseSeedingRepositoryCreationFailed","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>This exception is thrown when an IUD action fails. I stands for Insert, U for Update and D for Delete.</p> <pre><code>public class DatabaseSeedingRepositoryCreationFailed : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Database.Exceptions.DatabaseSeedingRepositoryCreationFailed, SlottyMedia.DatabaseSeeding, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;DatabaseSeedingRepositoryCreationFailed&gt; \u2192 DatabaseSeedingRepositoryCreationFailed Implements ISerializable</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#databaseseedingrepositorycreationfailed_1","title":"DatabaseSeedingRepositoryCreationFailed()","text":"<p>The default constructor.</p> <pre><code>public DatabaseSeedingRepositoryCreationFailed()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#databaseseedingrepositorycreationfailedstring","title":"DatabaseSeedingRepositoryCreationFailed(String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingRepositoryCreationFailed(string message)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#databaseseedingrepositorycreationfailedstring-string","title":"DatabaseSeedingRepositoryCreationFailed(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingRepositoryCreationFailed(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#databaseseedingrepositorycreationfailedstring-exception","title":"DatabaseSeedingRepositoryCreationFailed(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingRepositoryCreationFailed(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedingrepositorycreationfailed/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/","title":"DatabaseSeedingUserDosentContainProfilePic","text":"<p>Namespace: SlottyMedia.Database.Exceptions</p> <p>This exception is thrown when an IUD action fails. I stands for Insert, U for Update and D for Delete.</p> <pre><code>public class DatabaseSeedingUserDosentContainProfilePic : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.Database.Exceptions.DatabaseSeedingUserDosentContainProfilePic, SlottyMedia.DatabaseSeeding, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;DatabaseSeedingUserDosentContainProfilePic&gt; \u2192 DatabaseSeedingUserDosentContainProfilePic Implements ISerializable</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#databaseseedinguserdosentcontainprofilepic_1","title":"DatabaseSeedingUserDosentContainProfilePic()","text":"<p>The default constructor.</p> <pre><code>public DatabaseSeedingUserDosentContainProfilePic()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#databaseseedinguserdosentcontainprofilepicstring","title":"DatabaseSeedingUserDosentContainProfilePic(String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingUserDosentContainProfilePic(string message)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#databaseseedinguserdosentcontainprofilepicstring-string","title":"DatabaseSeedingUserDosentContainProfilePic(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingUserDosentContainProfilePic(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#databaseseedinguserdosentcontainprofilepicstring-exception","title":"DatabaseSeedingUserDosentContainProfilePic(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingUserDosentContainProfilePic(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.database.exceptions.databaseseedinguserdosentcontainprofilepic/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.iavatargenerator/","title":"IAvatarGenerator","text":"<p>Namespace: SlottyMedia.DatabaseSeeding.Avatar</p> <pre><code>public interface IAvatarGenerator\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.iavatargenerator/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.iavatargenerator/#randomavatarb64","title":"RandomAvatarB64()","text":"<pre><code>string RandomAvatarB64()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.iavatargenerator/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.predefinedavatargenerator/","title":"PredefinedAvatarGenerator","text":"<p>Namespace: SlottyMedia.DatabaseSeeding.Avatar</p> <pre><code>public class PredefinedAvatarGenerator : IAvatarGenerator\n</code></pre> <p>Inheritance Object \u2192 PredefinedAvatarGenerator Implements IAvatarGenerator</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.predefinedavatargenerator/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.predefinedavatargenerator/#predefinedavatargenerator_1","title":"PredefinedAvatarGenerator()","text":"<pre><code>public PredefinedAvatarGenerator()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.predefinedavatargenerator/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.predefinedavatargenerator/#randomavatarb64","title":"RandomAvatarB64()","text":"<pre><code>public string RandomAvatarB64()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.avatar.predefinedavatargenerator/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/","title":"DatabaseSeedingRepositoryCreationFailed","text":"<p>Namespace: SlottyMedia.DatabaseSeeding.Exceptions</p> <p>This exception is thrown when an IUD action fails. I stands for Insert, U for Update and D for Delete.</p> <pre><code>public class DatabaseSeedingRepositoryCreationFailed : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.DatabaseSeeding.Exceptions.DatabaseSeedingRepositoryCreationFailed, SlottyMedia.DatabaseSeeding, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;DatabaseSeedingRepositoryCreationFailed&gt; \u2192 DatabaseSeedingRepositoryCreationFailed Implements ISerializable</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#databaseseedingrepositorycreationfailed_1","title":"DatabaseSeedingRepositoryCreationFailed()","text":"<p>The default constructor.</p> <pre><code>public DatabaseSeedingRepositoryCreationFailed()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#databaseseedingrepositorycreationfailedstring","title":"DatabaseSeedingRepositoryCreationFailed(String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingRepositoryCreationFailed(string message)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#databaseseedingrepositorycreationfailedstring-string","title":"DatabaseSeedingRepositoryCreationFailed(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingRepositoryCreationFailed(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#databaseseedingrepositorycreationfailedstring-exception","title":"DatabaseSeedingRepositoryCreationFailed(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingRepositoryCreationFailed(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedingrepositorycreationfailed/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/","title":"DatabaseSeedingUserDosentContainProfilePic","text":"<p>Namespace: SlottyMedia.DatabaseSeeding.Exceptions</p> <p>This exception is thrown when an IUD action fails. I stands for Insert, U for Update and D for Delete.</p> <pre><code>public class DatabaseSeedingUserDosentContainProfilePic : SlottyMedia.LoggingProvider.BaseException`1[[SlottyMedia.DatabaseSeeding.Exceptions.DatabaseSeedingUserDosentContainProfilePic, SlottyMedia.DatabaseSeeding, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Runtime.Serialization.ISerializable\n</code></pre> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;DatabaseSeedingUserDosentContainProfilePic&gt; \u2192 DatabaseSeedingUserDosentContainProfilePic Implements ISerializable</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#databaseseedinguserdosentcontainprofilepic_1","title":"DatabaseSeedingUserDosentContainProfilePic()","text":"<p>The default constructor.</p> <pre><code>public DatabaseSeedingUserDosentContainProfilePic()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#databaseseedinguserdosentcontainprofilepicstring","title":"DatabaseSeedingUserDosentContainProfilePic(String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingUserDosentContainProfilePic(string message)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#databaseseedinguserdosentcontainprofilepicstring-string","title":"DatabaseSeedingUserDosentContainProfilePic(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingUserDosentContainProfilePic(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#databaseseedinguserdosentcontainprofilepicstring-exception","title":"DatabaseSeedingUserDosentContainProfilePic(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public DatabaseSeedingUserDosentContainProfilePic(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.exceptions.databaseseedinguserdosentcontainprofilepic/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.imagedownloader/","title":"ImageDownloader","text":"<p>Namespace: SlottyMedia.DatabaseSeeding</p> <p>This class is used to download and encode images.</p> <pre><code>public class ImageDownloader\n</code></pre> <p>Inheritance Object \u2192 ImageDownloader</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.imagedownloader/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.imagedownloader/#imagedownloader_1","title":"ImageDownloader()","text":"<pre><code>public ImageDownloader()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.imagedownloader/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.imagedownloader/#downloadandencodeimagestring","title":"DownloadAndEncodeImage(String)","text":"<p>This method downloads an image from a URL and encodes it to a base64 string.</p> <pre><code>internal static Task&lt;string&gt; DownloadAndEncodeImage(string imageUrl)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.imagedownloader/#parameters","title":"Parameters","text":"<p><code>imageUrl</code> String The URL where the img is placed</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.imagedownloader/#returns","title":"Returns","text":"<p>Task&lt;String&gt;</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/","title":"Login","text":"<p>Namespace: SlottyMedia.DatabaseSeeding</p> <p>Login class to handle user login and logout operations for the seeding process.</p> <pre><code>public class Login\n</code></pre> <p>Inheritance Object \u2192 Login</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#login_1","title":"Login()","text":"<pre><code>public Login()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#loginuserclient","title":"LoginUser(Client)","text":"<p>Login the user with the given client.</p> <pre><code>public Task LoginUser(Client client)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#parameters","title":"Parameters","text":"<p><code>client</code> Client</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#logoutuserclient","title":"LogoutUser(Client)","text":"<p>This method logs out the user.</p> <pre><code>public Task LogoutUser(Client client)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#parameters_1","title":"Parameters","text":"<p><code>client</code> Client</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.login/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/","title":"Rules","text":"<p>Namespace: SlottyMedia.DatabaseSeeding</p> <p>The Rules class contains methods to create Faker objects with predefined rules for generating fake Dao objects.</p> <pre><code>public class Rules\n</code></pre> <p>Inheritance Object \u2192 Rules</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#rules_1","title":"Rules()","text":"<pre><code>public Rules()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#userrules","title":"UserRules()","text":"<p>Creates the rules for generating fake UserDao objects.  - UserId: Randomly generated GUID.  - RoleId: Fixed GUID value.  - UserName: Randomly generated internet username.  - Description: Randomly generated sentence.  - ProfilePic: Randomly generated long value between 1 and 1000.  - CreatedAt: Randomly generated past date.</p> <pre><code>public Faker&lt;UserDao&gt; UserRules()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#returns","title":"Returns","text":"<p>Faker&lt;UserDao&gt; A Faker&lt;\\&gt; object with predefined rules.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#forumruleslistguid","title":"ForumRules(List&lt;Guid&gt;)","text":"<p>Creates the rules for generating fake ForumDao objects.  - ForumId: Randomly generated GUID.  - CreatorUserId: Randomly selected from provided user IDs.  - ForumTopic: Randomly generated sentence.  - CreatedAt: Randomly generated past date.</p> <pre><code>public Faker&lt;ForumDao&gt; ForumRules(List&lt;Guid&gt; userIds)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#parameters","title":"Parameters","text":"<p><code>userIds</code> List&lt;Guid&gt; A list of user IDs to associate with the forums.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#returns_1","title":"Returns","text":"<p>Faker&lt;ForumDao&gt; A Faker&lt;\\&gt; object with predefined rules.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#postruleslistguid-listguid","title":"PostRules(List&lt;Guid&gt;, List&lt;Guid&gt;)","text":"<p>Creates the rules for generating fake PostsDao objects.  - PostId: Randomly generated GUID.  - UserId: Randomly selected from provided user IDs.  - ForumId: Randomly selected from provided forum IDs.  - Headline: Randomly generated sentence.  - Content: Randomly generated paragraphs.  - CreatedAt: Randomly generated past date.</p> <pre><code>public Faker&lt;PostsDao&gt; PostRules(List&lt;Guid&gt; userIds, List&lt;Guid&gt; forumIds)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#parameters_1","title":"Parameters","text":"<p><code>userIds</code> List&lt;Guid&gt; A list of user IDs to associate with the posts.</p> <p><code>forumIds</code> List&lt;Guid&gt; A list of forum IDs to associate with the posts.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#returns_2","title":"Returns","text":"<p>Faker&lt;PostsDao&gt; A Faker&lt;\\&gt; object with predefined rules.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#commentruleslistguid-listguid","title":"CommentRules(List&lt;Guid&gt;, List&lt;Guid&gt;)","text":"<p>Creates the rules for generating fake CommentDao objects.  - CommentId: Randomly generated GUID.  - CreatorUserId: Randomly selected from provided user IDs.  - PostId: Randomly selected from provided post IDs.  - Content: Randomly generated paragraph.  - CreatedAt: Randomly generated past date.</p> <pre><code>public Faker&lt;CommentDao&gt; CommentRules(List&lt;Guid&gt; userIds, List&lt;Guid&gt; postIds)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#parameters_2","title":"Parameters","text":"<p><code>userIds</code> List&lt;Guid&gt; A list of user IDs to associate with the comments.</p> <p><code>postIds</code> List&lt;Guid&gt; A list of post IDs to associate with the comments.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#returns_3","title":"Returns","text":"<p>Faker&lt;CommentDao&gt; A Faker&lt;\\&gt; object with predefined rules.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#followeruserrelationruleslistguid","title":"FollowerUserRelationRules(List&lt;Guid&gt;)","text":"<p>Creates the rules for generating fake FollowerUserRelationDao objects.  - FollowerUserRelationId: Randomly generated GUID.  - FollowerUserId: Randomly selected from provided user IDs, ensuring no duplicate relations.  - FollowedUserId: Randomly selected from provided user IDs, ensuring no duplicate relations.  - CreatedAt: Randomly generated past date.</p> <pre><code>public Faker&lt;FollowerUserRelationDao&gt; FollowerUserRelationRules(List&lt;Guid&gt; userIds)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#parameters_3","title":"Parameters","text":"<p><code>userIds</code> List&lt;Guid&gt; A list of user IDs to associate with the follower relations.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#returns_4","title":"Returns","text":"<p>Faker&lt;FollowerUserRelationDao&gt; A Faker&lt;\\&gt; object with predefined rules.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#exceptions","title":"Exceptions","text":"<p>ArgumentException Thrown when less than two user IDs are provided.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#userlikepostrelationruleslistguid-listguid","title":"UserLikePostRelationRules(List&lt;Guid&gt;, List&lt;Guid&gt;)","text":"<p>Creates the rules for generating fake UserLikePostRelationDao objects.  - UserLikePostRelationId: Randomly generated GUID.  - UserId: Randomly selected from provided user IDs, ensuring no duplicate relations.  - PostId: Randomly selected from provided post IDs, ensuring no duplicate relations.  - CreatedAt: Randomly generated past date.</p> <pre><code>public Faker&lt;UserLikePostRelationDao&gt; UserLikePostRelationRules(List&lt;Guid&gt; userIds, List&lt;Guid&gt; postIds)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#parameters_4","title":"Parameters","text":"<p><code>userIds</code> List&lt;Guid&gt; A list of user IDs to associate with the like relations.</p> <p><code>postIds</code> List&lt;Guid&gt; A list of post IDs to associate with the like relations.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.rules/#returns_5","title":"Returns","text":"<p>Faker&lt;UserLikePostRelationDao&gt; A Faker&lt;\\&gt; object with predefined rules.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.seeding/","title":"Seeding","text":"<p>Namespace: SlottyMedia.DatabaseSeeding</p> <p>This class represents the Seeding.</p> <pre><code>public class Seeding\n</code></pre> <p>Inheritance Object \u2192 Seeding</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.seeding/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.seeding/#seedingclient-daohelper-databaserepositroyhelper","title":"Seeding(Client, DaoHelper, DatabaseRepositroyHelper)","text":"<p>This is the constructor for the Seeding class.</p> <pre><code>public Seeding(Client client, DaoHelper daoHelper, DatabaseRepositroyHelper databaseRepositroyHelper)\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.seeding/#parameters","title":"Parameters","text":"<p><code>client</code> Client The Supabase client.</p> <p><code>daoHelper</code> DaoHelper The DAO helper instance.</p> <p><code>databaseRepositroyHelper</code> DatabaseRepositroyHelper The database repository helper instance.</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.seeding/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.seeding/#seed","title":"Seed()","text":"<p>This method seeds the database with random data.</p> <pre><code>public Task Seed()\n</code></pre>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.seeding/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.DatabaseSeeding/slottymedia.databaseseeding.seeding/#exceptions","title":"Exceptions","text":"<p>T:SlottyMedia.Database.Exceptions.GeneralDatabaseException Thrown when an unexpected error occurs.</p> <p>DatabaseSeedingRepositoryCreationFailed Thrown when repository creation fails.</p> <p>DatabaseSeedingUserDosentContainProfilePic Thrown when a user does not contain a profile pic.</p> <p>T:SlottyMedia.Database.Exceptions.DatabaseIudActionException Thrown when an error occurs while deleting the entity.</p> <p>T:SlottyMedia.Database.Exceptions.DatabaseMissingItemException Thrown when the entity is not found in the database.</p>"},{"location":"code/SlottyMedia.LoggingProvider/","title":"SlottyMedia.LoggingProvider","text":""},{"location":"code/SlottyMedia.LoggingProvider/#slottymedialoggingprovider_1","title":"SlottyMedia.LoggingProvider","text":"<p>BaseException&lt;T&gt;</p> <p>Logging&lt;T&gt;</p> <p>NlogConfiguration</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/","title":"BaseException&lt;T&gt;","text":"<p>Namespace: SlottyMedia.LoggingProvider</p> <p>This exception is the base exception for all exceptions in the application.</p> <pre><code>public class BaseException&lt;T&gt; : System.Exception, System.Runtime.Serialization.ISerializable\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code></p> <p>Inheritance Object \u2192 Exception \u2192 BaseException&lt;T&gt; Implements ISerializable</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#targetsite","title":"TargetSite","text":"<pre><code>public MethodBase TargetSite { get; }\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#property-value","title":"Property Value","text":"<p>MethodBase</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#message","title":"Message","text":"<pre><code>public string Message { get; }\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#property-value_1","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#data","title":"Data","text":"<pre><code>public IDictionary Data { get; }\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#property-value_2","title":"Property Value","text":"<p>IDictionary</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#innerexception","title":"InnerException","text":"<pre><code>public Exception InnerException { get; }\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#property-value_3","title":"Property Value","text":"<p>Exception</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#helplink","title":"HelpLink","text":"<pre><code>public string HelpLink { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#property-value_4","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#source","title":"Source","text":"<pre><code>public string Source { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#property-value_5","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#hresult","title":"HResult","text":"<pre><code>public int HResult { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#property-value_6","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#stacktrace","title":"StackTrace","text":"<pre><code>public string StackTrace { get; }\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#property-value_7","title":"Property Value","text":"<p>String</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#baseexception","title":"BaseException()","text":"<p>The default constructor.</p> <pre><code>public BaseException()\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#baseexceptionstring","title":"BaseException(String)","text":"<p>The constructor with parameters.</p> <pre><code>public BaseException(string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#parameters","title":"Parameters","text":"<p><code>message</code> String</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#baseexceptionstring-string","title":"BaseException(String, String)","text":"<p>The constructor with parameters.</p> <pre><code>public BaseException(string propertyName, string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> String</p> <p><code>message</code> String</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#baseexceptionstring-exception","title":"BaseException(String, Exception)","text":"<p>The constructor with parameters.</p> <pre><code>public BaseException(string message, Exception innerException)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.baseexception-1/#parameters_2","title":"Parameters","text":"<p><code>message</code> String</p> <p><code>innerException</code> Exception</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/","title":"Logging&lt;T&gt;","text":"<p>Namespace: SlottyMedia.LoggingProvider</p> <p>Logging class to handle application logging using NLog.</p> <pre><code>public class Logging&lt;T&gt;\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code></p> <p>Inheritance Object \u2192 Logging&lt;T&gt;</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logging","title":"Logging()","text":"<p>Constructor for the Logging class.</p> <pre><code>public Logging()\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logtracestring","title":"LogTrace(String)","text":"<p>Logs a trace message.</p> <pre><code>public void LogTrace(string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters","title":"Parameters","text":"<p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logdebugstring","title":"LogDebug(String)","text":"<p>Logs a debug message.</p> <pre><code>public void LogDebug(string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_1","title":"Parameters","text":"<p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#loginfostring","title":"LogInfo(String)","text":"<p>Logs an info message.</p> <pre><code>public void LogInfo(string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_2","title":"Parameters","text":"<p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logwarnstring","title":"LogWarn(String)","text":"<p>Logs a warning message.</p> <pre><code>public void LogWarn(string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_3","title":"Parameters","text":"<p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logerrorstring","title":"LogError(String)","text":"<p>Logs an error message.</p> <pre><code>public void LogError(string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_4","title":"Parameters","text":"<p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logfatalstring","title":"LogFatal(String)","text":"<p>Logs a fatal message.</p> <pre><code>public void LogFatal(string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_5","title":"Parameters","text":"<p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logtraceexception-string","title":"LogTrace(Exception, String)","text":"<p>Logs a trace message with an exception.</p> <pre><code>public void LogTrace(Exception ex, string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_6","title":"Parameters","text":"<p><code>ex</code> Exception The exception to log.</p> <p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logdebugexception-string","title":"LogDebug(Exception, String)","text":"<p>Logs a debug message with an exception.</p> <pre><code>public void LogDebug(Exception ex, string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_7","title":"Parameters","text":"<p><code>ex</code> Exception The exception to log.</p> <p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#loginfoexception-string","title":"LogInfo(Exception, String)","text":"<p>Logs an info message with an exception.</p> <pre><code>public void LogInfo(Exception ex, string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_8","title":"Parameters","text":"<p><code>ex</code> Exception The exception to log.</p> <p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logwarnexception-string","title":"LogWarn(Exception, String)","text":"<p>Logs a warning message with an exception.</p> <pre><code>public void LogWarn(Exception ex, string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_9","title":"Parameters","text":"<p><code>ex</code> Exception The exception to log.</p> <p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logerrorexception-string","title":"LogError(Exception, String)","text":"<p>Logs an error message with an exception.</p> <pre><code>public void LogError(Exception ex, string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_10","title":"Parameters","text":"<p><code>ex</code> Exception The exception to log.</p> <p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#logfatalexception-string","title":"LogFatal(Exception, String)","text":"<p>Logs a fatal message with an exception.</p> <pre><code>public void LogFatal(Exception ex, string message)\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.logging-1/#parameters_11","title":"Parameters","text":"<p><code>ex</code> Exception The exception to log.</p> <p><code>message</code> String The message to log.</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.nlogconfiguration/","title":"NlogConfiguration","text":"<p>Namespace: SlottyMedia.LoggingProvider</p> <p>The configuration for NLog.</p> <pre><code>public static class NlogConfiguration\n</code></pre> <p>Inheritance Object \u2192 NlogConfiguration</p>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.nlogconfiguration/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.nlogconfiguration/#createnlogconfig","title":"CreateNlogConfig()","text":"<p>This method creates a new NLog configuration.</p> <pre><code>public static LoggingConfiguration CreateNlogConfig()\n</code></pre>"},{"location":"code/SlottyMedia.LoggingProvider/slottymedia.loggingprovider.nlogconfiguration/#returns","title":"Returns","text":"<p>LoggingConfiguration</p> <p>Remarks:</p> <p>The <code>CreateNlogConfig</code> method generates an NLog configuration for logging:  1. Initialize Configuration: Creates a <code>LoggingConfiguration</code> object.  2. Define Log File Target: Creates a <code>FileTarget</code> named \"logfile\" with daily archiving and a specific layout.  3. Define Console Target: Creates a <code>ColoredConsoleTarget</code> named \"console\" with ANSI output and custom  highlighting rules.  4. Add Console Row Highlighting Rules: Adds custom highlighting rules for different log levels to the console  target.  5. Wrap Targets in Async Wrappers: Wraps the file and console targets in <code>AsyncTargetWrapper</code> for asynchronous  logging.  6. Add Targets to Configuration: Adds the async file and console targets to the logging configuration.  7. Define Logging Rules: Adds rules to log messages to the file and console targets, with a filter for  Microsoft logs.  8. Return Configuration: Returns the configured <code>LoggingConfiguration</code> object.</p>"},{"location":"code/SlottyMedia.Tests/","title":"SlottyMedia.Tests","text":""},{"location":"code/SlottyMedia.Tests/#slottymediatests_1","title":"SlottyMedia.Tests","text":"<p>InitializeSupabaseClientTest</p>"},{"location":"code/SlottyMedia.Tests/#slottymediatestsauth","title":"SlottyMedia.Tests.Auth","text":"<p>AuthServiceTest</p> <p>SignUpServiceTest</p>"},{"location":"code/SlottyMedia.Tests/#slottymediatestsservicetests","title":"SlottyMedia.Tests.ServiceTests","text":"<p>CommentServiceTests</p> <p>ForumServiceTests</p> <p>LikeServiceTests</p> <p>PostServiceTests</p> <p>SearchServiceTests</p> <p>UserServiceTests</p>"},{"location":"code/SlottyMedia.Tests/#slottymediateststestimpl","title":"SlottyMedia.Tests.TestImpl","text":"<p>MockedAvatarGenerator</p> <p>PageTestImpl&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Tests/#slottymediatestsviewmodel","title":"SlottyMedia.Tests.Viewmodel","text":"<p>CommentSubmissionFormVmImplTests</p> <p>HomePageVmImplTests</p> <p>PostPageVmImplTests</p> <p>PostSubmissionFormVmImplTests</p> <p>PostVmImplTests</p> <p>ProfilePageVmImplTests</p> <p>SpacesCardVmImplTests</p> <p>SpacesVmImplTest</p>"},{"location":"code/SlottyMedia.Tests/#slottymediatestsviewmodelauth","title":"SlottyMedia.Tests.Viewmodel.auth","text":"<p>SignInFormVmImplTest</p> <p>SignUpFormVmImplTest</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/","title":"ProfilePageVmImplTests","text":"<p>Namespace:</p> <p>Unit tests for the  class.</p> <pre><code>public class ProfilePageVmImplTests\n</code></pre> <p>Inheritance Object \u2192 ProfilePageVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#profilepagevmimpltests_1","title":"ProfilePageVmImplTests()","text":"<pre><code>public ProfilePageVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#setup","title":"SetUp()","text":"<pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#getuserinfo_shouldreturnuserinformationdto_whenuserexists","title":"GetUserInfo_ShouldReturnUserInformationDto_WhenUserExists()","text":"<pre><code>public Task GetUserInfo_ShouldReturnUserInformationDto_WhenUserExists()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#getuserinfo_shouldreturnnull_whenuserdoesnotexist","title":"GetUserInfo_ShouldReturnNull_WhenUserDoesNotExist()","text":"<pre><code>public Task GetUserInfo_ShouldReturnNull_WhenUserDoesNotExist()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#userfollowrelation_shouldreturntrue_whenuserfollowsanother","title":"UserFollowRelation_ShouldReturnTrue_WhenUserFollowsAnother()","text":"<pre><code>public Task UserFollowRelation_ShouldReturnTrue_WhenUserFollowsAnother()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#userfollowrelation_shouldreturnfalse_whenuserdoesnotfollowanother","title":"UserFollowRelation_ShouldReturnFalse_WhenUserDoesNotFollowAnother()","text":"<pre><code>public Task UserFollowRelation_ShouldReturnFalse_WhenUserDoesNotFollowAnother()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#userfollowrelation_shouldreturnnull_whenuseridsaresame","title":"UserFollowRelation_ShouldReturnNull_WhenUserIdsAreSame()","text":"<pre><code>public Task UserFollowRelation_ShouldReturnNull_WhenUserIdsAreSame()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#followuserbyid_shouldcallfollowuserbyidonuserservice","title":"FollowUserById_ShouldCallFollowUserByIdOnUserService()","text":"<pre><code>public Task FollowUserById_ShouldCallFollowUserByIdOnUserService()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#unfollowuserbyid_shouldcallunfollowuserbyidonuserservice","title":"UnfollowUserById_ShouldCallUnfollowUserByIdOnUserService()","text":"<pre><code>public Task UnfollowUserById_ShouldCallUnfollowUserByIdOnUserService()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#returns_6","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#getpostsbyuserid_shouldreturnlistofpostdtos","title":"GetPostsByUserId_ShouldReturnListOfPostDtos()","text":"<pre><code>public Task GetPostsByUserId_ShouldReturnListOfPostDtos()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/profilepagevmimpltests/#returns_7","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/","title":"AuthServiceTest","text":"<p>Namespace: SlottyMedia.Tests.Auth</p> <p>Tests the non-supabase reliant business logic of AuthService.</p> <pre><code>public class AuthServiceTest\n</code></pre> <p>Inheritance Object \u2192 AuthServiceTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#authservicetest_1","title":"AuthServiceTest()","text":"<pre><code>public AuthServiceTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#onetimesetup","title":"OneTimeSetup()","text":"<p>Sets up the test fixture. Initializes the Supabase client and mocks the cookie service.</p> <pre><code>public void OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#setup","title":"Setup()","text":"<p>Sets up each test. Generates a new UUID for the username and email.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#teardown","title":"TearDown()","text":"<p>Tears down each test. Resets the cookie service mock and clears the session.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#savesessionasync_tokennotprovided","title":"SaveSessionAsync_TokenNotProvided()","text":"<p>Tests that SaveSessionAsync throws a TokenNotProvidedException when the token is not provided.</p> <pre><code>public void SaveSessionAsync_TokenNotProvided()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#savesessionasync","title":"SaveSessionAsync()","text":"<p>Tests that SaveSessionAsync saves the session and sets the cookies correctly.</p> <pre><code>public void SaveSessionAsync()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#restoresessionasync_tokennotprovided","title":"RestoreSessionAsync_TokenNotProvided()","text":"<p>Tests that RestoreSessionAsync throws a TokenNotProvidedException when the token is not provided.</p> <pre><code>public void RestoreSessionAsync_TokenNotProvided()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.authservicetest/#signout_cookiesnotremoved","title":"SignOut_CookiesNotRemoved()","text":"<p>Tests that SignOut does not remove the cookies.</p> <pre><code>public void SignOut_CookiesNotRemoved()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/","title":"SignUpServiceTest","text":"<p>Namespace: SlottyMedia.Tests.Auth</p> <p>Tests the Service used for registering a new user in the database.</p> <pre><code>public class SignUpServiceTest\n</code></pre> <p>Inheritance Object \u2192 SignUpServiceTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#signupservicetest_1","title":"SignUpServiceTest()","text":"<pre><code>public SignUpServiceTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#onetimesetup","title":"OneTimeSetup()","text":"<p>Sets up the test fixture. Initializes the Supabase client and mocks the necessary services.</p> <pre><code>public void OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#setup","title":"Setup()","text":"<p>Sets up each test. Generates a new UUID for the username, email, and password.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#teardown","title":"TearDown()","text":"<p>Tears down each test. Resets the mocks and clears the session.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#signup_useralreadyexists","title":"SignUp_UserAlreadyExists()","text":"<p>Tests that SignUp throws a UsernameAlreadyExistsException when the username already exists.</p> <pre><code>public void SignUp_UserAlreadyExists()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#signup","title":"SignUp()","text":"<p>Tests that SignUp successfully registers a new user and sets the session.</p> <pre><code>public Task SignUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.auth.signupservicetest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/","title":"BaseDatabaseTestClass","text":"<p>Namespace: SlottyMedia.Tests.DatabaseTests</p> <p>This class is the Base Class for all Database Tests</p> <pre><code>public class BaseDatabaseTestClass\n</code></pre> <p>Inheritance Object \u2192 BaseDatabaseTestClass</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#userid","title":"UserId","text":"<p>The UserId of the User</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#databaseactions","title":"DatabaseActions","text":"<p>The DatabaseActions Object</p> <pre><code>public DatabaseActions DatabaseActions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#property-value_1","title":"Property Value","text":"<p>DatabaseActions</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#usertoworkwith","title":"UserToWorkWith","text":"<p>The User to work with</p> <pre><code>public UserDao UserToWorkWith { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#property-value_2","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#basedatabasetestclass_1","title":"BaseDatabaseTestClass()","text":"<pre><code>public BaseDatabaseTestClass()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#basesetup","title":"BaseSetup()","text":"<p>This Method is used to setup the Tests. It logs in the User and sets the UserId Property  if the Login was successful if not it will signup the User and set the UserId Property</p> <pre><code>public Task BaseSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#baseteardown","title":"BaseTearDown()","text":"<p>This Method is used to TearDown the Tests. It logs out the User</p> <pre><code>public Task BaseTearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.basedatabasetestclass/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/","title":"DatabaseActionTests","text":"<p>Namespace: SlottyMedia.Tests.DatabaseTests</p> <p>Tests for DatabaseActions class.</p> <pre><code>public class DatabaseActionTests : BaseDatabaseTestClass\n</code></pre> <p>Inheritance Object \u2192 BaseDatabaseTestClass \u2192 DatabaseActionTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#userid","title":"UserId","text":"<p>The UserId of the User</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#databaseactions","title":"DatabaseActions","text":"<p>The DatabaseActions Object</p> <pre><code>public DatabaseActions DatabaseActions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#property-value_1","title":"Property Value","text":"<p>DatabaseActions</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#usertoworkwith","title":"UserToWorkWith","text":"<p>The User to work with</p> <pre><code>public UserDao UserToWorkWith { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#property-value_2","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#databaseactiontests_1","title":"DatabaseActionTests()","text":"<pre><code>public DatabaseActionTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#setup","title":"Setup()","text":"<p>Sets up the test environment by initializing the user model.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#teardown","title":"TearDown()","text":"<p>Cleans up the test environment by deleting the user if it exists.</p> <pre><code>public Task TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#insert","title":"Insert()","text":"<p>Tests the Insert method of DatabaseActions.</p> <pre><code>public Task Insert()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#insert_failure","title":"Insert_Failure()","text":"<p>Tests the Insert method of DatabaseActions for failure.</p> <pre><code>public void Insert_Failure()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#update","title":"Update()","text":"<p>Tests the Update method of DatabaseActions.</p> <pre><code>public Task Update()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#update_failure","title":"Update_Failure()","text":"<p>Tests the Update method of DatabaseActions for failure.</p> <pre><code>public void Update_Failure()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#delete","title":"Delete()","text":"<p>Tests the Delete method of DatabaseActions.</p> <pre><code>public Task Delete()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#delete_failure","title":"Delete_Failure()","text":"<p>Tests the Delete method of DatabaseActions for failure.</p> <pre><code>public void Delete_Failure()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#getentitybyfield","title":"GetEntityByField()","text":"<p>Tests the GetEntityByField method of DatabaseActions.</p> <pre><code>public Task GetEntityByField()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#getentitybyfield_failure","title":"GetEntityByField_Failure()","text":"<p>Tests the GetEntityByField method of DatabaseActions for failure.</p> <pre><code>public void GetEntityByField_Failure()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#getentitiewithselectorbyid","title":"GetEntitieWithSelectorById()","text":"<p>Tests the GetEntitieWithSelectorById method of DatabaseActions.</p> <pre><code>public Task GetEntitieWithSelectorById()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#getentitiewithselectorbyid_failure","title":"GetEntitieWithSelectorById_Failure()","text":"<p>Tests the GetEntitieWithSelectorById method of DatabaseActions for failure.</p> <pre><code>public void GetEntitieWithSelectorById_Failure()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#getentitieswithselectorbyid","title":"GetEntitiesWithSelectorById()","text":"<p>Tests the GetEntitiesWithSelectorById method of DatabaseActions.</p> <pre><code>public Task GetEntitiesWithSelectorById()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#returns_6","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#getentitieswithselectorbyid_failure","title":"GetEntitiesWithSelectorById_Failure()","text":"<p>Tests the GetEntitiesWithSelectorById method of DatabaseActions for failure.</p> <pre><code>public void GetEntitiesWithSelectorById_Failure()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#getcountbyfield","title":"GetCountByField()","text":"<p>Tests the GetCountByField method of DatabaseActions.</p> <pre><code>public Task GetCountByField()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#returns_7","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databaseactiontests/#exceptions","title":"Exceptions","text":"<p>T:SlottyMedia.Database.Exceptions.GeneralDatabaseException Thrown when there is a database-related error during the test execution.</p> <p>Remarks:</p> <p>This test ensures that the GetCountByField method correctly returns the count of users  with a specific field and value. It first inserts a user into the database to ensure  there is at least one entry, then retrieves the count of users with the specific field  and value, and asserts that the count is greater than 0.</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/","title":"CommentDaoTest","text":"<p>Namespace: SlottyMedia.Tests.DatabaseTests.DatabaseModelsTests</p> <p>Test class for the CommentDto model.</p> <pre><code>public class CommentDaoTest : SlottyMedia.Tests.DatabaseTests.BaseDatabaseTestClass\n</code></pre> <p>Inheritance Object \u2192 BaseDatabaseTestClass \u2192 CommentDaoTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#userid","title":"UserId","text":"<p>The UserId of the User</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#databaseactions","title":"DatabaseActions","text":"<p>The DatabaseActions Object</p> <pre><code>public DatabaseActions DatabaseActions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#property-value_1","title":"Property Value","text":"<p>DatabaseActions</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#usertoworkwith","title":"UserToWorkWith","text":"<p>The User to work with</p> <pre><code>public UserDao UserToWorkWith { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#property-value_2","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#commentdaotest_1","title":"CommentDaoTest()","text":"<pre><code>public CommentDaoTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#onetimesetup","title":"OneTimeSetup()","text":"<p>One-time setup method to initialize Supabase client and insert test data.</p> <pre><code>public Task OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#setup","title":"Setup()","text":"<p>Setup method to initialize a new CommentDto instance before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#teardown","title":"TearDown()","text":"<p>Tear down method to delete the test comment after each test.</p> <pre><code>public Task TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#onetimeteardown","title":"OneTimeTearDown()","text":"<p>One-time tear down method to delete the test data after all tests are run.</p> <pre><code>public Task OneTimeTearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#insert","title":"Insert()","text":"<p>Test method to insert a new comment into the database.</p> <pre><code>public Task Insert()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#update","title":"Update()","text":"<p>Test method to update an existing comment in the database.</p> <pre><code>public Task Update()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#delete","title":"Delete()","text":"<p>Test method to delete an existing comment from the database.</p> <pre><code>public Task Delete()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#getentitybyfield","title":"GetEntityByField()","text":"<p>Test method to retrieve a comment by a specific field from the database.</p> <pre><code>public Task GetEntityByField()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.commentdaotest/#returns_6","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/","title":"FollowerUserRelationDaoTest","text":"<p>Namespace: SlottyMedia.Tests.DatabaseTests.DatabaseModelsTests</p> <p>Test class for the FollowerUserRelationDao model.</p> <pre><code>public class FollowerUserRelationDaoTest : SlottyMedia.Tests.DatabaseTests.BaseDatabaseTestClass\n</code></pre> <p>Inheritance Object \u2192 BaseDatabaseTestClass \u2192 FollowerUserRelationDaoTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#userid","title":"UserId","text":"<p>The UserId of the User</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#databaseactions","title":"DatabaseActions","text":"<p>The DatabaseActions Object</p> <pre><code>public DatabaseActions DatabaseActions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#property-value_1","title":"Property Value","text":"<p>DatabaseActions</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#usertoworkwith","title":"UserToWorkWith","text":"<p>The User to work with</p> <pre><code>public UserDao UserToWorkWith { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#property-value_2","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#followeruserrelationdaotest_1","title":"FollowerUserRelationDaoTest()","text":"<pre><code>public FollowerUserRelationDaoTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#onetimesetup","title":"OneTimeSetup()","text":"<p>One-time setup method to initialize Supabase client and insert test data.</p> <pre><code>public Task OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#setup","title":"Setup()","text":"<p>Setup method to initialize a new FollowerUserRelationDao instance before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#teardown","title":"TearDown()","text":"<p>Tear down method to delete the test relation after each test.</p> <pre><code>public Task TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#onetimeteardown","title":"OneTimeTearDown()","text":"<p>One-time tear down method to delete the test data after all tests are run.</p> <pre><code>public Task OneTimeTearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#insert","title":"Insert()","text":"<p>Test method to insert a new follower-user relation into the database.</p> <pre><code>public Task Insert()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#delete","title":"Delete()","text":"<p>Test method to delete an existing follower-user relation from the database.</p> <pre><code>public Task Delete()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#getentitybyfield","title":"GetEntityByField()","text":"<p>Test method to retrieve a follower-user relation by a specific field from the database.</p> <pre><code>public Task GetEntityByField()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.followeruserrelationdaotest/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/","title":"ForumDaoTest","text":"<p>Namespace: SlottyMedia.Tests.DatabaseTests.DatabaseModelsTests</p> <p>Test class for the ForumDao model.</p> <pre><code>public class ForumDaoTest : SlottyMedia.Tests.DatabaseTests.BaseDatabaseTestClass\n</code></pre> <p>Inheritance Object \u2192 BaseDatabaseTestClass \u2192 ForumDaoTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#userid","title":"UserId","text":"<p>The UserId of the User</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#databaseactions","title":"DatabaseActions","text":"<p>The DatabaseActions Object</p> <pre><code>public DatabaseActions DatabaseActions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#property-value_1","title":"Property Value","text":"<p>DatabaseActions</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#usertoworkwith","title":"UserToWorkWith","text":"<p>The User to work with</p> <pre><code>public UserDao UserToWorkWith { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#property-value_2","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#forumdaotest_1","title":"ForumDaoTest()","text":"<pre><code>public ForumDaoTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#onetimesetup","title":"OneTimeSetup()","text":"<p>One-time setup method to initialize Supabase client and insert test data.</p> <pre><code>public Task OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#setup","title":"Setup()","text":"<p>Setup method to initialize a new ForumDao instance before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#teardown","title":"TearDown()","text":"<p>Tear down method to delete the test forum after each test.</p> <pre><code>public Task TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#onetimeteardown","title":"OneTimeTearDown()","text":"<p>One-time tear down method to delete the test data after all tests are run.</p> <pre><code>public Task OneTimeTearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#insert","title":"Insert()","text":"<p>Test method to insert a new forum into the database.</p> <pre><code>public Task Insert()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#update","title":"Update()","text":"<p>Test method to update an existing forum in the database.</p> <pre><code>public Task Update()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#delete","title":"Delete()","text":"<p>Test method to delete an existing forum from the database.</p> <pre><code>public Task Delete()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#getentitybyfield","title":"GetEntityByField()","text":"<p>Test method to retrieve a forum by a specific field from the database.</p> <pre><code>public Task GetEntityByField()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.forumdaotest/#returns_6","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/","title":"PostDtoTest","text":"<p>Namespace: SlottyMedia.Tests.DatabaseTests.DatabaseModelsTests</p> <p>Test class for the PostsDao model.</p> <pre><code>public class PostDtoTest : SlottyMedia.Tests.DatabaseTests.BaseDatabaseTestClass\n</code></pre> <p>Inheritance Object \u2192 BaseDatabaseTestClass \u2192 PostDtoTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#userid","title":"UserId","text":"<p>The UserId of the User</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#databaseactions","title":"DatabaseActions","text":"<p>The DatabaseActions Object</p> <pre><code>public DatabaseActions DatabaseActions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#property-value_1","title":"Property Value","text":"<p>DatabaseActions</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#usertoworkwith","title":"UserToWorkWith","text":"<p>The User to work with</p> <pre><code>public UserDao UserToWorkWith { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#property-value_2","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#postdtotest_1","title":"PostDtoTest()","text":"<pre><code>public PostDtoTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#onetimesetup","title":"OneTimeSetup()","text":"<p>One-time setup method to initialize Supabase client and insert test data.</p> <pre><code>public Task OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#setup","title":"Setup()","text":"<p>Setup method to initialize a new PostsDao instance before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#teardown","title":"TearDown()","text":"<p>Tear down method to delete the test post after each test.</p> <pre><code>public Task TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#onetimeteardown","title":"OneTimeTearDown()","text":"<p>One-time tear down method to delete the test data after all tests are run.</p> <pre><code>public Task OneTimeTearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#insert","title":"Insert()","text":"<p>Test method to insert a new post into the database.</p> <pre><code>public Task Insert()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#update","title":"Update()","text":"<p>Test method to update an existing post in the database.</p> <pre><code>public Task Update()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#delete","title":"Delete()","text":"<p>Test method to delete an existing post from the database.</p> <pre><code>public Task Delete()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#getentitybyfield","title":"GetEntityByField()","text":"<p>Test method to retrieve a post by a specific field from the database.</p> <pre><code>public Task GetEntityByField()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.postdtotest/#returns_6","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/","title":"UserLikePostRelationDaoTest","text":"<p>Namespace: SlottyMedia.Tests.DatabaseTests.DatabaseModelsTests</p> <p>Test class for the UserLikePostRelationDao model.</p> <pre><code>public class UserLikePostRelationDaoTest : SlottyMedia.Tests.DatabaseTests.BaseDatabaseTestClass\n</code></pre> <p>Inheritance Object \u2192 BaseDatabaseTestClass \u2192 UserLikePostRelationDaoTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#userid","title":"UserId","text":"<p>The UserId of the User</p> <pre><code>public Guid UserId { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#property-value","title":"Property Value","text":"<p>Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#databaseactions","title":"DatabaseActions","text":"<p>The DatabaseActions Object</p> <pre><code>public DatabaseActions DatabaseActions { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#property-value_1","title":"Property Value","text":"<p>DatabaseActions</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#usertoworkwith","title":"UserToWorkWith","text":"<p>The User to work with</p> <pre><code>public UserDao UserToWorkWith { get; set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#property-value_2","title":"Property Value","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#userlikepostrelationdaotest_1","title":"UserLikePostRelationDaoTest()","text":"<pre><code>public UserLikePostRelationDaoTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#onetimesetup","title":"OneTimeSetup()","text":"<p>One-time setup method to initialize Supabase client and insert test data.</p> <pre><code>public Task OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#setup","title":"Setup()","text":"<p>Setup method to initialize a new UserLikePostRelationDao instance before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#teardown","title":"TearDown()","text":"<p>Tear down method to delete the test relation after each test.</p> <pre><code>public Task TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#onetimeteardown","title":"OneTimeTearDown()","text":"<p>One-time tear down method to delete the test data after all tests are run.</p> <pre><code>public Task OneTimeTearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#insert","title":"Insert()","text":"<p>Test method to insert a new user-like-post relation into the database.</p> <pre><code>public Task Insert()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#delete","title":"Delete()","text":"<p>Test method to delete an existing user-like-post relation from the database.</p> <pre><code>public Task Delete()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#getentitybyfield","title":"GetEntityByField()","text":"<p>Test method to retrieve a user-like-post relation by a specific field from the database.</p> <pre><code>public Task GetEntityByField()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.databasemodelstests.userlikepostrelationdaotest/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/","title":"InitializeModels","text":"<p>Namespace: SlottyMedia.Tests.DatabaseTests</p> <p>This class initializes the models for the database tests.</p> <pre><code>public static class InitializeModels\n</code></pre> <p>Inheritance Object \u2192 InitializeModels</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#getroledto","title":"GetRoleDto()","text":"<p>This method initializes a RoleDto for the tests.</p> <pre><code>public static RoleDao GetRoleDto()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#returns","title":"Returns","text":"<p>RoleDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#getuserdtoguid","title":"GetUserDto(Guid)","text":"<p>This method initializes a UserDto for the tests.</p> <pre><code>public static UserDao GetUserDto(Guid userID)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#parameters","title":"Parameters","text":"<p><code>userID</code> Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#returns_1","title":"Returns","text":"<p>UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#getforumdtouserdao","title":"GetForumDto(UserDao)","text":"<p>This method initializes a ForumDto for the tests.</p> <pre><code>public static ForumDao GetForumDto(UserDao userDao)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#parameters_1","title":"Parameters","text":"<p><code>userDao</code> UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#returns_2","title":"Returns","text":"<p>ForumDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#getpostsdtoforumdao-userdao","title":"GetPostsDto(ForumDao, UserDao)","text":"<p>This method initializes a PostsDto for the tests.</p> <pre><code>public static PostsDao GetPostsDto(ForumDao forumDao, UserDao userDao)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#parameters_2","title":"Parameters","text":"<p><code>forumDao</code> ForumDao</p> <p><code>userDao</code> UserDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.databasetests.initializemodels/#returns_3","title":"Returns","text":"<p>PostsDao</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.initializesupabaseclienttest/","title":"InitializeSupabaseClientTest","text":"<p>Namespace: SlottyMedia.Tests</p> <p>Test class for the InitializeSupabaseClient class.</p> <pre><code>public class InitializeSupabaseClientTest\n</code></pre> <p>Inheritance Object \u2192 InitializeSupabaseClientTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.initializesupabaseclienttest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.initializesupabaseclienttest/#initializesupabaseclienttest_1","title":"InitializeSupabaseClientTest()","text":"<pre><code>public InitializeSupabaseClientTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.initializesupabaseclienttest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.initializesupabaseclienttest/#setup","title":"Setup()","text":"<p>Setup method to initialize the Supabase client before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.initializesupabaseclienttest/#testgetsupabaseclient","title":"TestGetSupabaseClient()","text":"<p>Test method to verify that the Supabase client is not null.</p> <pre><code>public void TestGetSupabaseClient()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/","title":"CommentServiceTests","text":"<p>Namespace: SlottyMedia.Tests.ServiceTests</p> <p>Unit tests for the CommentService class.</p> <pre><code>public class CommentServiceTests\n</code></pre> <p>Inheritance Object \u2192 CommentServiceTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#commentservicetests_1","title":"CommentServiceTests()","text":"<pre><code>public CommentServiceTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#setup","title":"Setup()","text":"<p>Initializes the mock objects and the CommentService instance before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#teardown","title":"TearDown()","text":"<p>Resets the mock objects after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#insertcomment_shouldinsertcomment_whencommentisvalid","title":"InsertComment_ShouldInsertComment_WhenCommentIsValid()","text":"<p>Tests that InsertComment method inserts a comment when the comment is valid.</p> <pre><code>public Task InsertComment_ShouldInsertComment_WhenCommentIsValid()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#insertcomment_shouldthrowcommentiudexception_whendatabaseiudactionexceptionisthrown","title":"InsertComment_ShouldThrowCommentIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that InsertComment method throws CommentIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void InsertComment_ShouldThrowCommentIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#insertcomment_shouldthrowcommentgeneralexception_whengeneraldatabaseexceptionisthrown","title":"InsertComment_ShouldThrowCommentGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that InsertComment method throws CommentGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void InsertComment_ShouldThrowCommentGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#updatecomment_shouldupdatecomment_whencommentisvalid","title":"UpdateComment_ShouldUpdateComment_WhenCommentIsValid()","text":"<p>Tests that UpdateComment method updates a comment when the comment is valid.</p> <pre><code>public Task UpdateComment_ShouldUpdateComment_WhenCommentIsValid()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#updatecomment_shouldthrowcommentiudexception_whendatabaseiudactionexceptionisthrown","title":"UpdateComment_ShouldThrowCommentIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that UpdateComment method throws CommentIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void UpdateComment_ShouldThrowCommentIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#updatecomment_shouldthrowcommentgeneralexception_whengeneraldatabaseexceptionisthrown","title":"UpdateComment_ShouldThrowCommentGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that UpdateComment method throws CommentGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void UpdateComment_ShouldThrowCommentGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#deletecomment_shoulddeletecomment_whencommentisvalid","title":"DeleteComment_ShouldDeleteComment_WhenCommentIsValid()","text":"<p>Tests that DeleteComment method deletes a comment when the comment is valid.</p> <pre><code>public Task DeleteComment_ShouldDeleteComment_WhenCommentIsValid()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#deletecomment_shouldthrowcommentiudexception_whendatabaseiudactionexceptionisthrown","title":"DeleteComment_ShouldThrowCommentIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that DeleteComment method throws CommentIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void DeleteComment_ShouldThrowCommentIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#deletecomment_shouldthrowcommentgeneralexception_whengeneraldatabaseexceptionisthrown","title":"DeleteComment_ShouldThrowCommentGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that DeleteComment method throws CommentGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void DeleteComment_ShouldThrowCommentGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#insertcomment_shouldthrowcommentgeneralexception_whenexceptionisthrown","title":"InsertComment_ShouldThrowCommentGeneralException_WhenExceptionIsThrown()","text":"<p>Tests that InsertComment method throws CommentGeneralException when a general exception is thrown.</p> <pre><code>public void InsertComment_ShouldThrowCommentGeneralException_WhenExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#updatecomment_shouldthrowcommentgeneralexception_whenexceptionisthrown","title":"UpdateComment_ShouldThrowCommentGeneralException_WhenExceptionIsThrown()","text":"<p>Tests that UpdateComment method throws CommentGeneralException when a general exception is thrown.</p> <pre><code>public void UpdateComment_ShouldThrowCommentGeneralException_WhenExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.commentservicetests/#deletecomment_shouldthrowcommentgeneralexception_whenexceptionisthrown","title":"DeleteComment_ShouldThrowCommentGeneralException_WhenExceptionIsThrown()","text":"<p>Tests that DeleteComment method throws CommentGeneralException when a general exception is thrown.</p> <pre><code>public void DeleteComment_ShouldThrowCommentGeneralException_WhenExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/","title":"ForumServiceTests","text":"<p>Namespace: SlottyMedia.Tests.ServiceTests</p> <p>Unit tests for the ForumService class.</p> <pre><code>public class ForumServiceTests\n</code></pre> <p>Inheritance Object \u2192 ForumServiceTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#forumservicetests_1","title":"ForumServiceTests()","text":"<pre><code>public ForumServiceTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#setup","title":"Setup()","text":"<p>Sets up the test environment before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#teardown","title":"TearDown()","text":"<p>Cleans up the test environment after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#insertforum_shouldinsertforum_whenforumisvalid","title":"InsertForum_ShouldInsertForum_WhenForumIsValid()","text":"<p>Tests that a forum is inserted when the forum is valid.</p> <pre><code>public Task InsertForum_ShouldInsertForum_WhenForumIsValid()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#insertforum_shouldthrowforumiudexception_whendatabaseiudactionexceptionisthrown","title":"InsertForum_ShouldThrowForumIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that a ForumIudException is thrown when a DatabaseIudActionException is thrown.</p> <pre><code>public void InsertForum_ShouldThrowForumIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#insertforum_shouldthrowforumgeneralexception_whengeneraldatabaseexceptionisthrown","title":"InsertForum_ShouldThrowForumGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that a ForumGeneralException is thrown when a GeneralDatabaseException is thrown.</p> <pre><code>public void InsertForum_ShouldThrowForumGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#deleteforum_shoulddeleteforum_whenforumisvalid","title":"DeleteForum_ShouldDeleteForum_WhenForumIsValid()","text":"<p>Tests that a forum is deleted when the forum is valid.</p> <pre><code>public Task DeleteForum_ShouldDeleteForum_WhenForumIsValid()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#deleteforum_shouldthrowforumiudexception_whendatabaseiudactionexceptionisthrown","title":"DeleteForum_ShouldThrowForumIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that a ForumIudException is thrown when a DatabaseIudActionException is thrown.</p> <pre><code>public void DeleteForum_ShouldThrowForumIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#deleteforum_shouldthrowforumgeneralexception_whengeneraldatabaseexceptionisthrown","title":"DeleteForum_ShouldThrowForumGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that a ForumGeneralException is thrown when a GeneralDatabaseException is thrown.</p> <pre><code>public void DeleteForum_ShouldThrowForumGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#getforumbyname_shouldreturnforum_whenforumexists","title":"GetForumByName_ShouldReturnForum_WhenForumExists()","text":"<p>Tests that a forum is returned when the forum exists.</p> <pre><code>public Task GetForumByName_ShouldReturnForum_WhenForumExists()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#getforumbyname_shouldthrowforumgeneralexception_whendatabasemissingitemexceptionisthrown","title":"GetForumByName_ShouldThrowForumGeneralException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that a ForumNotFoundException is thrown when a DatabaseMissingItemException is thrown.</p> <pre><code>public void GetForumByName_ShouldThrowForumGeneralException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#determinerecentspaces_shouldreturnrecentforums_whenforumsexist","title":"DetermineRecentSpaces_ShouldReturnRecentForums_WhenForumsExist()","text":"<p>Tests that recent forums are returned when forums exist.</p> <pre><code>public Task DetermineRecentSpaces_ShouldReturnRecentForums_WhenForumsExist()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#determinerecentspaces_shouldthrowforumgeneralexception_whendatabasemissingitemexceptionisthrown","title":"DetermineRecentSpaces_ShouldThrowForumGeneralException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that a ForumNotFoundException is thrown when a DatabaseMissingItemException is thrown.</p> <pre><code>public void DetermineRecentSpaces_ShouldThrowForumGeneralException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#gettopforums_shouldreturntopforums_whenforumsexist","title":"GetTopForums_ShouldReturnTopForums_WhenForumsExist()","text":"<p>Tests that top forums are returned when forums exist.</p> <pre><code>public Task GetTopForums_ShouldReturnTopForums_WhenForumsExist()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#gettopforums_shouldthrowforumgeneralexception_whendatabasemissingitemexceptionisthrown","title":"GetTopForums_ShouldThrowForumGeneralException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that a ForumNotFoundException is thrown when a DatabaseMissingItemException is thrown.</p> <pre><code>public void GetTopForums_ShouldThrowForumGeneralException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#insertforum_shouldthrowforumgeneralexception_whengeneralexceptionisthrown","title":"InsertForum_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that a ForumGeneralException is thrown when a general exception is thrown during forum insertion.</p> <pre><code>public void InsertForum_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#deleteforum_shouldthrowforumgeneralexception_whengeneralexceptionisthrown","title":"DeleteForum_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that a ForumGeneralException is thrown when a general exception is thrown during forum deletion.</p> <pre><code>public void DeleteForum_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#getforumbyname_shouldthrowforumgeneralexception_whengeneralexceptionisthrown","title":"GetForumByName_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that a ForumGeneralException is thrown when a general exception is thrown during forum retrieval by name.</p> <pre><code>public void GetForumByName_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#determinerecentspaces_shouldthrowforumgeneralexception_whengeneralexceptionisthrown","title":"DetermineRecentSpaces_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that a ForumGeneralException is thrown when a general exception is thrown during retrieval of recent forums.</p> <pre><code>public void DetermineRecentSpaces_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.forumservicetests/#gettopforums_shouldthrowforumgeneralexception_whengeneralexceptionisthrown","title":"GetTopForums_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that a ForumGeneralException is thrown when a general exception is thrown during retrieval of top forums.</p> <pre><code>public void GetTopForums_ShouldThrowForumGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/","title":"LikeServiceTests","text":"<p>Namespace: SlottyMedia.Tests.ServiceTests</p> <p>Unit tests for the LikeService class.</p> <pre><code>public class LikeServiceTests\n</code></pre> <p>Inheritance Object \u2192 LikeServiceTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#likeservicetests_1","title":"LikeServiceTests()","text":"<pre><code>public LikeServiceTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#setup","title":"Setup()","text":"<p>Sets up the test environment before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#teardown","title":"TearDown()","text":"<p>Cleans up the test environment after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#insertlike_shouldreturntrue_whenlikeisinsertedsuccessfully","title":"InsertLike_ShouldReturnTrue_WhenLikeIsInsertedSuccessfully()","text":"<p>Tests that a like is inserted successfully.</p> <pre><code>public Task InsertLike_ShouldReturnTrue_WhenLikeIsInsertedSuccessfully()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#insertlike_shouldthrowlikeiudexception_whendatabaseiudactionexceptionisthrown","title":"InsertLike_ShouldThrowLikeIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that a LikeIudException is thrown when a DatabaseIudActionException is thrown.</p> <pre><code>public void InsertLike_ShouldThrowLikeIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#insertlike_shouldthrowlikegeneralexception_whengeneraldatabaseexceptionisthrown","title":"InsertLike_ShouldThrowLikeGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that a LikeGeneralException is thrown when a GeneralDatabaseException is thrown.</p> <pre><code>public void InsertLike_ShouldThrowLikeGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#deletelike_shouldreturntrue_whenlikeisdeletedsuccessfully","title":"DeleteLike_ShouldReturnTrue_WhenLikeIsDeletedSuccessfully()","text":"<p>Tests that a like is deleted successfully.</p> <pre><code>public Task DeleteLike_ShouldReturnTrue_WhenLikeIsDeletedSuccessfully()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#deletelike_shouldthrowlikeiudexception_whendatabaseiudactionexceptionisthrown","title":"DeleteLike_ShouldThrowLikeIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that a LikeIudException is thrown when a DatabaseIudActionException is thrown.</p> <pre><code>public void DeleteLike_ShouldThrowLikeIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#deletelike_shouldthrowlikegeneralexception_whengeneraldatabaseexceptionisthrown","title":"DeleteLike_ShouldThrowLikeGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that a LikeGeneralException is thrown when a GeneralDatabaseException is thrown.</p> <pre><code>public void DeleteLike_ShouldThrowLikeGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#getlikesforpost_shouldreturnuserids_whenlikesarefound","title":"GetLikesForPost_ShouldReturnUserIds_WhenLikesAreFound()","text":"<p>Tests that user IDs are returned when likes are found for a post.</p> <pre><code>public Task GetLikesForPost_ShouldReturnUserIds_WhenLikesAreFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#getlikesforpost_shouldthrowlikenotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetLikesForPost_ShouldThrowLikeNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that a LikeNotFoundException is thrown when a DatabaseMissingItemException is thrown.</p> <pre><code>public void GetLikesForPost_ShouldThrowLikeNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#getlikesforpost_shouldthrowlikegeneralexception_whengeneraldatabaseexceptionisthrown","title":"GetLikesForPost_ShouldThrowLikeGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that a LikeGeneralException is thrown when a GeneralDatabaseException is thrown.</p> <pre><code>public void GetLikesForPost_ShouldThrowLikeGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#insertlike_shouldthrowlikegeneralexception_whengeneralexceptionisthrown","title":"InsertLike_ShouldThrowLikeGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that a LikeGeneralException is thrown when a general exception is thrown in InsertLike.</p> <pre><code>public void InsertLike_ShouldThrowLikeGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#deletelike_shouldthrowlikenotfoundexception_whendatabasemissingitemexceptionisthrown","title":"DeleteLike_ShouldThrowLikeNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that a LikeNotFoundException is thrown when a DatabaseMissingItemException is thrown in DeleteLike.</p> <pre><code>public void DeleteLike_ShouldThrowLikeNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#deletelike_shouldthrowlikegeneralexception_whengeneralexceptionisthrown","title":"DeleteLike_ShouldThrowLikeGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that a LikeGeneralException is thrown when a general exception is thrown in DeleteLike.</p> <pre><code>public void DeleteLike_ShouldThrowLikeGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.likeservicetests/#getlikesforpost_shouldthrowlikegeneralexception_whengeneralexceptionisthrown","title":"GetLikesForPost_ShouldThrowLikeGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that a LikeGeneralException is thrown when a general exception is thrown in GetLikesForPost.</p> <pre><code>public void GetLikesForPost_ShouldThrowLikeGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/","title":"PostServiceTests","text":"<p>Namespace: SlottyMedia.Tests.ServiceTests</p> <p>Unit tests for the PostService class.</p> <pre><code>public class PostServiceTests\n</code></pre> <p>Inheritance Object \u2192 PostServiceTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#postservicetests_1","title":"PostServiceTests()","text":"<pre><code>public PostServiceTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#setup","title":"Setup()","text":"<p>Sets up the test environment before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#teardown","title":"TearDown()","text":"<p>Cleans up the test environment after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#insertpost_shouldreturntrue_whenpostisinsertedsuccessfully","title":"InsertPost_ShouldReturnTrue_WhenPostIsInsertedSuccessfully()","text":"<p>Tests that InsertPost returns true when a post is inserted successfully.</p> <pre><code>public Task InsertPost_ShouldReturnTrue_WhenPostIsInsertedSuccessfully()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#insertpost_shouldthrowpostiudexception_whendatabaseiudactionexceptionisthrown","title":"InsertPost_ShouldThrowPostIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that InsertPost throws PostIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void InsertPost_ShouldThrowPostIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#insertpost_shouldthrowpostgeneralexception_whengeneraldatabaseexceptionisthrown","title":"InsertPost_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that InsertPost throws PostGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void InsertPost_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#deletepost_shouldreturntrue_whenpostisdeletedsuccessfully","title":"DeletePost_ShouldReturnTrue_WhenPostIsDeletedSuccessfully()","text":"<p>Tests that DeletePost returns true when a post is deleted successfully.</p> <pre><code>public Task DeletePost_ShouldReturnTrue_WhenPostIsDeletedSuccessfully()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#deletepost_shouldthrowpostiudexception_whendatabaseiudactionexceptionisthrown","title":"DeletePost_ShouldThrowPostIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that DeletePost throws PostIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void DeletePost_ShouldThrowPostIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#deletepost_shouldthrowpostgeneralexception_whengeneraldatabaseexceptionisthrown","title":"DeletePost_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that DeletePost throws PostGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void DeletePost_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsforuser_shouldreturnposts_whenpostsarefound","title":"GetPostsForUser_ShouldReturnPosts_WhenPostsAreFound()","text":"<p>Tests that GetPostsForUser returns posts when posts are found.</p> <pre><code>public Task GetPostsForUser_ShouldReturnPosts_WhenPostsAreFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsforuser_shouldthrowpostnotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetPostsForUser_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that GetPostsForUser throws PostNotFoundException when DatabaseMissingItemException is thrown.</p> <pre><code>public void GetPostsForUser_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsforuser_shouldthrowpostgeneralexception_whengeneraldatabaseexceptionisthrown","title":"GetPostsForUser_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that GetPostsForUser throws PostGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetPostsForUser_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#updatepost_shouldreturntrue_whenpostisupdatedsuccessfully","title":"UpdatePost_ShouldReturnTrue_WhenPostIsUpdatedSuccessfully()","text":"<p>Tests that UpdatePost returns true when a post is updated successfully.</p> <pre><code>public Task UpdatePost_ShouldReturnTrue_WhenPostIsUpdatedSuccessfully()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#updatepost_shouldthrowpostiudexception_whendatabaseiudactionexceptionisthrown","title":"UpdatePost_ShouldThrowPostIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests that UpdatePost throws PostIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void UpdatePost_ShouldThrowPostIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#updatepost_shouldthrowpostgeneralexception_whengeneraldatabaseexceptionisthrown","title":"UpdatePost_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that UpdatePost throws PostGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void UpdatePost_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsfromforum_shouldreturnposts_whenpostsarefound","title":"GetPostsFromForum_ShouldReturnPosts_WhenPostsAreFound()","text":"<p>Tests that GetPostsFromForum returns posts when posts are found.</p> <pre><code>public Task GetPostsFromForum_ShouldReturnPosts_WhenPostsAreFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsfromforum_shouldthrowpostnotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetPostsFromForum_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that GetPostsFromForum throws PostNotFoundException when DatabaseMissingItemException is thrown.</p> <pre><code>public void GetPostsFromForum_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsfromforum_shouldthrowpostgeneralexception_whengeneraldatabaseexceptionisthrown","title":"GetPostsFromForum_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that GetPostsFromForum throws PostGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetPostsFromForum_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostbyid_shouldreturnpost_whenpostisfound","title":"GetPostById_ShouldReturnPost_WhenPostIsFound()","text":"<p>Tests that GetPostById returns a post when a post is found.</p> <pre><code>public Task GetPostById_ShouldReturnPost_WhenPostIsFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostbyid_shouldthrowpostnotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetPostById_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that GetPostById throws PostNotFoundException when DatabaseMissingItemException is thrown.</p> <pre><code>public void GetPostById_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostbyid_shouldthrowpostgeneralexception_whengeneraldatabaseexceptionisthrown","title":"GetPostById_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that GetPostById throws PostGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetPostById_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getforumcountbyuserid_shouldreturncorrectcount","title":"GetForumCountByUserId_ShouldReturnCorrectCount()","text":"<p>Tests that GetForumCountByUserId returns the correct count.</p> <pre><code>public Task GetForumCountByUserId_ShouldReturnCorrectCount()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns_6","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getforumcountbyuserid_shouldthrowpostgeneralexception_whengeneraldatabaseexceptionisthrown","title":"GetForumCountByUserId_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that GetForumCountByUserId throws PostGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetForumCountByUserId_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getallposts_shouldreturnposts_whenpostsarefound","title":"GetAllPosts_ShouldReturnPosts_WhenPostsAreFound()","text":"<p>Tests that GetAllPosts returns posts when posts are found.</p> <pre><code>public Task GetAllPosts_ShouldReturnPosts_WhenPostsAreFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns_7","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getallposts_shouldthrowpostnotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetAllPosts_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that GetAllPosts throws PostNotFoundException when DatabaseMissingItemException is thrown.</p> <pre><code>public void GetAllPosts_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getallposts_shouldthrowpostgeneralexception_whengeneralexceptionisthrown","title":"GetAllPosts_ShouldThrowPostGeneralException_WhenGeneralExceptionIsThrown()","text":"<p>Tests that GetAllPosts throws PostGeneralException when a general exception is thrown.</p> <pre><code>public void GetAllPosts_ShouldThrowPostGeneralException_WhenGeneralExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsbyforumid_shouldreturnposts_whenpostsarefound","title":"GetPostsByForumId_ShouldReturnPosts_WhenPostsAreFound()","text":"<p>Tests that GetPostsByForumId returns posts when posts are found.</p> <pre><code>public Task GetPostsByForumId_ShouldReturnPosts_WhenPostsAreFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#returns_8","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsbyforumid_shouldthrowpostnotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetPostsByForumId_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests that GetPostsByForumId throws PostNotFoundException when DatabaseMissingItemException is thrown.</p> <pre><code>public void GetPostsByForumId_ShouldThrowPostNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.postservicetests/#getpostsbyforumid_shouldthrowpostgeneralexception_whengeneraldatabaseexceptionisthrown","title":"GetPostsByForumId_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests that GetPostsByForumId throws PostGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetPostsByForumId_ShouldThrowPostGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/","title":"SearchServiceTests","text":"<p>Namespace: SlottyMedia.Tests.ServiceTests</p> <p>Tests the SearchService used for searching for users and topics in the database.</p> <pre><code>public class SearchServiceTests\n</code></pre> <p>Inheritance Object \u2192 SearchServiceTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchservicetests_1","title":"SearchServiceTests()","text":"<pre><code>public SearchServiceTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#setup","title":"Setup()","text":"<p>The setup method that is called before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#teardown","title":"TearDown()","text":"<p>The teardown method that is called after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbyusername_shouldreturnuserids_whenusersfound","title":"SearchByUsername_ShouldReturnUserIds_WhenUsersFound()","text":"<p>Tests if SearchByUsername method returns user IDs when users are found.</p> <pre><code>public Task SearchByUsername_ShouldReturnUserIds_WhenUsersFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbytopic_shouldreturntopicids_whentopicsfound","title":"SearchByTopic_ShouldReturnTopicIds_WhenTopicsFound()","text":"<p>Tests if SearchByTopic method returns topic IDs when topics are found.</p> <pre><code>public Task SearchByTopic_ShouldReturnTopicIds_WhenTopicsFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbyusernameortopic_shouldreturnemptylist_whennoresultsfound","title":"SearchByUsernameOrTopic_ShouldReturnEmptyList_WhenNoResultsFound()","text":"<p>Tests if SearchByUsername and SearchByTopic methods return an empty list when no results are found.</p> <pre><code>public Task SearchByUsernameOrTopic_ShouldReturnEmptyList_WhenNoResultsFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbyusernameortopic_shouldthrowexception_whendatabasethrowsexception","title":"SearchByUsernameOrTopic_ShouldThrowException_WhenDatabaseThrowsException()","text":"<p>Tests if SearchByUsername and SearchByTopic methods throw SearchGeneralExceptions when a general database exception  is thrown.</p> <pre><code>public void SearchByUsernameOrTopic_ShouldThrowException_WhenDatabaseThrowsException()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbyusernameortopic_shouldthrowsearchgeneralexceptions_whendatabasemissingitemexceptionisthrown","title":"SearchByUsernameOrTopic_ShouldThrowSearchGeneralExceptions_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests if SearchByUsername and SearchByTopic methods throw SearchGeneralExceptions when DatabaseMissingItemException  is thrown.</p> <pre><code>public void SearchByUsernameOrTopic_ShouldThrowSearchGeneralExceptions_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbyusernameortopic_shouldthrowsearchgeneralexceptions_whendatabaseexceptionisthrown","title":"SearchByUsernameOrTopic_ShouldThrowSearchGeneralExceptions_WhenDatabaseExceptionIsThrown()","text":"<p>Tests if SearchByUsername and SearchByTopic methods throw SearchGeneralExceptions when GeneralDatabaseException is  thrown.</p> <pre><code>public void SearchByUsernameOrTopic_ShouldThrowSearchGeneralExceptions_WhenDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbyusername_shouldreturnemptylist_whensearchtermisempty","title":"SearchByUsername_ShouldReturnEmptyList_WhenSearchTermIsEmpty()","text":"<p>Tests if SearchByUsername and SearchByTopic methods return an empty list when the search term is empty.</p> <pre><code>public Task SearchByUsername_ShouldReturnEmptyList_WhenSearchTermIsEmpty()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbytopic_shouldreturnemptylist_whensearchtermisempty","title":"SearchByTopic_ShouldReturnEmptyList_WhenSearchTermIsEmpty()","text":"<p>Tests if SearchByUsername and SearchByTopic methods return an empty list when the search term is empty.</p> <pre><code>public Task SearchByTopic_ShouldReturnEmptyList_WhenSearchTermIsEmpty()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbyusername_shouldhandlespecialcharacters","title":"SearchByUsername_ShouldHandleSpecialCharacters()","text":"<p>Tests if SearchByUsername and SearchByTopic methods return an empty list when the search term is null.</p> <pre><code>public Task SearchByUsername_ShouldHandleSpecialCharacters()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#returns_5","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#searchbytopic_shouldhandlespecialcharacters","title":"SearchByTopic_ShouldHandleSpecialCharacters()","text":"<p>Tests if SearchByUsername and SearchByTopic methods return an empty list when the search term is null.</p> <pre><code>public Task SearchByTopic_ShouldHandleSpecialCharacters()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.searchservicetests/#returns_6","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/","title":"UserServiceTests","text":"<p>Namespace: SlottyMedia.Tests.ServiceTests</p> <p>Tests the UserService used for user related actions in the database.</p> <pre><code>public class UserServiceTests\n</code></pre> <p>Inheritance Object \u2192 UserServiceTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#userservicetests_1","title":"UserServiceTests()","text":"<pre><code>public UserServiceTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#setup","title":"Setup()","text":"<p>The setup method that is called before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#teardown","title":"TearDown()","text":"<p>The teardown method that is called after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#createuser_shouldthrowusergeneralexception_whendatabaseexceptionisthrown","title":"CreateUser_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()","text":"<p>Tests if CreateUser method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void CreateUser_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#deleteuser_shouldthrowuseriudexception_whendatabaseiudactionexceptionisthrown","title":"DeleteUser_ShouldThrowUserIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests if DeleteUser method throws UserIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void DeleteUser_ShouldThrowUserIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getuserbyid_shouldthrowusernotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetUserById_ShouldThrowUserNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests if GetUserDtoById method throws UserNotFoundException when DatabaseMissingItemException is thrown.</p> <pre><code>public void GetUserById_ShouldThrowUserNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getuserbyid_shouldthrowusergeneralexception_whendatabaseexceptionisthrown","title":"GetUserById_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()","text":"<p>Tests if GetUserDtoById method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetUserById_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getuserbyusername_shouldbetrue_whenuserexists","title":"GetUserByUsername_ShouldBeTrue_WhenUserExists()","text":"<p>Tests if CheckIfUserExistsByUserName method returns true when user exists.</p> <pre><code>public Task GetUserByUsername_ShouldBeTrue_WhenUserExists()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#updateuser_shouldthrowuseriudexception_whendatabaseiudactionexceptionisthrown","title":"UpdateUser_ShouldThrowUserIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests if UpdateUser method throws UserIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void UpdateUser_ShouldThrowUserIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#updateuser_shouldthrowusergeneralexception_whendatabaseexceptionisthrown","title":"UpdateUser_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()","text":"<p>Tests if UpdateUser method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void UpdateUser_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getprofilepic_shouldthrowusernotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetProfilePic_ShouldThrowUserNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests if GetProfilePic method throws UserNotFoundException when DatabaseMissingItemException is thrown.</p> <pre><code>public void GetProfilePic_ShouldThrowUserNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getprofilepic_shouldthrowusergeneralexception_whendatabaseexceptionisthrown","title":"GetProfilePic_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()","text":"<p>Tests if GetProfilePic method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetProfilePic_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getuser_shouldthrowusergeneralexception_whendatabaseexceptionisthrown","title":"GetUser_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()","text":"<p>Tests if GetUser method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetUser_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getfriends_shouldthrowusernotfoundexception_whendatabasemissingitemexceptionisthrown","title":"GetFriends_ShouldThrowUserNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()","text":"<p>Tests if GetFriends method throws UserNotFoundException when DatabaseMissingItemException is thrown.</p> <pre><code>public void GetFriends_ShouldThrowUserNotFoundException_WhenDatabaseMissingItemExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getfriends_shouldthrowusergeneralexception_whendatabaseexceptionisthrown","title":"GetFriends_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()","text":"<p>Tests if GetFriends method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetFriends_ShouldThrowUserGeneralException_WhenDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getcountofuserfriends_throwsusergeneralexception_ongeneraldatabaseexception","title":"GetCountOfUserFriends_ThrowsUserGeneralException_OnGeneralDatabaseException()","text":"<p>Tests if GetCountOfUserFriends method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void GetCountOfUserFriends_ThrowsUserGeneralException_OnGeneralDatabaseException()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getcountofuserfriends_throwsusergeneralexception_onunexpectedexception","title":"GetCountOfUserFriends_ThrowsUserGeneralException_OnUnexpectedException()","text":"<p>Tests if GetCountOfUserFriends method throws UserGeneralException when an unexpected exception is thrown.</p> <pre><code>public void GetCountOfUserFriends_ThrowsUserGeneralException_OnUnexpectedException()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#getcountofuserspaces","title":"GetCountOfUserSpaces()","text":"<p>Tests if GetCountOfUserSpaces method returns the correct count of user spaces.</p> <pre><code>public Task GetCountOfUserSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#followuserbyid_shouldfollowuser","title":"FollowUserById_ShouldFollowUser()","text":"<p>Tests if FollowUserById method successfully follows a user.</p> <pre><code>public Task FollowUserById_ShouldFollowUser()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#followuserbyid_shouldthrowuseriudexception_whendatabaseiudactionexceptionisthrown","title":"FollowUserById_ShouldThrowUserIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests if FollowUserById method throws UserIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void FollowUserById_ShouldThrowUserIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#followuserbyid_shouldthrowusergeneralexception_whengeneraldatabaseexceptionisthrown","title":"FollowUserById_ShouldThrowUserGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests if FollowUserById method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void FollowUserById_ShouldThrowUserGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#unfollowuserbyid_shouldunfollowuser","title":"UnfollowUserById_ShouldUnfollowUser()","text":"<p>Tests if UnfollowUserById method successfully unfollows a user.</p> <pre><code>public Task UnfollowUserById_ShouldUnfollowUser()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#unfollowuserbyid_shouldthrowuseriudexception_whendatabaseiudactionexceptionisthrown","title":"UnfollowUserById_ShouldThrowUserIudException_WhenDatabaseIudActionExceptionIsThrown()","text":"<p>Tests if UnfollowUserById method throws UserIudException when DatabaseIudActionException is thrown.</p> <pre><code>public void UnfollowUserById_ShouldThrowUserIudException_WhenDatabaseIudActionExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.servicetests.userservicetests/#unfollowuserbyid_shouldthrowusergeneralexception_whengeneraldatabaseexceptionisthrown","title":"UnfollowUserById_ShouldThrowUserGeneralException_WhenGeneralDatabaseExceptionIsThrown()","text":"<p>Tests if UnfollowUserById method throws UserGeneralException when GeneralDatabaseException is thrown.</p> <pre><code>public void UnfollowUserById_ShouldThrowUserGeneralException_WhenGeneralDatabaseExceptionIsThrown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.mockedavatargenerator/","title":"MockedAvatarGenerator","text":"<p>Namespace: SlottyMedia.Tests.TestImpl</p> <pre><code>public class MockedAvatarGenerator : SlottyMedia.DatabaseSeeding.Avatar.IAvatarGenerator\n</code></pre> <p>Inheritance Object \u2192 MockedAvatarGenerator Implements IAvatarGenerator</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.mockedavatargenerator/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.mockedavatargenerator/#mockedavatargenerator_1","title":"MockedAvatarGenerator()","text":"<pre><code>public MockedAvatarGenerator()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.mockedavatargenerator/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.mockedavatargenerator/#randomavatarb64","title":"RandomAvatarB64()","text":"<pre><code>public string RandomAvatarB64()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.mockedavatargenerator/#returns","title":"Returns","text":"<p>String</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/","title":"PageTestImpl&lt;T&gt;","text":"<p>Namespace: SlottyMedia.Tests.TestImpl</p> <p>This class is a test implementation of .  It allows to set all fields of a page and does not provide  any actual functionalities. Use for mocking purposes only!</p> <pre><code>public class PageTestImpl&lt;T&gt; : , , System.Collections.IEnumerable\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#type-parameters","title":"Type Parameters","text":"<p><code>T</code> The type of the page's content</p> <p>Inheritance Object \u2192 PageTestImpl&lt;T&gt; Implements IPage&lt;T&gt;, IEnumerable&lt;T&gt;, IEnumerable</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#pagenumber","title":"PageNumber","text":"<pre><code>public int PageNumber { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#property-value","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#pagesize","title":"PageSize","text":"<pre><code>public int PageSize { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#property-value_1","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#totalpages","title":"TotalPages","text":"<pre><code>public int TotalPages { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#property-value_2","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#content","title":"Content","text":"<pre><code>public List&lt;T&gt; Content { get; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#property-value_3","title":"Property Value","text":"<p>List&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#pagetestimpllistt-int32-int32-int32","title":"PageTestImpl(List&lt;T&gt;, Int32, Int32, Int32)","text":"<p>Initializes a new page with the given members.</p> <pre><code>public PageTestImpl(List&lt;T&gt; content, int pageNumber, int pageSize, int totalPages)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#parameters","title":"Parameters","text":"<p><code>content</code> List&lt;T&gt;</p> <p><code>pageNumber</code> Int32</p> <p><code>pageSize</code> Int32</p> <p><code>totalPages</code> Int32</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#getenumerator","title":"GetEnumerator()","text":"<pre><code>public IEnumerator&lt;T&gt; GetEnumerator()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#returns","title":"Returns","text":"<p>IEnumerator&lt;T&gt;</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#maptmappedfunct-tmapped","title":"Map&lt;TMapped&gt;(Func&lt;T, TMapped&gt;)","text":"<pre><code>public IPage&lt;TMapped&gt; Map&lt;TMapped&gt;(Func&lt;T, TMapped&gt; function)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#type-parameters_1","title":"Type Parameters","text":"<p><code>TMapped</code></p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#parameters_1","title":"Parameters","text":"<p><code>function</code> Func&lt;T, TMapped&gt;</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#returns_1","title":"Returns","text":"<p>IPage&lt;TMapped&gt;</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#fetchint32","title":"Fetch(Int32)","text":"<p>Simulates fetching some other page, but simply returns this object.</p> <pre><code>public Task&lt;IPage&lt;T&gt;&gt; Fetch(int pageNumber)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#parameters_2","title":"Parameters","text":"<p><code>pageNumber</code> Int32</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.testimpl.pagetestimpl-1/#returns_2","title":"Returns","text":"<p>Task&lt;IPage&lt;T&gt;&gt;</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/","title":"SignInFormVmImplTest","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel.auth</p> <p>Unit tests for the SignInFormVmImpl class.</p> <pre><code>public class SignInFormVmImplTest\n</code></pre> <p>Inheritance Object \u2192 SignInFormVmImplTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#signinformvmimpltest_1","title":"SignInFormVmImplTest()","text":"<pre><code>public SignInFormVmImplTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#onetimesetup","title":"OneTimeSetup()","text":"<p>Sets up the test environment before any tests are run.</p> <pre><code>public void OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#teardown","title":"TearDown()","text":"<p>Resets the mocks after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#submitsigninform_whenemailempty_shoulddisplayerrormessagestring-string","title":"SubmitSignInForm_WhenEmailEmpty_ShouldDisplayErrorMessage(String, String)","text":"<p>Tests that an error message is displayed when the email is empty or null.</p> <pre><code>public Task SubmitSignInForm_WhenEmailEmpty_ShouldDisplayErrorMessage(string email, string password)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#parameters","title":"Parameters","text":"<p><code>email</code> String The email input.</p> <p><code>password</code> String The password input.</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#submitsigninform_whenpasswordempty_shoulddisplayerrormessagestring-string","title":"SubmitSignInForm_WhenPasswordEmpty_ShouldDisplayErrorMessage(String, String)","text":"<p>Tests that an error message is displayed when the password is empty or null.</p> <pre><code>public Task SubmitSignInForm_WhenPasswordEmpty_ShouldDisplayErrorMessage(string email, string password)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#parameters_1","title":"Parameters","text":"<p><code>email</code> String The email input.</p> <p><code>password</code> String The password input.</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signinformvmimpltest/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/","title":"SignUpFormVmImplTest","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel.auth</p> <p>This tests the viewmodel user in the Register.razor page</p> <pre><code>public class SignUpFormVmImplTest\n</code></pre> <p>Inheritance Object \u2192 SignUpFormVmImplTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#signupformvmimpltest_1","title":"SignUpFormVmImplTest()","text":"<pre><code>public SignUpFormVmImplTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#onetimesetup","title":"OneTimeSetup()","text":"<p>Sets up the necessary mocks and initializes the service before any tests are run.</p> <pre><code>public void OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#teardown","title":"TearDown()","text":"<p>Resets the mocks after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#submitsignupform_usernamenotprovided","title":"SubmitSignUpForm_UsernameNotProvided()","text":"<p>Tests that an ArgumentException is thrown when the username is not provided.</p> <pre><code>public void SubmitSignUpForm_UsernameNotProvided()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#submitsignupform_emailnotprovided","title":"SubmitSignUpForm_EmailNotProvided()","text":"<p>Tests that an ArgumentException is thrown when the email is not provided.</p> <pre><code>public void SubmitSignUpForm_EmailNotProvided()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#submitsignupform_passwordnotprovided","title":"SubmitSignUpForm_PasswordNotProvided()","text":"<p>Tests that an ArgumentException is thrown when the password is not provided.</p> <pre><code>public void SubmitSignUpForm_PasswordNotProvided()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#submitsignupform_usernamealreadyexists","title":"SubmitSignUpForm_UserNameAlreadyExists()","text":"<p>Tests that a UsernameAlreadyExistsException is thrown when the username already exists.</p> <pre><code>public void SubmitSignUpForm_UserNameAlreadyExists()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.auth.signupformvmimpltest/#submitsignupform_emailalreadyexists","title":"SubmitSignUpForm_EmailAlreadyExists()","text":"<p>Tests that an EmailAlreadyExistsException is thrown when the email already exists.</p> <pre><code>public void SubmitSignUpForm_EmailAlreadyExists()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/","title":"AuthVmTests","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the AuthVm class.</p> <pre><code>public class AuthVmTests\n</code></pre> <p>Inheritance Object \u2192 AuthVmTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#authvmtests_1","title":"AuthVmTests()","text":"<pre><code>public AuthVmTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#setup","title":"SetUp()","text":"<p>Sets up the test environment by initializing mocks and the AuthVm instance.</p> <pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#getcurrentsession_returnscurrentsession","title":"GetCurrentSession_ReturnsCurrentSession()","text":"<p>Tests that GetCurrentSession method returns the current session.</p> <pre><code>public void GetCurrentSession_ReturnsCurrentSession()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#getcurrentuserid_returnsuseridwhensessionexists","title":"GetCurrentUserId_ReturnsUserIdWhenSessionExists()","text":"<p>Tests that GetCurrentUserId method returns the user ID when a session exists.</p> <pre><code>public void GetCurrentUserId_ReturnsUserIdWhenSessionExists()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#getcurrentuserid_throwsexceptionwhensessionisnull","title":"GetCurrentUserId_ThrowsExceptionWhenSessionIsNull()","text":"<p>Tests that GetCurrentUserId method throws an exception when the session is null.</p> <pre><code>public void GetCurrentUserId_ThrowsExceptionWhenSessionIsNull()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#isauthenticated_returnstruewhenauthenticated","title":"IsAuthenticated_ReturnsTrueWhenAuthenticated()","text":"<p>Tests that IsAuthenticated method returns true when the user is authenticated.</p> <pre><code>public void IsAuthenticated_ReturnsTrueWhenAuthenticated()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.authvmtests/#isauthenticated_returnsfalsewhennotauthenticated","title":"IsAuthenticated_ReturnsFalseWhenNotAuthenticated()","text":"<p>Tests that IsAuthenticated method returns false when the user is not authenticated.</p> <pre><code>public void IsAuthenticated_ReturnsFalseWhenNotAuthenticated()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/","title":"CommentSubmissionFormVmImplTests","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the CommentSubmissionFormVmImpl class.</p> <pre><code>public class CommentSubmissionFormVmImplTests\n</code></pre> <p>Inheritance Object \u2192 CommentSubmissionFormVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#commentsubmissionformvmimpltests_1","title":"CommentSubmissionFormVmImplTests()","text":"<pre><code>public CommentSubmissionFormVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#setup","title":"SetUp()","text":"<p>Sets up the test environment by initializing mocks and the CommentSubmissionFormVmImpl instance.</p> <pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#submitform_successfullysubmitscomment","title":"SubmitForm_SuccessfullySubmitsComment()","text":"<p>Tests that SubmitForm method successfully submits a comment.</p> <pre><code>public Task SubmitForm_SuccessfullySubmitsComment()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#submitform_displayserrorwhennotauthenticated","title":"SubmitForm_DisplaysErrorWhenNotAuthenticated()","text":"<p>Tests that SubmitForm method displays an error when the user is not authenticated.</p> <pre><code>public Task SubmitForm_DisplaysErrorWhenNotAuthenticated()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#submitform_displayserrorwhentextisempty","title":"SubmitForm_DisplaysErrorWhenTextIsEmpty()","text":"<p>Tests that SubmitForm method displays an error when the comment text is empty.</p> <pre><code>public Task SubmitForm_DisplaysErrorWhenTextIsEmpty()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#submitform_displaysservererroronexception","title":"SubmitForm_DisplaysServerErrorOnException()","text":"<p>Tests that SubmitForm method displays a server error when an exception is thrown.</p> <pre><code>public Task SubmitForm_DisplaysServerErrorOnException()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.commentsubmissionformvmimpltests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/","title":"HomePageVmImplTests","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Tests for the HomePageVmImpl class.</p> <pre><code>public class HomePageVmImplTests\n</code></pre> <p>Inheritance Object \u2192 HomePageVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#homepagevmimpltests_1","title":"HomePageVmImplTests()","text":"<pre><code>public HomePageVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#setup","title":"SetUp()","text":"<p>Sets up the test environment by initializing mocks and the system under test.</p> <pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#initialize_setsinitialvaluesandloadsfirstpage","title":"Initialize_SetsInitialValuesAndLoadsFirstPage()","text":"<p>Tests that the Initialize method sets initial values and loads the first page.</p> <pre><code>public Task Initialize_SetsInitialValuesAndLoadsFirstPage()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#loadpage_setsloadingstateandloadsspecifiedpage","title":"LoadPage_SetsLoadingStateAndLoadsSpecifiedPage()","text":"<p>Tests that the LoadPage method sets the loading state and loads the specified page.</p> <pre><code>public Task LoadPage_SetsLoadingStateAndLoadsSpecifiedPage()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#loadpage_handlesemptypage","title":"LoadPage_HandlesEmptyPage()","text":"<p>Tests that the LoadPage method handles an empty page correctly.</p> <pre><code>public Task LoadPage_HandlesEmptyPage()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.homepagevmimpltests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/","title":"MainLayoutVmImplTest","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the MainLayoutVmImpl class.</p> <pre><code>public class MainLayoutVmImplTest\n</code></pre> <p>Inheritance Object \u2192 MainLayoutVmImplTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#mainlayoutvmimpltest_1","title":"MainLayoutVmImplTest()","text":"<pre><code>public MainLayoutVmImplTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#onetimesetup","title":"OneTimeSetup()","text":"<p>Sets up the necessary mocks and initializes the service before any tests are run.</p> <pre><code>public void OneTimeSetup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#teardown","title":"TearDown()","text":"<p>Resets the mocks after each test.</p> <pre><code>public void TearDown()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#restoresessiononinit_returnssession","title":"RestoreSessionOnInit_ReturnsSession()","text":"<p>Tests that a session is restored on initialization.</p> <pre><code>public void RestoreSessionOnInit_ReturnsSession()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#restoresessiononinit_nosessionrestoredreturnsnull","title":"RestoreSessionOnInit_NoSessionRestoredReturnsNull()","text":"<p>Tests that no session is restored and returns null.</p> <pre><code>public void RestoreSessionOnInit_NoSessionRestoredReturnsNull()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#setuserinfo_returnsuserinfodto","title":"SetUserInfo_ReturnsUserInfoDto()","text":"<p>Tests that SetUserInfo returns a UserInfoDto when the user DAO is valid.</p> <pre><code>public void SetUserInfo_ReturnsUserInfoDto()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#persistuseravatarindb_returnsnullonnosession","title":"PersistUserAvatarInDb_ReturnsNullOnNoSession()","text":"<p>Tests that PersistUserAvatarInDb returns null when no session is set.</p> <pre><code>public void PersistUserAvatarInDb_ReturnsNullOnNoSession()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#persistsuseravatarindb","title":"PersistsUserAvatarInDb()","text":"<p>Tests that PersistUserAvatarInDb persists the user avatar in the database.</p> <pre><code>public Task PersistsUserAvatarInDb()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.mainlayoutvmimpltest/#restoresessiononinit_logsmessageonnosession","title":"RestoreSessionOnInit_LogsMessageOnNoSession()","text":"<p>Tests that RestoreSessionOnInit logs a message when no session is restored.</p> <pre><code>public void RestoreSessionOnInit_LogsMessageOnNoSession()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/","title":"PostPageVmImplTests","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the PostPageVmImpl class.</p> <pre><code>public class PostPageVmImplTests\n</code></pre> <p>Inheritance Object \u2192 PostPageVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#postpagevmimpltests_1","title":"PostPageVmImplTests()","text":"<pre><code>public PostPageVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#setup","title":"SetUp()","text":"<p>Sets up the test environment by initializing mocks and the PostPageVmImpl instance.</p> <pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#initialize_setspostandloadsfirstcommentspage","title":"Initialize_SetsPostAndLoadsFirstCommentsPage()","text":"<p>Tests that Initialize method sets the Post and loads the first page of comments.</p> <pre><code>public Task Initialize_SetsPostAndLoadsFirstCommentsPage()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#initialize_setsposttonullwhenpostnotfound","title":"Initialize_SetsPostToNullWhenPostNotFound()","text":"<p>Tests that Initialize method sets the Post property to null when the post is not found.</p> <pre><code>public Task Initialize_SetsPostToNullWhenPostNotFound()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#loadcommentspage_addscommentstolist","title":"LoadCommentsPage_AddsCommentsToList()","text":"<p>Tests that LoadCommentsPage method adds comments to the Comments list.</p> <pre><code>public Task LoadCommentsPage_AddsCommentsToList()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#loadcommentspage_doesnotloadwhenpostisnull","title":"LoadCommentsPage_DoesNotLoadWhenPostIsNull()","text":"<p>Tests that LoadCommentsPage method does not load comments when the Post property is null.</p> <pre><code>public Task LoadCommentsPage_DoesNotLoadWhenPostIsNull()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postpagevmimpltests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/","title":"PostSubmissionFormVmImplTests","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the PostSubmissionFormVmImpl class.</p> <pre><code>public class PostSubmissionFormVmImplTests\n</code></pre> <p>Inheritance Object \u2192 PostSubmissionFormVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#postsubmissionformvmimpltests_1","title":"PostSubmissionFormVmImplTests()","text":"<pre><code>public PostSubmissionFormVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#setup","title":"SetUp()","text":"<p>Sets up the test environment by initializing mocks and the PostSubmissionFormVmImpl instance.</p> <pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#handlespacepromptchange_validprompt_updatessearchedspaces","title":"HandleSpacePromptChange_ValidPrompt_UpdatesSearchedSpaces()","text":"<p>Tests that HandleSpacePromptChange updates the searched spaces when a valid prompt is provided.</p> <pre><code>public Task HandleSpacePromptChange_ValidPrompt_UpdatesSearchedSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#handlespaceselection_validspacename_updatesspacename","title":"HandleSpaceSelection_ValidSpaceName_UpdatesSpaceName()","text":"<p>Tests that HandleSpaceSelection updates the space name when a valid space name is provided.</p> <pre><code>public void HandleSpaceSelection_ValidSpaceName_UpdatesSpaceName()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#handlespacedeselection_clearsspacename","title":"HandleSpaceDeselection_ClearsSpaceName()","text":"<p>Tests that HandleSpaceDeselection clears the space name.</p> <pre><code>public void HandleSpaceDeselection_ClearsSpaceName()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#submitform_unauthenticateduser_setsservererrormessage","title":"SubmitForm_UnauthenticatedUser_SetsServerErrorMessage()","text":"<p>Tests that SubmitForm sets the server error message when the user is unauthenticated.</p> <pre><code>public Task SubmitForm_UnauthenticatedUser_SetsServerErrorMessage()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#submitform_emptytext_setstexterrormessage","title":"SubmitForm_EmptyText_SetsTextErrorMessage()","text":"<p>Tests that SubmitForm sets the text error message when the text is empty.</p> <pre><code>public Task SubmitForm_EmptyText_SetsTextErrorMessage()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#submitform_emptyspacename_setsspaceerrormessage","title":"SubmitForm_EmptySpaceName_SetsSpaceErrorMessage()","text":"<p>Tests that SubmitForm sets the space error message when the space name is empty.</p> <pre><code>public Task SubmitForm_EmptySpaceName_SetsSpaceErrorMessage()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#submitform_displaysservererrorwhenexceptionoccurs","title":"SubmitForm_DisplaysServerErrorWhenExceptionOccurs()","text":"<p>Tests that SubmitForm displays a server error message when an exception occurs.</p> <pre><code>public Task SubmitForm_DisplaysServerErrorWhenExceptionOccurs()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postsubmissionformvmimpltests/#returns_4","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/","title":"PostVmImpl","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>ViewModel for Post</p> <pre><code>public class PostVmImpl : SlottyMedia.Backend.ViewModel.Interfaces.IPostVm\n</code></pre> <p>Inheritance Object \u2192 PostVmImpl Implements IPostVm</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#properties","title":"Properties","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#commentcount","title":"CommentCount","text":"<pre><code>public int CommentCount { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#property-value","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#initliked","title":"InitLiked","text":"<pre><code>public bool InitLiked { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#property-value_1","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#isloading","title":"IsLoading","text":"<pre><code>public bool IsLoading { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#property-value_2","title":"Property Value","text":"<p>Boolean</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#likecount","title":"LikeCount","text":"<pre><code>public int LikeCount { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#property-value_3","title":"Property Value","text":"<p>Int32</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#userinformation","title":"UserInformation","text":"<pre><code>public UserInformationDto UserInformation { get; private set; }\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#property-value_4","title":"Property Value","text":"<p>UserInformationDto</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#postvmimpliuserservice-ilikeservice-icommentservice","title":"PostVmImpl(IUserService, ILikeService, ICommentService)","text":"<p>The constructor for PostVmImpl</p> <pre><code>public PostVmImpl(IUserService userService, ILikeService likeService, ICommentService commentService)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#parameters","title":"Parameters","text":"<p><code>userService</code> IUserService The user service.</p> <p><code>likeService</code> ILikeService The like service.</p> <p><code>commentService</code> ICommentService The comment service.</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#initializeguid-guid","title":"Initialize(Guid, Guid)","text":"<pre><code>public Task Initialize(Guid postId, Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#parameters_1","title":"Parameters","text":"<p><code>postId</code> Guid</p> <p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#likepostguid-guid","title":"LikePost(Guid, Guid)","text":"<pre><code>public Task LikePost(Guid postId, Guid userId)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#parameters_2","title":"Parameters","text":"<p><code>postId</code> Guid</p> <p><code>userId</code> Guid</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#getuserinformationguid-boolean","title":"GetUserInformation(Guid, Boolean)","text":"<pre><code>public Task GetUserInformation(Guid userId, bool firstRender)\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#parameters_3","title":"Parameters","text":"<p><code>userId</code> Guid</p> <p><code>firstRender</code> Boolean</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpl/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/","title":"PostVmImplTests","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the PostVmImpl class.</p> <pre><code>public class PostVmImplTests\n</code></pre> <p>Inheritance Object \u2192 PostVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#postvmimpltests_1","title":"PostVmImplTests()","text":"<pre><code>public PostVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#setup","title":"SetUp()","text":"<p>Sets up the test environment before each test.</p> <pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#initialize_loadsallpostrelatedinformation","title":"Initialize_LoadsAllPostRelatedInformation()","text":"<p>Tests that Initialize method loads all post-related information.</p> <pre><code>public Task Initialize_LoadsAllPostRelatedInformation()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#likethispost_whenpostnotliked_shouldlikepost","title":"LikeThisPost_WhenPostNotLiked_ShouldLikePost()","text":"<p>Tests that LikePost method adds a like when the post was not previously liked.</p> <pre><code>public Task LikeThisPost_WhenPostNotLiked_ShouldLikePost()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#likethispost_whenpostliked_shouldunlikepost","title":"LikeThisPost_WhenPostLiked_ShouldUnlikePost()","text":"<p>Tests that LikePost method removes a like when the post was previously liked.</p> <pre><code>public Task LikeThisPost_WhenPostLiked_ShouldUnlikePost()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.postvmimpltests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/","title":"ProfilePageVmImplTests","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the  class.</p> <pre><code>public class ProfilePageVmImplTests\n</code></pre> <p>Inheritance Object \u2192 ProfilePageVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#profilepagevmimpltests_1","title":"ProfilePageVmImplTests()","text":"<pre><code>public ProfilePageVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#setup","title":"SetUp()","text":"<p>Sets up the test environment before each test.  Initializes the mocks and the view model instance.</p> <pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#initialize_loadsuserinfoandposts","title":"Initialize_LoadsUserInfoAndPosts()","text":"<p>Tests that the Initialize method loads user information and posts correctly.</p> <pre><code>public Task Initialize_LoadsUserInfoAndPosts()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#loadposts_loadspostsforuser","title":"LoadPosts_LoadsPostsForUser()","text":"<p>Tests that the LoadPosts method loads posts for the user correctly.</p> <pre><code>public Task LoadPosts_LoadsPostsForUser()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#followthisuser_followsuser","title":"FollowThisUser_FollowsUser()","text":"<p>Tests that the FollowThisUser method follows the user correctly.</p> <pre><code>public Task FollowThisUser_FollowsUser()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#unfollowthisuser_unfollowsuser","title":"UnfollowThisUser_UnfollowsUser()","text":"<p>Tests that the UnfollowThisUser method unfollows the user correctly.</p> <pre><code>public Task UnfollowThisUser_UnfollowsUser()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.profilepagevmimpltests/#returns_3","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/","title":"SpacesCardVmImplTests","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Tests for the  class.</p> <pre><code>public class SpacesCardVmImplTests\n</code></pre> <p>Inheritance Object \u2192 SpacesCardVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#spacescardvmimpltests_1","title":"SpacesCardVmImplTests()","text":"<pre><code>public SpacesCardVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#setup","title":"SetUp()","text":"<p>Sets up the test environment before each test.  Initializes the mocks and the view model instance.</p> <pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#fetch_shouldpopulatetrendingandrecentspaces","title":"Fetch_ShouldPopulateTrendingAndRecentSpaces()","text":"<p>Tests that the Fetch method populates the TrendingSpaces and RecentSpaces properties.</p> <pre><code>public Task Fetch_ShouldPopulateTrendingAndRecentSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#returns","title":"Returns","text":"<p>Task A task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#fetch_shouldhandleexceptiongracefully","title":"Fetch_ShouldHandleExceptionGracefully()","text":"<p>Tests that the Fetch method handles exceptions gracefully by ensuring  the TrendingSpaces and RecentSpaces properties are empty when an exception occurs.</p> <pre><code>public Task Fetch_ShouldHandleExceptionGracefully()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#returns_1","title":"Returns","text":"<p>Task A task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#determinetrendingspaces_shouldpopulatetrendingspaces","title":"DetermineTrendingSpaces_ShouldPopulateTrendingSpaces()","text":"<p>Tests that the Fetch method populates the TrendingSpaces property.</p> <pre><code>public Task DetermineTrendingSpaces_ShouldPopulateTrendingSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#returns_2","title":"Returns","text":"<p>Task A task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#determinerecentspaces_shouldpopulaterecentspaces","title":"DetermineRecentSpaces_ShouldPopulateRecentSpaces()","text":"<p>Tests that the Fetch method populates the RecentSpaces property.</p> <pre><code>public Task DetermineRecentSpaces_ShouldPopulateRecentSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacescardvmimpltests/#returns_3","title":"Returns","text":"<p>Task A task representing the asynchronous operation.</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/","title":"SpacesVmImplTest","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the  class.</p> <pre><code>public class SpacesVmImplTest\n</code></pre> <p>Inheritance Object \u2192 SpacesVmImplTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#spacesvmimpltest_1","title":"SpacesVmImplTest()","text":"<pre><code>public SpacesVmImplTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#setup","title":"Setup()","text":"<p>Sets up the test environment before each test.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#loadforums_validresponse_updatesforumslist","title":"LoadForums_ValidResponse_UpdatesForumsList()","text":"<p>Verifies that LoadForums updates the forums list with a valid response.</p> <pre><code>public Task LoadForums_ValidResponse_UpdatesForumsList()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#loadforums_exceptionthrown_logserror","title":"LoadForums_ExceptionThrown_LogsError()","text":"<p>Verifies that LoadForums logs an error and returns an empty list when an exception is thrown.</p> <pre><code>public Task LoadForums_ExceptionThrown_LogsError()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.spacesvmimpltest/#constructor_nullforumservice_throwsargumentnullexception","title":"Constructor_NullForumService_ThrowsArgumentNullException()","text":"<p>Verifies that the constructor throws an ArgumentNullException when the forum service is null.</p> <pre><code>public void Constructor_NullForumService_ThrowsArgumentNullException()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/","title":"UserVmImplTest","text":"<p>Namespace: SlottyMedia.Tests.Viewmodel</p> <p>Unit tests for the UserVm class.</p> <pre><code>public class UserVmImplTest\n</code></pre> <p>Inheritance Object \u2192 UserVmImplTest</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#uservmimpltest_1","title":"UserVmImplTest()","text":"<pre><code>public UserVmImplTest()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#setup","title":"Setup()","text":"<p>Initializes the test setup.</p> <pre><code>public void Setup()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#getuserbyid_returnsuserdto_whenuserexists","title":"GetUserById_ReturnsUserDto_WhenUserExists()","text":"<p>Tests that GetUserById returns a UserDto when the user exists.</p> <pre><code>public Task GetUserById_ReturnsUserDto_WhenUserExists()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#getuserbyid_throwsexception_whenuserservicethrows","title":"GetUserById_ThrowsException_WhenUserServiceThrows()","text":"<p>Tests that GetUserById throws an exception when the user service throws an exception.</p> <pre><code>public void GetUserById_ThrowsException_WhenUserServiceThrows()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#updateuser_callsuserserviceupdateuser","title":"UpdateUser_CallsUserServiceUpdateUser()","text":"<p>Tests that UpdateUser calls the UpdateUser method of the user service.</p> <pre><code>public Task UpdateUser_CallsUserServiceUpdateUser()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#updateuser_logserror_whenuserservicethrows","title":"UpdateUser_LogsError_WhenUserServiceThrows()","text":"<p>Tests that UpdateUser logs an error when the user service throws an exception.</p> <pre><code>public Task UpdateUser_LogsError_WhenUserServiceThrows()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/slottymedia.tests.viewmodel.uservmimpltest/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/","title":"SpacesCardVmImplTests","text":"<p>Namespace:</p> <pre><code>public class SpacesCardVmImplTests\n</code></pre> <p>Inheritance Object \u2192 SpacesCardVmImplTests</p>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#constructors","title":"Constructors","text":""},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#spacescardvmimpltests_1","title":"SpacesCardVmImplTests()","text":"<pre><code>public SpacesCardVmImplTests()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#methods","title":"Methods","text":""},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#setup","title":"SetUp()","text":"<pre><code>public void SetUp()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#fetch_shouldpopulatetrendingandrecentspaces","title":"Fetch_ShouldPopulateTrendingAndRecentSpaces()","text":"<pre><code>public Task Fetch_ShouldPopulateTrendingAndRecentSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#returns","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#fetch_shouldhandleexceptiongracefully","title":"Fetch_ShouldHandleExceptionGracefully()","text":"<pre><code>public Task Fetch_ShouldHandleExceptionGracefully()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#returns_1","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#determinetrendingspaces_shouldpopulatetrendingspaces","title":"DetermineTrendingSpaces_ShouldPopulateTrendingSpaces()","text":"<pre><code>public Task DetermineTrendingSpaces_ShouldPopulateTrendingSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#returns_2","title":"Returns","text":"<p>Task</p>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#determinerecentspaces_shouldpopulaterecentspaces","title":"DetermineRecentSpaces_ShouldPopulateRecentSpaces()","text":"<pre><code>public Task DetermineRecentSpaces_ShouldPopulateRecentSpaces()\n</code></pre>"},{"location":"code/SlottyMedia.Tests/spacescardvmimpltests/#returns_3","title":"Returns","text":"<p>Task</p>"}]}