@using SlottyMedia.Backend.Dtos
@using SlottyMedia.Backend.Services.Interfaces
@using SlottyMedia.Backend.ViewModel
@using SlottyMedia.Backend.ViewModel.Interfaces
@inject IUserVm UserVm

@if (!_isLoading)
{
    <div class="w-full p-3 bg-white-100 rounded-[24px]">

        <!-- username & time posted -->
        <div class="flex flex-col justify-between">
            <h3 class="text-xl font-semibold">
                @(_owner!.Username)
            </h3>
            <h3 class="text-sm font-medium text-cadet-gray">
                @(Dto!.CreatedAt.ToShortTimeString())
            </h3>
        </div>

        <!-- comment text -->
        <div>
            @(Dto!.Content)
        </div>

    </div>
}

@code {
    /// <summary>
    /// The comment data transfer object to be rendered.
    /// </summary>
    [Parameter] public CommentDto? Dto { get; set; }

    private bool _isLoading = true;
    private UserDto? _owner;

    /// <summary>
    /// Called when the component's parameters are set.
    /// Retrieves the user information for the comment's creator.
    /// </summary>
    protected override async Task OnParametersSetAsync()
    {
        _isLoading = true;
        _owner = await UserVm.GetUserById(Dto!.CreatorUserId!.Value);
        _isLoading = false;
    }
}