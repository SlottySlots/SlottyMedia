@using SlottyMedia.Backend.Dtos
@using SlottyMedia.Backend.ViewModel.Interfaces
@inject IUserVm UserVm
@inject NavigationManager NavigationManager

@if (CommentVm is not null && !CommentVm.IsLoading)
{
    <div class="w-full p-3 bg-white-100 rounded-[24px] flex flex-row gap-3">
        <!-- profile picture -->
        <div @onclick="OnClickAvatar">
            <Avatar OpensFileDialog=false Base64Png="@CommentVm.UserInformation.ProfilePic" Class="!w-[50px] !h-[50px]"></Avatar>
        </div>

        <!-- username & time posted -->
        <div class="flex flex-col justify-between">
            <h3 class="text-xl font-semibold">
                @(CommentVm.UserInformation!.Username)
            </h3>
            <h3 class="text-sm font-medium text-cadet-gray">
                @(Dto!.CreatedAt.ToShortTimeString())
            </h3>
        </div>

        <!-- comment text -->
        <div class="break-words">
            @(Dto!.Content)
        </div>
    </div>
}

@code {

    /// <summary>
    ///     The comment data transfer object to be rendered.
    /// </summary>
    [Parameter]
    public CommentDto? Dto { get; set; }

    /// <summary>
    ///     The ViewModel for the comment
    /// </summary>
    [Inject]
    private ICommentVm? CommentVm { get; set; }

    /// <summary>
    ///     This method is called after the component has been rendered.
    /// </summary>
    /// <param name="firstRender"></param>
    protected override async void OnAfterRender(bool firstRender)
    {
        if (CommentVm is not null && firstRender)
        {
            await CommentVm.Initialize(Dto!.CreatorUserId);
            StateHasChanged();
        }
    }

    private void OnClickAvatar()
    {
        NavigationManager.NavigateTo($"/profile/{Dto!.CreatorUserId.ToString()}");
    }

}