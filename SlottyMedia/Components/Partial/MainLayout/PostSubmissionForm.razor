@using Microsoft.IdentityModel.Tokens
@using SlottyMedia.Backend.ViewModel.Interfaces


<div class="w-full px-5 pt-5 grid grid-cols-10 gap-4 border-b border-athens-gray">
    
    <!-- profile picture -->
    <div class="w-[50px] h-[50px] rounded-full border border-athens-gray">
        <svg width="100%" height="100%" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="#000000">
            <g>
                <path d="m 8 1 c -1.65625 0 -3 1.34375 -3 3 s 1.34375 3 3 3 s 3 -1.34375 3 -3 s -1.34375 -3 -3 -3 z m -1.5 7 c -2.492188 0 -4.5 2.007812 -4.5 4.5 v 0.5 c 0 1.109375 0.890625 2 2 2 h 8 c 1.109375 0 2 -0.890625 2 -2 v -0.5 c 0 -2.492188 -2.007812 -4.5 -4.5 -4.5 z m 0 0" fill="#2e3436"></path>
            </g>
        </svg>
    </div>
    
    <!-- the form -->
    <form class="col-span-9" @onsubmit="ViewModel!.SubmitForm">
        
        <!-- the text -->
        <InputArea
            @bind-Value="ViewModel!.Text"
            Id="submit-post-textarea"
            Name="submit-post-textarea"
            Placeholder="What is happening?"
            Class="w-full bg-transparent text-black"
        />

        <!-- text error message -->
        @if (ViewModel.TextErrorMessage != null)
        {
            <span class="text-sm text-crayola-orange">
                @ViewModel.TextErrorMessage
            </span>
        }

        <!-- space error message -->
        @if (ViewModel.SpaceErrorMessage != null)
        {
            <span class="text-sm text-crayola-orange">
                @ViewModel.SpaceErrorMessage
            </span>
        }

        <!-- any other internal errors -->
        @if (ViewModel.ServerErrorMessage != null)
        {
            <span class="text-sm text-crayola-orange">
                @ViewModel.ServerErrorMessage
            </span>
        }
        
        <!-- container for buttons -->
        <div class="w-full h-[50px] flex justify-between items-center border-t border-athens-gray">

            <!-- buttons for the form -->
            <div class="flex items-center gap-12">
                <!-- upload picture -->
                <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M19.7917 3.125H5.20833C4.05774 3.125 3.125 4.05774 3.125 5.20833V19.7917C3.125 20.9423 4.05774 21.875 5.20833 21.875H19.7917C20.9423 21.875 21.875 20.9423 21.875 19.7917V5.20833C21.875 4.05774 20.9423 3.125 19.7917 3.125Z" stroke="#C32AA3" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M8.85425 10.4167C9.71719 10.4167 10.4167 9.7171 10.4167 8.85416C10.4167 7.99121 9.71719 7.29166 8.85425 7.29166C7.9913 7.29166 7.29175 7.99121 7.29175 8.85416C7.29175 9.7171 7.9913 10.4167 8.85425 10.4167Z" stroke="#C32AA3" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M21.8749 15.625L16.6666 10.4167L5.20825 21.875" stroke="#C32AA3" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>

                <!-- bullet point list -->
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8 6H21" stroke="#C32AA3" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M8 12H21" stroke="#C32AA3" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M8 18H21" stroke="#C32AA3" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M3 6H3.01" stroke="#C32AA3" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M3 12H3.01" stroke="#C32AA3" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M3 18H3.01" stroke="#C32AA3" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>

                <!-- emoji -->
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="#C32AA3" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M8 14C8 14 9.5 16 12 16C14.5 16 16 14 16 14" stroke="#C32AA3" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M9 9H9.01" stroke="#C32AA3" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M15 9H15.01" stroke="#C32AA3" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </div>
            
            <!-- space selection -->
            <div class="relative">
                
                @if (ViewModel.SpaceName.IsNullOrEmpty())
                {
                    <!-- the input -->
                    <input
                        @bind="ViewModel.SpacePrompt"
                        @oninput="_handleInput"
                        id="submit-post-spaces"
                        name="submit-post-spaces"
                        placeholder="#Spaces..."
                        class="border-none outline-none"/>
                }
                else
                {
                    <!-- the space -->
                    <Tag OnClick="ViewModel.HandleSpaceDeselection">
                        #@(ViewModel.SpaceName)
                    </Tag>
                }

                <!-- the tooltip -->
                @if (!ViewModel.SpacePrompt.IsNullOrEmpty())
                {
                    <Card Class="absolute left-0 top-0 translate-y-[40px] p-4 flex flex-col gap-3">
                        <div>
                            Unfortunately, there are no spaces yet.
                            This example will fail:
                        </div>
                        <Tag OnClick="_selectVivaLaVida">
                            #VivaLaVida
                        </Tag>
                    </Card>
                }
                
            </div>

            <!-- submission button -->
            <HotButton Type="submit" Class="w-[115px]">
                Post
            </HotButton>

        </div>
        
    </form>

</div>


@code {
    [Inject]
    [SupplyParameterFromForm]
    public IPostSubmissionFormVm? ViewModel { get; set; }
    
    /// An event that is invoked whenever this input field's value changes
    [Parameter]
    public EventCallback<string?> ValueChanged { get; set; }

    async Task _handleInput(ChangeEventArgs e) => await ViewModel!.HandleSpacePromptChange(e, ValueChanged);

    async Task _selectVivaLaVida() => await ViewModel!.HandleSpaceSelection("VivaLaVida");
    }
}