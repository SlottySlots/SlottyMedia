@using SlottyMedia.Backend.Dtos
@using SlottyMedia.Backend.Services.Interfaces

@inject IUserService UserService
@inject IAuthService AuthService
@inject NavigationManager Navigation


@if (_userInfo is not null)
{
    <Card Class="
        absolute w-full max-w-[280px]
        flex flex-col items-center gap-5
        left-1/2 bottom-0 -translate-x-1/2 translate-y-1/2">

        <!-- container -->
        <div class="h-full w-full p-5 flex flex-col justify-center items-center gap-1">

            <!-- profile picture -->
            <div @onclick="_goToProfilePage" class="rounded-full">
                <Avatar OpensFileDialog="@false" Base64Png="@_userInfo!.ProfilePic" />
            </div>

            <!-- username -->
            <h3 @onclick="_goToProfilePage" class="text-xl font-semibold text-center w-fit cursor-pointer">
                @_userInfo.Username
            </h3>

            <!-- profile description -->
            <span class="text-sm text-cadet-gray">
                @_userInfo.Description
            </span>

            <!-- Horizontal Spacer -->
            <div class="w-full border-b border-athens-gray my-3"></div>

            <!-- Spaces and Friends in Profile -->
            <div class="flex w-full">

                <!-- Friends  -->
                <div class="w-full">
                    <h3 class="text-xl text-center font-semibold">
                        @_userInfo.FriendsAmount
                    </h3>
                    <h3 class="text-sm font-medium w-fit mx-auto">
                        Friends
                    </h3>
                </div>

                <!-- spaces -->
                <div class="w-full">
                    <h3 class="text-xl text-center font-semibold">
                        @_userInfo.SpacesAmount
                    </h3>

                    <h3 class="text-sm font-medium w-fit mx-auto">
                        Spaces
                    </h3>
                </div>

            </div>

        </div>

    </Card>
}


@code
{
    UserInformationDto? _userInfo;
    
    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        var authPrincipalId = AuthService.GetAuthPrincipalId();
        if (authPrincipalId is not null)
            _userInfo = await UserService.GetUserInfo(authPrincipalId.Value);
    }

    void _goToProfilePage()
    {
        Navigation.NavigateTo($"/profile/{_userInfo!.UserId}");
    }
}
