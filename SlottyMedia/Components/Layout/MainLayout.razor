@using SlottyMedia.Backend.Services.Interfaces

@inherits LayoutComponentBase

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="w-screen h-screen grid grid-cols-5">

    <!-- sidebar on the left -->
    <div class="h-full border-r border-athens-gray">

        <!-- top box -->
        <div class="relative w-full h-2/5 flex justify-center items-center bg-gradient-to-br from-grape to-fandango">

            <!-- logo -->
            <div class="mb-20">
                <img src="static/logo/logo-simple-x100.webp" alt="" @onclick="_navigateToHome" style="cursor: pointer;"/>
            </div>

            <!-- login / account card -->
            @if (!AuthService.IsAuthenticated())
            {
                <LoginCard />
            }
            else
            {
                <AccountCard />
            }

        </div>

        <!-- bottom box -->
        <div class="w-full h-3/5 flex justify-center items-center bg-[#FAF8FB]">
            <NavBox />
        </div>

    </div>

    <!-- container for top bar, main content, friends section -->
    <div class="h-screen col-span-4 flex flex-col">

        <!-- top bar -->
        <div class="h-[80px] px-7 flex justify-between items-center border-b border-athens-gray">

            <!-- search bar -->
            <div class="max-w-[500px] h-full flex items-center gap-3">

                <!-- lens icon -->
                <svg width="23" height="23" viewBox="0 0 27 27" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12.1111 23.2222C18.2476 23.2222 23.2222 18.2476 23.2222 12.1111C23.2222 5.97462 18.2476 1 12.1111 1C5.97461 1 1 5.97462 1 12.1111C1 18.2476 5.97461 23.2222 12.1111 23.2222Z" stroke="#A0A0A0" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M26 26L19.9584 19.9584" stroke="#A0A0A0" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>

                <!-- search input -->
                <Search></Search>
            </div>
            <!-- links on right of bar -->
            @if (AuthService.IsAuthenticated())
            {
                <div>
                    <!-- logout -->
                    <a @onclick="SignOut" href="/" class="">
                        Log out
                    </a>
                </div>
            }


        </div>

        <!-- container for main content, friends & spaces section -->
        <div class="h-full grid grid-cols-4 overflow-auto">

            <!-- main content (center) -->
            <div class="h-full col-span-3 overflow-auto">
                @Body
            </div>

            <!-- spaces bar on the right -->
            <div class="h-full bg-[#FEFDFE] border-l border-athens-gray">

                <!-- spaces card -->
                @if (!AuthService.IsAuthenticated())
                {
                    <SpacesCardNoAccount/>
                }
                else
                {
                    <SpacesCard/>
                }

            </div>

        </div>

    </div>

</div>

@code{
    /// <inheritdoc />
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;
        await AuthService.RestoreSessionOnInit();
        StateHasChanged();
    }

    private async void SignOut()
    {
        await AuthService.SignOut();
        NavigationManager.NavigateTo("/", true);
    }

    private void _navigateToProfilePage()
    {
        NavigationManager.NavigateTo($"/profile/{AuthService.GetAuthPrincipalId()}");
    }

    private void _navigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }


}