@page "/space"
@using Microsoft.IdentityModel.Tokens
@using SlottyMedia.Backend.Dtos
@using SlottyMedia.Backend.Services.Interfaces
@using SlottyMedia.Backend.ViewModel.Interfaces
@inject NavigationManager NavigationManager
@inject ISpaceVm SpaceVm
@inject IAuthService AuthService
<PageTitle>Slotty Media | @SpaceVm.Topic</PageTitle>

@if (isLoading)
{
<p>Loading space details...</p>
}
else if (!_invalidSpaceFlag)
{
<p>Space not found!</p>
}
else
{
<div class="space-details">
    <h1 class="text-3xl font-bold">@SpaceVm.Topic</h1>
    <p class="text-sm text-gray-500">Created at: @SpaceVm.CreatedAt.ToString("dd-MMMM-yyyy")</p>
    <p class="text-sm text-gray-500">Posts: @SpaceVm.PostCount</p>
    
   
</div>
}

@code {
    private bool isLoading = true;
    private bool _invalidSpaceFlag = false;
    private Guid _forumId;
    private List<PostDto> posts = new List<PostDto>();

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var spaceName = queryParams["name"];

        if (queryParams["id"] != null && !_invalidSpaceFlag)
        {
            try
            {
                _forumId = Guid.Parse(queryParams["id"]!);
            }
            catch (Exception)
            {
                _invalidSpaceFlag = true;
                StateHasChanged();
                return;
            }


            if (!string.IsNullOrEmpty(spaceName))
            {
                try
                {
                    await SpaceVm.LoadSpaceDetails(spaceName);
                    if (SpaceVm.Topic != null)
                    {
                        posts = await SpaceVm.GetPostsByForumId(_forumId, 0, 10); // Lädt die ersten 10 Posts
                    }
                    else
                    {
                        _invalidSpaceFlag = true;
                    }
                }
                catch (Exception ex)
                {

                    _invalidSpaceFlag = true;
                }
                finally
                {
                    isLoading = false;
                }
            }
            else
            {
                _invalidSpaceFlag = true;
                isLoading = false;
            }
        }
    }

}