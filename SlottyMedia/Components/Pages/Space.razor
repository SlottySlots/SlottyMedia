@page "/space"
@using Microsoft.IdentityModel.Tokens
@using SlottyMedia.Backend.Dtos
@using SlottyMedia.Backend.Services.Interfaces
@using SlottyMedia.Backend.ViewModel.Interfaces
@inject NavigationManager NavigationManager
@inject ISpaceVm SpaceVm
@inject IAuthService AuthService

<PageTitle>Slotty Media | @SpaceVm.Topic</PageTitle>

@if (!SpaceVm.IsLoadingPage)
{

    <p class="text-lg">@SpaceVm.Topic</p>
    
    <div class="flex w-1/2">
        <h3 class="text-sm text-cadet-gray w-full">Posts: @SpaceVm.PostCount</h3>
        <h3 class="text-sm text-cadet-gray w-full">Created at: @SpaceVm.CreatedAt.ToString("dd-MMMM-yyyy")</h3>
    </div>
    
    <div class="w-full border-b border-athens-gray my-3"></div>
    
    
    
    @if (!SpaceVm.IsLoadingPosts)
    {
        <Pagination Page="SpaceVm.Posts" OnPageFetch="SpaceVm.LoadPosts" Class="w-full">
            @foreach (var post in SpaceVm.Posts)
            {
                <Post Dto="post" CurrentUserId="SpaceVm.AuthPrincipalId!.Value" OnPostClick="() => _navigateToPostPage(post.PostId)"/>
            }
        </Pagination>
    }
}
else
{
<p class="text-3xl font-medium text-center">Space not found!</p>
}
    
@code {
    [Parameter] public Guid UserId { get; set; }
    
    private void _navigateToPostPage(Guid postId)
    {
        NavigationManager.NavigateTo($"/post/{postId}");
    }

}